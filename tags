!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACCESS_FROM_CTL_CODE	.\SpinAPI\src\cyioctl.h	151;"	d
ACCESS_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^} ACCESS_STATE, *PACCESS_STATE;$/;"	t	typeref:struct:_ACCESS_STATE
ACDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ACDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_232h
ACDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ACDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_x_series
ACDriveCurrentH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ACDriveCurrentH;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_program_data
ACQ_OVERFLOW_ERROR	.\mrispinapi.h	55;"	d
ACSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ACSchmittInput;		\/\/ non-zero if AC bus pins are Schmitt input$/;"	m	struct:ft_eeprom_232h
ACSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ACSchmittInput;		\/\/ non-zero if AC bus pins are Schmitt input$/;"	m	struct:ft_eeprom_x_series
ACSchmittInputH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ACSchmittInputH;		\/\/ non-zero if AC pins are Schmitt input$/;"	m	struct:ft_program_data
ACSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ACSlowSlew;			\/\/ non-zero if AC bus pins have slow slew$/;"	m	struct:ft_eeprom_232h
ACSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ACSlowSlew;			\/\/ non-zero if AC bus pins have slow slew$/;"	m	struct:ft_eeprom_x_series
ACSlowSlewH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ACSlowSlewH;			\/\/ non-zero if AC pins have slow slew$/;"	m	struct:ft_program_data
ADC_FREQUENCY	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	41;"	d	file:
ADC_OFFSET_MAX	.\adc_offset.c	12;"	d	file:
ADC_OFFSET_MIN	.\adc_offset.c	11;"	d	file:
ADC_frequency	.\Sleator_apps\CPMG\cpmg.h	/^	double ADC_frequency;       \/\/MHz$/;"	m	struct:SCANPARAMS
ADC_frequency	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	double ADC_frequency;       \/\/MHz$/;"	m	struct:SCANPARAMS
ADD	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	53;"	d
ADDRESS_AND_SIZE_TO_SPAN_PAGES	.\SpinAPI\src\ddk_headers\winddk.h	7994;"	d
ADDR_REG_EN	.\SpinAPI\src\usb.h	33;"	d
ADDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_232h
ADDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_x_series
ADDriveCurrentH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADDriveCurrentH;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_program_data
ADSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADSchmittInput;		\/\/ non-zero if AD bus pins are Schmitt input$/;"	m	struct:ft_eeprom_232h
ADSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADSchmittInput;		\/\/ non-zero if AD bus pins are Schmitt input$/;"	m	struct:ft_eeprom_x_series
ADSchmittInputH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADSchmittInputH;		\/\/ non-zero if AD pins are Schmitt input$/;"	m	struct:ft_program_data
ADSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADSlowSlew;			\/\/ non-zero if AD bus pins have slow slew$/;"	m	struct:ft_eeprom_232h
ADSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADSlowSlew;			\/\/ non-zero if AD bus pins have slow slew$/;"	m	struct:ft_eeprom_x_series
ADSlowSlewH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADSlowSlewH;			\/\/ non-zero if AD pins have slow slew$/;"	m	struct:ft_program_data
ADriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_4232h
ADriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_program_data
ADriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADriverType;			\/\/ $/;"	m	struct:ft_eeprom_2232
ADriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADriverType;			\/\/ $/;"	m	struct:ft_eeprom_2232h
ADriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ADriverType;			\/\/ $/;"	m	struct:ft_eeprom_4232h
AHDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AHDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_2232h
AHDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AHDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_program_data
AHSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AHSchmittInput;		\/\/ non-zero if AH pins are Schmitt input$/;"	m	struct:ft_eeprom_2232h
AHSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AHSchmittInput;		\/\/ non-zero if AH pins are Schmitt input$/;"	m	struct:ft_program_data
AHSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AHSlowSlew;			\/\/ non-zero if AH pins have slow slew$/;"	m	struct:ft_eeprom_2232h
AHSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AHSlowSlew;			\/\/ non-zero if AH pins have slow slew$/;"	m	struct:ft_program_data
AIsFastSer	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsFastSer;			\/\/ non-zero if interface is Fast serial$/;"	m	struct:ft_eeprom_2232
AIsFastSer	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsFastSer;			\/\/ non-zero if interface is Fast serial$/;"	m	struct:ft_eeprom_2232h
AIsFifo	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsFifo;				\/\/ non-zero if interface is 245 FIFO$/;"	m	struct:ft_eeprom_2232
AIsFifo	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsFifo;				\/\/ non-zero if interface is 245 FIFO$/;"	m	struct:ft_eeprom_2232h
AIsFifoTar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsFifoTar;			\/\/ non-zero if interface is 245 FIFO CPU target$/;"	m	struct:ft_eeprom_2232
AIsFifoTar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsFifoTar;			\/\/ non-zero if interface is 245 FIFO CPU target$/;"	m	struct:ft_eeprom_2232h
AIsHighCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsHighCurrent;		\/\/ non-zero if interface is high current$/;"	m	struct:ft_eeprom_2232
AIsHighCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsHighCurrent;		\/\/ non-zero if interface is high current$/;"	m	struct:ft_program_data
AIsVCP	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsVCP;				\/\/ non-zero if interface is to use VCP drivers$/;"	m	struct:ft_program_data
AIsVCP7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsVCP7;				\/\/ non-zero if interface is to use VCP drivers$/;"	m	struct:ft_program_data
AIsVCP8	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR AIsVCP8;				\/\/ non-zero if interface is to use VCP drivers$/;"	m	struct:ft_program_data
ALDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ALDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_2232h
ALDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ALDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_program_data
ALLOCATION_FAILED	.\Sleator_apps\CPMG\cpmg.h	69;"	d
ALLOCATION_FAILED	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	65;"	d
ALL_CORES	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example1.c	40;"	d	file:
ALL_CORES	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example2.c	40;"	d	file:
ALL_CORES	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example3.c	41;"	d	file:
ALL_CORES	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example4.c	42;"	d	file:
ALL_CORES	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example1.c	40;"	d	file:
ALL_CORES	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example2.c	40;"	d	file:
ALL_CORES	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example3.c	43;"	d	file:
ALL_DACS	.\mrispinapi.h	104;"	d
ALL_FLAGS_ON	.\SpinAPI\include\pulseblaster.h	50;"	d
ALL_FLAGS_ON	.\SpinAPI\src\pulseblaster.h	50;"	d
ALSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ALSchmittInput;		\/\/ non-zero if AL pins are Schmitt input$/;"	m	struct:ft_eeprom_2232h
ALSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ALSchmittInput;		\/\/ non-zero if AL pins are Schmitt input$/;"	m	struct:ft_program_data
ALSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ALSlowSlew;			\/\/ non-zero if AL pins have slow slew$/;"	m	struct:ft_eeprom_2232h
ALSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ALSlowSlew;			\/\/ non-zero if AL pins have slow slew$/;"	m	struct:ft_program_data
AMCC_DEVID	.\SpinAPI\src\caps.h	4;"	d
AMP0	.\Sleator_apps\CPMG\cpmg.h	58;"	d
AMP0	.\Sleator_apps\Hahn_echo\Hahn_echo.h	66;"	d
AMP0	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	63;"	d
AMP0	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	66;"	d
AMP0	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	63;"	d
AMP0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	51;"	d	file:
AMP0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	48;"	d	file:
AMP0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	46;"	d	file:
AMP0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	49;"	d	file:
AMP0	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	51;"	d
AMP0	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	54;"	d
AMP1	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	52;"	d	file:
AMP1	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	50;"	d	file:
AMP2	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	53;"	d	file:
AMP2	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	51;"	d	file:
AMP3	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	54;"	d	file:
AMP3	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	52;"	d	file:
AMP4	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	55;"	d	file:
AMP_DATA_ERROR	.\devices.h	39;"	d
ANALOG_OFF	.\SpinAPI\include\radioprocessor.h	29;"	d
ANALOG_OFF	.\SpinAPI\src\radioprocessor.h	29;"	d
ANALOG_ON	.\SpinAPI\include\radioprocessor.h	28;"	d
ANALOG_ON	.\SpinAPI\src\radioprocessor.h	28;"	d
APC_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3711;"	d
API_CURRENT_BOARD_NOT_INIT	.\mrispinapi.h	81;"	d
API_NOT_INITIALIZED	.\mrispinapi.h	78;"	d
API_NO_BOARDS_CONNECTED	.\mrispinapi.h	79;"	d
API_NO_BOARD_SELECTED	.\mrispinapi.h	80;"	d
API_OK	.\mrispinapi.h	77;"	d
ARGUMENT_PRESENT	.\SpinAPI\src\ddk_headers\winddk.h	3917;"	d
ARIIsTXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ARIIsTXDEN;			\/\/ non-zero if port A uses RI as RS485 TXDEN$/;"	m	struct:ft_eeprom_4232h
ARIIsTXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ARIIsTXDEN;			\/\/ non-zero if port A uses RI as RS485 TXDEN$/;"	m	struct:ft_program_data
ASSERT	.\SpinAPI\src\ddk_headers\winddk.h	3985;"	d
ASSERT	.\SpinAPI\src\ddk_headers\winddk.h	4009;"	d
ASSERTMSG	.\SpinAPI\src\ddk_headers\winddk.h	3989;"	d
ASSERTMSG	.\SpinAPI\src\ddk_headers\winddk.h	4010;"	d
ASchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ASchmittInput;		\/\/ non-zero if A pins are Schmitt input$/;"	m	struct:ft_eeprom_4232h
ASchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ASchmittInput;		\/\/ non-zero if A pins are Schmitt input$/;"	m	struct:ft_program_data
ASlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ASlowSlew;			\/\/ non-zero if A pins have slow slew$/;"	m	struct:ft_eeprom_4232h
ASlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR ASlowSlew;			\/\/ non-zero if A pins have slow slew$/;"	m	struct:ft_program_data
AT_EXTENDABLE_FILE	.\SpinAPI\src\ddk_headers\winddk.h	8933;"	d
AT_RESERVED	.\SpinAPI\src\ddk_headers\winddk.h	8935;"	d
AT_ROUND_TO_PAGE	.\SpinAPI\src\ddk_headers\winddk.h	8936;"	d
AUX	.\SpinAPI\src\if.h	54;"	d
AXIS	.\SpinAPI\src\fid.h	23;"	d
Abandoned	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Abandoned;$/;"	m	struct:_KMUTANT
Absolute	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Absolute;$/;"	m	struct:_DISPATCHER_HEADER
AccessState	.\SpinAPI\src\ddk_headers\winddk.h	/^  PACCESS_STATE  AccessState;$/;"	m	struct:_IO_SECURITY_CONTEXT
AcquireFileForNtCreateSection	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_ACQUIRE_FILE  AcquireFileForNtCreateSection;$/;"	m	struct:_FAST_IO_DISPATCH
AcquireForCcFlush	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_ACQUIRE_FOR_CCFLUSH  AcquireForCcFlush;$/;"	m	struct:_FAST_IO_DISPATCH
AcquireForModWrite	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_ACQUIRE_FOR_MOD_WRITE  AcquireForModWrite;$/;"	m	struct:_FAST_IO_DISPATCH
ActiveCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  SHORT  ActiveCount;$/;"	m	struct:_ERESOURCE
ActiveThreadCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ActiveThreadCount;$/;"	m	struct:_DEVICE_OBJECT
AdapterId	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  AdapterId;$/;"	m	struct:_CM_MCA_POS_DATA
AddDevice	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  AddDevice;$/;"	m	struct:_DRIVER_EXTENSION
Address	.\SpinAPI\src\ddk_headers\winddk.h	/^    PVOID  Address;$/;"	m	union:_ERESOURCE::__anon48
Address	.\SpinAPI\src\ddk_headers\winddk.h	/^  PHYSICAL_ADDRESS  Address;   $/;"	m	struct:_SCATTER_GATHER_ELEMENT
Address	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Address;$/;"	m	struct:_DEVICE_CAPABILITIES
AddressHighByte	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  AddressHighByte;$/;"	m	struct:_EISA_MEMORY_CONFIGURATION
AddressLowWord	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  AddressLowWord;$/;"	m	struct:_EISA_MEMORY_CONFIGURATION
AdvanceOnly	.\SpinAPI\src\ddk_headers\winddk.h	/^          BOOLEAN  AdvanceOnly;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon55::__anon56::__anon57
Affinity	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Affinity;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon31
Alignment	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Alignment;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon38
Alignment	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Alignment;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon39
Alignment	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Alignment;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon42
AlignmentRequirement	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  AlignmentRequirement;$/;"	m	struct:_DEVICE_OBJECT
AlignmentRequirement	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  AlignmentRequirement;$/;"	m	struct:_FILE_ALIGNMENT_INFORMATION
AllLoggerHandlesClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  AllLoggerHandlesClass,$/;"	e	enum:_TRACE_INFORMATION_CLASS
AllocateAdapterChannel	.\SpinAPI\src\ddk_headers\winddk.h	/^  PALLOCATE_ADAPTER_CHANNEL  AllocateAdapterChannel;$/;"	m	struct:_DMA_OPERATIONS
AllocateCommonBuffer	.\SpinAPI\src\ddk_headers\winddk.h	/^  PALLOCATE_COMMON_BUFFER  AllocateCommonBuffer;$/;"	m	struct:_DMA_OPERATIONS
AllocateTag	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONG  AllocateTag;$/;"	m	struct:_IO_REMOVE_LOCK_DBG_BLOCK
AllocatedResources	.\SpinAPI\src\ddk_headers\winddk.h	/^      PCM_RESOURCE_LIST  AllocatedResources;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon77
AllocatedResourcesTranslated	.\SpinAPI\src\ddk_headers\winddk.h	/^      PCM_RESOURCE_LIST  AllocatedResourcesTranslated;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon77
AllocationFlags	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  AllocationFlags;$/;"	m	struct:_IRP
AllocationSize	.\SpinAPI\src\ddk_headers\winddk.h	/^    LARGE_INTEGER  AllocationSize;$/;"	m	union:_IRP::__anon19
AllocationSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  AllocationSize;                               $/;"	m	struct:_FILE_NETWORK_OPEN_INFORMATION
AllocationSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  AllocationSize;$/;"	m	struct:_FILE_STANDARD_INFORMATION
AlternativeLists	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  AlternativeLists;$/;"	m	struct:_IO_RESOURCE_REQUIREMENTS_LIST
Apc	.\SpinAPI\src\ddk_headers\winddk.h	/^    KAPC  Apc;$/;"	m	union:_IRP::__anon21
ApcDisable	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  ApcDisable;$/;"	m	struct:_KMUTANT
ApcEnvironment	.\SpinAPI\src\ddk_headers\winddk.h	/^  CCHAR  ApcEnvironment;$/;"	m	struct:_IRP
ApcListEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  ApcListEntry;$/;"	m	struct:_KAPC
ApcMode	.\SpinAPI\src\ddk_headers\winddk.h	/^  KPROCESSOR_MODE  ApcMode;$/;"	m	struct:_KAPC
ApcStateIndex	.\SpinAPI\src\ddk_headers\winddk.h	/^  CCHAR  ApcStateIndex;$/;"	m	struct:_KAPC
ArbitraryUserPointer	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  ArbitraryUserPointer;  \/* 14 *\/$/;"	m	struct:_KPCR_TIB
ArcSystem	.\SpinAPI\src\ddk_headers\winddk.h	/^  ArcSystem,$/;"	e	enum:_CONFIGURATION_TYPE
Argument1	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVOID  Argument1;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon79
Argument2	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVOID  Argument2;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon79
Argument3	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVOID  Argument3;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon79
Argument4	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVOID  Argument4;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon79
AsULONG	.\SpinAPI\src\ddk_headers\winddk.h	/^    ULONG  AsULONG;$/;"	m	union:_PCI_SLOT_NUMBER::__anon82
AssignSecurityDescriptor	.\SpinAPI\src\ddk_headers\winddk.h	/^  AssignSecurityDescriptor$/;"	e	enum:_SECURITY_OPERATION_CODE
AssociatedIrp	.\SpinAPI\src\ddk_headers\winddk.h	/^  } AssociatedIrp;$/;"	m	struct:_IRP	typeref:union:_IRP::__anon18
AsynchronousParameters	.\SpinAPI\src\ddk_headers\winddk.h	/^    } AsynchronousParameters;$/;"	m	union:_IRP::__anon19	typeref:struct:_IRP::__anon19::__anon20
AtDiskPrimaryAddressClaimed	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  AtDiskPrimaryAddressClaimed;$/;"	m	struct:_CONFIGURATION_INFORMATION
AtDiskSecondaryAddressClaimed	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  AtDiskSecondaryAddressClaimed;$/;"	m	struct:_CONFIGURATION_INFORMATION
AttachedDevice	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _DEVICE_OBJECT  *AttachedDevice;$/;"	m	struct:_DEVICE_OBJECT	typeref:struct:_DEVICE_OBJECT::_DEVICE_OBJECT
Attributes	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Attributes;$/;"	m	struct:_RTL_RANGE
AudioController	.\SpinAPI\src\ddk_headers\winddk.h	/^  AudioController,$/;"	e	enum:_CONFIGURATION_TYPE
AuditPrivileges	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  AuditPrivileges;$/;"	m	struct:_ACCESS_STATE
AutoInitialize	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  AutoInitialize;$/;"	m	struct:_DEVICE_DESCRIPTION
AuxData	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  AuxData;$/;"	m	struct:_ACCESS_STATE
AuxiliaryBuffer	.\SpinAPI\src\ddk_headers\winddk.h	/^      PCHAR  AuxiliaryBuffer;$/;"	m	struct:_IRP::__anon21::__anon22
BANK_DATARAM	.\SpinAPI\src\usb.h	29;"	d
BANK_DDSRAM	.\SpinAPI\src\usb.h	30;"	d
BAR0	.\board.h	/^enum{BAR0=0,BAR1,BAR2,BAR3,BAR4,BAR5,BAR6,BAR7};$/;"	e	enum:__anon1
BAR1	.\board.h	/^enum{BAR0=0,BAR1,BAR2,BAR3,BAR4,BAR5,BAR6,BAR7};$/;"	e	enum:__anon1
BAR2	.\board.h	/^enum{BAR0=0,BAR1,BAR2,BAR3,BAR4,BAR5,BAR6,BAR7};$/;"	e	enum:__anon1
BAR3	.\board.h	/^enum{BAR0=0,BAR1,BAR2,BAR3,BAR4,BAR5,BAR6,BAR7};$/;"	e	enum:__anon1
BAR4	.\board.h	/^enum{BAR0=0,BAR1,BAR2,BAR3,BAR4,BAR5,BAR6,BAR7};$/;"	e	enum:__anon1
BAR5	.\board.h	/^enum{BAR0=0,BAR1,BAR2,BAR3,BAR4,BAR5,BAR6,BAR7};$/;"	e	enum:__anon1
BAR6	.\board.h	/^enum{BAR0=0,BAR1,BAR2,BAR3,BAR4,BAR5,BAR6,BAR7};$/;"	e	enum:__anon1
BAR7	.\board.h	/^enum{BAR0=0,BAR1,BAR2,BAR3,BAR4,BAR5,BAR6,BAR7};$/;"	e	enum:__anon1
BCDBYTEMASK	.\SpinAPI\include\spinpts.h	9;"	d
BCDBYTEMASK	.\SpinAPI\src\spinpts.h	9;"	d
BCDDisableSleep	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BCDDisableSleep;		\/\/ forces the device never to go into sleep mode$/;"	m	struct:ft_eeprom_x_series
BCDEnable	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BCDEnable;			\/\/ Enable Battery Charger Detection$/;"	m	struct:ft_eeprom_x_series
BCDFREQ	.\SpinAPI\include\spinpts.h	/^typedef struct BCDFREQ {$/;"	s
BCDFREQ	.\SpinAPI\include\spinpts.h	/^} BCDFREQ;$/;"	t	typeref:struct:BCDFREQ
BCDFREQ	.\SpinAPI\src\spinpts.h	/^typedef struct BCDFREQ {$/;"	s
BCDFREQ	.\SpinAPI\src\spinpts.h	/^} BCDFREQ;$/;"	t	typeref:struct:BCDFREQ
BCDForceCbusPWREN	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BCDForceCbusPWREN;	\/\/ asserts the power enable signal on CBUS when charging port detected$/;"	m	struct:ft_eeprom_x_series
BDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_4232h
BDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_program_data
BDriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BDriverType;			\/\/ $/;"	m	struct:ft_eeprom_2232
BDriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BDriverType;			\/\/ $/;"	m	struct:ft_eeprom_2232h
BDriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BDriverType;			\/\/ $/;"	m	struct:ft_eeprom_4232h
BHDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BHDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_2232h
BHDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BHDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_program_data
BHSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BHSchmittInput;		\/\/ non-zero if BH pins are Schmitt input$/;"	m	struct:ft_eeprom_2232h
BHSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BHSchmittInput;		\/\/ non-zero if BH pins are Schmitt input$/;"	m	struct:ft_program_data
BHSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BHSlowSlew;			\/\/ non-zero if BH pins have slow slew$/;"	m	struct:ft_eeprom_2232h
BHSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BHSlowSlew;			\/\/ non-zero if BH pins have slow slew$/;"	m	struct:ft_program_data
BIST	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  BIST;$/;"	m	struct:_PCI_COMMON_CONFIG
BITMAPFILEHEADER	.\bitmap.h	/^} BITMAPFILEHEADER, BMPFH;$/;"	t	typeref:struct:tagBITMAPFILEHEADER
BITMAPINFOHEADER	.\bitmap.h	/^} BITMAPINFOHEADER, BMPIH;$/;"	t	typeref:struct:tagBITMAPINFOHEADER
BITMAP_H	.\bitmap.h	8;"	d
BIsFastSer	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsFastSer;			\/\/ non-zero if interface is Fast serial$/;"	m	struct:ft_eeprom_2232
BIsFastSer	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsFastSer;			\/\/ non-zero if interface is Fast serial$/;"	m	struct:ft_eeprom_2232h
BIsFifo	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsFifo;				\/\/ non-zero if interface is 245 FIFO$/;"	m	struct:ft_eeprom_2232
BIsFifo	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsFifo;				\/\/ non-zero if interface is 245 FIFO$/;"	m	struct:ft_eeprom_2232h
BIsFifoTar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsFifoTar;			\/\/ non-zero if interface is 245 FIFO CPU target$/;"	m	struct:ft_eeprom_2232
BIsFifoTar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsFifoTar;			\/\/ non-zero if interface is 245 FIFO CPU target$/;"	m	struct:ft_eeprom_2232h
BIsHighCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsHighCurrent;		\/\/ non-zero if interface is high current$/;"	m	struct:ft_eeprom_2232
BIsHighCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsHighCurrent;		\/\/ non-zero if interface is high current$/;"	m	struct:ft_program_data
BIsVCP	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsVCP;				\/\/ non-zero if interface is to use VCP drivers$/;"	m	struct:ft_program_data
BIsVCP7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsVCP7;				\/\/ non-zero if interface is to use VCP drivers$/;"	m	struct:ft_program_data
BIsVCP8	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BIsVCP8;				\/\/ non-zero if interface is to use VCP drivers$/;"	m	struct:ft_program_data
BLANK_PA	.\Sleator_apps\CPMG\cpmg.h	59;"	d
BLANK_PA	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	55;"	d
BLDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BLDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_2232h
BLDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BLDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_program_data
BLSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BLSchmittInput;		\/\/ non-zero if BL pins are Schmitt input$/;"	m	struct:ft_eeprom_2232h
BLSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BLSchmittInput;		\/\/ non-zero if BL pins are Schmitt input$/;"	m	struct:ft_program_data
BLSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BLSlowSlew;			\/\/ non-zero if BL pins have slow slew$/;"	m	struct:ft_eeprom_2232h
BLSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BLSlowSlew;			\/\/ non-zero if BL pins have slow slew$/;"	m	struct:ft_program_data
BMPFH	.\bitmap.h	/^} BITMAPFILEHEADER, BMPFH;$/;"	t	typeref:struct:tagBITMAPFILEHEADER
BMPFILE	.\bitmap.h	/^} BMPFILE;$/;"	t	typeref:struct:tagBMPFILE
BMPIH	.\bitmap.h	/^} BITMAPINFOHEADER, BMPIH;$/;"	t	typeref:struct:tagBITMAPINFOHEADER
BMREQUEST_CLASS	.\SpinAPI\src\ddk_headers\usb100.h	73;"	d
BMREQUEST_DEVICE_TO_HOST	.\SpinAPI\src\ddk_headers\usb100.h	70;"	d
BMREQUEST_HOST_TO_DEVICE	.\SpinAPI\src\ddk_headers\usb100.h	69;"	d
BMREQUEST_STANDARD	.\SpinAPI\src\ddk_headers\usb100.h	72;"	d
BMREQUEST_TO_DEVICE	.\SpinAPI\src\ddk_headers\usb100.h	76;"	d
BMREQUEST_TO_ENDPOINT	.\SpinAPI\src\ddk_headers\usb100.h	78;"	d
BMREQUEST_TO_INTERFACE	.\SpinAPI\src\ddk_headers\usb100.h	77;"	d
BMREQUEST_TO_OTHER	.\SpinAPI\src\ddk_headers\usb100.h	79;"	d
BMREQUEST_VENDOR	.\SpinAPI\src\ddk_headers\usb100.h	74;"	d
BM_REQ_TYPE	.\SpinAPI\src\cyioctl.h	/^} BM_REQ_TYPE, *PBM_REQ_TYPE;$/;"	t	typeref:struct:_BM_REQ_TYPE
BNC0_CLK	.\SpinAPI\include\radioprocessor.h	466;"	d
BNC0_CLK	.\SpinAPI\src\radioprocessor.h	466;"	d
BOARD_H	.\board.h	20;"	d
BOARD_INFO	.\SpinAPI\src\caps.h	/^} BOARD_INFO;$/;"	t	typeref:struct:__anon10
BOARD_INFO	.\mrispinapi.h	/^} BOARD_INFO;$/;"	t	typeref:struct:__anon4
BOARD_NOT_DETECTED	.\Sleator_apps\CPMG\cpmg.h	63;"	d
BOARD_NOT_DETECTED	.\Sleator_apps\Hahn_echo\Hahn_echo.h	70;"	d
BOARD_NOT_DETECTED	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	67;"	d
BOARD_NOT_DETECTED	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	70;"	d
BOARD_NOT_DETECTED	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	67;"	d
BOARD_NOT_DETECTED	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	60;"	d
BOARD_NOT_DETECTED	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	59;"	d
BOARD_STATUS_BUSY	.\Sleator_apps\CPMG\cpmg.h	43;"	d
BOARD_STATUS_BUSY	.\Sleator_apps\Hahn_echo\Hahn_echo.h	51;"	d
BOARD_STATUS_BUSY	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	48;"	d
BOARD_STATUS_BUSY	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	51;"	d
BOARD_STATUS_BUSY	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	48;"	d
BOARD_STATUS_BUSY	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	36;"	d
BOARD_STATUS_BUSY	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	39;"	d
BOARD_STATUS_IDLE	.\Sleator_apps\CPMG\cpmg.h	42;"	d
BOARD_STATUS_IDLE	.\Sleator_apps\Hahn_echo\Hahn_echo.h	50;"	d
BOARD_STATUS_IDLE	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	47;"	d
BOARD_STATUS_IDLE	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	50;"	d
BOARD_STATUS_IDLE	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	47;"	d
BOARD_STATUS_IDLE	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	35;"	d
BOARD_STATUS_IDLE	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	38;"	d	file:
BOARD_STATUS_IDLE	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	38;"	d
BOOL	.\SpinAPI\src\util.c	16;"	d	file:
BOOTDISK_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} BOOTDISK_INFORMATION, *PBOOTDISK_INFORMATION;$/;"	t	typeref:struct:_BOOTDISK_INFORMATION
BOOTDISK_INFORMATION_EX	.\SpinAPI\src\ddk_headers\winddk.h	/^} BOOTDISK_INFORMATION_EX, *PBOOTDISK_INFORMATION_EX;$/;"	t	typeref:struct:_BOOTDISK_INFORMATION_EX
BRANCH	.\SpinAPI\include\pulseblaster.h	29;"	d
BRANCH	.\SpinAPI\src\pulseblaster.h	29;"	d
BRANCH	.\mrispinapi.h	95;"	d
BRIIsTXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BRIIsTXDEN;			\/\/ non-zero if port B uses RI as RS485 TXDEN$/;"	m	struct:ft_eeprom_4232h
BRIIsTXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BRIIsTXDEN;			\/\/ non-zero if port B uses RI as RS485 TXDEN$/;"	m	struct:ft_program_data
BSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BSchmittInput;		\/\/ non-zero if B pins are Schmitt input$/;"	m	struct:ft_eeprom_4232h
BSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BSchmittInput;		\/\/ non-zero if B pins are Schmitt input$/;"	m	struct:ft_program_data
BSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BSlowSlew;			\/\/ non-zero if B pins have slow slew$/;"	m	struct:ft_eeprom_4232h
BSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR BSlowSlew;			\/\/ non-zero if B pins have slow slew$/;"	m	struct:ft_program_data
BUS_DATA_TYPE	.\SpinAPI\src\ddk_headers\win2k.h	/^} BUS_DATA_TYPE, *PBUS_DATA_TYPE;$/;"	t	typeref:enum:_BUS_DATA_TYPE
BUS_INTERFACE_STANDARD	.\SpinAPI\src\ddk_headers\winddk.h	/^} BUS_INTERFACE_STANDARD, *PBUS_INTERFACE_STANDARD;$/;"	t	typeref:struct:_BUS_INTERFACE_STANDARD
BUS_QUERY_ID_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} BUS_QUERY_ID_TYPE, *PBUS_QUERY_ID_TYPE;$/;"	t	typeref:enum:_BUS_QUERY_ID_TYPE
BYPASS_AVERAGE	.\SpinAPI\include\radioprocessor.h	463;"	d
BYPASS_AVERAGE	.\SpinAPI\src\radioprocessor.h	463;"	d
BYPASS_CIC	.\SpinAPI\include\radioprocessor.h	468;"	d
BYPASS_CIC	.\SpinAPI\src\radioprocessor.h	468;"	d
BYPASS_FIR	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set BYPASS_FIR=1$/;"	v
BYPASS_FIR	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set BYPASS_FIR=1$/;"	v
BYPASS_FIR	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set BYPASS_FIR=1$/;"	v
BYPASS_FIR	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set BYPASS_FIR=1$/;"	v
BYPASS_FIR	.\SpinAPI\include\radioprocessor.h	469;"	d
BYPASS_FIR	.\SpinAPI\src\radioprocessor.h	469;"	d
BYPASS_FIR	.\mrispinapi.h	118;"	d
BYPASS_MULT	.\SpinAPI\include\radioprocessor.h	470;"	d
BYPASS_MULT	.\SpinAPI\src\radioprocessor.h	470;"	d
BYTES_TO_PAGES	.\SpinAPI\src\ddk_headers\winddk.h	3933;"	d
BYTE_OFFSET	.\SpinAPI\src\ddk_headers\winddk.h	3925;"	d
BackOffice	.\SpinAPI\src\ddk_headers\winddk.h	/^  BackOffice,$/;"	e	enum:_SUITE_TYPE
Base	.\SpinAPI\src\ddk_headers\winddk.h	/^          ULONG  Base;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2::__anon81
BaseAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^  PHYSICAL_ADDRESS  BaseAddress;$/;"	m	struct:_PHYSICAL_MEMORY_RANGE
BaseAddresses	.\SpinAPI\src\ddk_headers\winddk.h	/^        ULONG  BaseAddresses[PCI_TYPE1_ADDRESSES];$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
BaseAddresses	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  BaseAddresses[PCI_TYPE0_ADDRESSES];$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
BaseClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  BaseClass;$/;"	m	struct:_PCI_COMMON_CONFIG
BaudClock	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  BaudClock;$/;"	m	struct:_CM_SERIAL_DEVICE_DATA
BaudRate	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD BaudRate;				\/* Baudrate at which running			*\/$/;"	m	struct:_FTDCB
BinaryStringToInteger	.\SpinAPI\interpreter\src\interpreter.cpp	/^int BinaryStringToInteger(const char *input, int *output)$/;"	f
Blade	.\SpinAPI\src\ddk_headers\winddk.h	/^  Blade,$/;"	e	enum:_SUITE_TYPE
BlockSize	.\SpinAPI\src\ddk_headers\winnt4.h	/^  ULONG  BlockSize;$/;"	m	struct:_ZONE_HEADER
Blocks	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_REMOVE_LOCK_TRACKING_BLOCK  Blocks;$/;"	m	struct:_IO_REMOVE_LOCK_DBG_BLOCK
BootDeviceGuid	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  BootDeviceGuid;$/;"	m	struct:_BOOTDISK_INFORMATION_EX
BootDeviceIsGpt	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  BootDeviceIsGpt;$/;"	m	struct:_BOOTDISK_INFORMATION_EX
BootDeviceSignature	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  BootDeviceSignature;$/;"	m	struct:_BOOTDISK_INFORMATION
BootDeviceSignature	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  BootDeviceSignature;$/;"	m	struct:_BOOTDISK_INFORMATION_EX
BootIndicator	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  BootIndicator;$/;"	m	struct:_PARTITION_INFORMATION_MBR
BootPartitionOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONGLONG  BootPartitionOffset;$/;"	m	struct:_BOOTDISK_INFORMATION
BootPartitionOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONGLONG  BootPartitionOffset;$/;"	m	struct:_BOOTDISK_INFORMATION_EX
BridgeControl	.\SpinAPI\src\ddk_headers\winddk.h	/^        USHORT  BridgeControl;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
BridgeControl	.\SpinAPI\src\ddk_headers\winddk.h	/^        USHORT  BridgeControl;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
Buffer	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVOID  Buffer;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon69
Buffer	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVOID  Buffer;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon78
Buffer	.\SpinAPI\src\ddk_headers\winddk.h	/^  PULONG  Buffer;$/;"	m	struct:_RTL_BITMAP
Buffer	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Buffer;$/;"	m	struct:_KBUGCHECK_CALLBACK_RECORD
BufferChainingDpc	.\SpinAPI\src\ddk_headers\winddk.h	/^  PKDPC  BufferChainingDpc;$/;"	m	struct:_WAIT_CONTEXT_BLOCK
BufferEmpty	.\SpinAPI\src\ddk_headers\winddk.h	/^    BufferEmpty,$/;"	e	enum:_KBUGCHECK_BUFFER_DUMP_STATE
BufferFinished	.\SpinAPI\src\ddk_headers\winddk.h	/^    BufferFinished,$/;"	e	enum:_KBUGCHECK_BUFFER_DUMP_STATE
BufferIncomplete	.\SpinAPI\src\ddk_headers\winddk.h	/^    BufferIncomplete$/;"	e	enum:_KBUGCHECK_BUFFER_DUMP_STATE
BufferInserted	.\SpinAPI\src\ddk_headers\winddk.h	/^    BufferInserted,$/;"	e	enum:_KBUGCHECK_BUFFER_DUMP_STATE
BufferLength	.\SpinAPI\src\cyioctl.h	/^    ULONG BufferLength;$/;"	m	struct:_SINGLE_TRANSFER
BufferOffset	.\SpinAPI\src\cyioctl.h	/^    ULONG BufferOffset;$/;"	m	struct:_SINGLE_TRANSFER
BufferSize	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  BufferSize;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon78
BufferStarted	.\SpinAPI\src\ddk_headers\winddk.h	/^    BufferStarted,$/;"	e	enum:_KBUGCHECK_BUFFER_DUMP_STATE
BuildMdlFromScatterGatherList	.\SpinAPI\src\ddk_headers\winddk.h	/^  PBUILD_MDL_FROM_SCATTER_GATHER_LIST  BuildMdlFromScatterGatherList;$/;"	m	struct:_DMA_OPERATIONS
BuildScatterGatherList	.\SpinAPI\src\ddk_headers\winddk.h	/^  PBUILD_SCATTER_GATHER_LIST  BuildScatterGatherList;$/;"	m	struct:_DMA_OPERATIONS
BusNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^    } BusNumber;$/;"	m	union:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28	typeref:struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon35
BusNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^    } BusNumber;$/;"	m	union:_IO_RESOURCE_DESCRIPTOR::__anon37	typeref:struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon44
BusNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  BusNumber; $/;"	m	struct:_DEVICE_DESCRIPTION
BusNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  BusNumber;$/;"	m	struct:_CM_FULL_RESOURCE_DESCRIPTOR
BusNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  BusNumber;$/;"	m	struct:_IO_RESOURCE_REQUIREMENTS_LIST
BusNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  BusNumber;$/;"	m	struct:_PNP_BUS_INFORMATION
BusQueryCompatibleIDs	.\SpinAPI\src\ddk_headers\winddk.h	/^  BusQueryCompatibleIDs,$/;"	e	enum:_BUS_QUERY_ID_TYPE
BusQueryDeviceID	.\SpinAPI\src\ddk_headers\winddk.h	/^  BusQueryDeviceID,$/;"	e	enum:_BUS_QUERY_ID_TYPE
BusQueryDeviceSerialNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  BusQueryDeviceSerialNumber$/;"	e	enum:_BUS_QUERY_ID_TYPE
BusQueryHardwareIDs	.\SpinAPI\src\ddk_headers\winddk.h	/^  BusQueryHardwareIDs,$/;"	e	enum:_BUS_QUERY_ID_TYPE
BusQueryInstanceID	.\SpinAPI\src\ddk_headers\winddk.h	/^  BusQueryInstanceID,$/;"	e	enum:_BUS_QUERY_ID_TYPE
BusRelations	.\SpinAPI\src\ddk_headers\winddk.h	/^  BusRelations,$/;"	e	enum:_DEVICE_RELATION_TYPE
BusTypeGuid	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  BusTypeGuid;$/;"	m	struct:_PNP_BUS_INFORMATION
Busy	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Busy;$/;"	m	struct:_KDEVICE_QUEUE
Busy	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Busy;$/;"	m	struct:_FILE_OBJECT
ByteCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ByteCount;$/;"	m	struct:_MDL
ByteOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^      LARGE_INTEGER  ByteOffset;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon52
ByteOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^      LARGE_INTEGER  ByteOffset;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon53
ByteOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ByteOffset;$/;"	m	struct:_MDL
ByteSize	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		BYTE ByteSize;				\/* Number of bits\/byte, 4-8				*\/$/;"	m	struct:_FTDCB
CALLBACK	.\SpinAPI\src\ddk_headers\ntddk.h	58;"	d
CBus	.\SpinAPI\src\ddk_headers\winddk.h	/^  CBus,$/;"	e	enum:_INTERFACE_TYPE
CDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR CDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_4232h
CDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR CDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_program_data
CDriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR CDriverType;			\/\/ $/;"	m	struct:ft_eeprom_4232h
CINT	.\SpinAPI\src\ddk_headers\ntddk.h	/^typedef CONST int CINT;$/;"	t
CIS	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  CIS;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
CIsVCP8	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR CIsVCP8;				\/\/ non-zero if interface is to use VCP drivers$/;"	m	struct:ft_program_data
CLIENT_ID	.\SpinAPI\src\ddk_headers\winddk.h	/^} CLIENT_ID, *PCLIENT_ID;$/;"	t	typeref:struct:_CLIENT_ID
CLOCK	.\SpinAPI\examples\PBDDS-III\pbdds3_ex1.c	38;"	d	file:
CLOCK	.\SpinAPI\examples\PBDDS-III\pbdds3_ex2.c	46;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example1.c	33;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example2.c	33;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example3.c	34;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example4.c	35;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example1.c	33;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example2.c	33;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example3.c	36;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example1.c	43;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example2.c	41;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example3.c	43;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example4.c	43;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example5.c	42;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_reset.c	38;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_trigger.c	37;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_example1.c	47;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_shortpulse_disable.c	28;"	d	file:
CLOCK	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_start_address.c	28;"	d	file:
CLOCK1_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3715;"	d
CLOCK2_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3716;"	d
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTL_only.c	35;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	38;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	37;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	35;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_load_shape_ram.c	35;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	38;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	33;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	35;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	28;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	29;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_cont.c	33;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_excite_test.c	34;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	34;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_phase_test.c	33;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_long_delay_test.c	48;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_loop_test.c	44;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_subtest.c	35;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\RadioProcessor\awg.c	34;"	d	file:
CLOCK_FREQ	.\SpinAPI\examples\RadioProcessor\excite_test.c	34;"	d	file:
CLOCK_FREQ0	.\SpinAPI\examples\PulseBlaster24\pb24_two_boards.c	46;"	d	file:
CLOCK_FREQ1	.\SpinAPI\examples\PulseBlaster24\pb24_two_boards.c	48;"	d	file:
CM_EISA_FUNCTION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_EISA_FUNCTION_INFORMATION, *PCM_EISA_FUNCTION_INFORMATION;$/;"	t	typeref:struct:_CM_EISA_FUNCTION_INFORMATION
CM_EISA_SLOT_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_EISA_SLOT_INFORMATION, *PCM_EISA_SLOT_INFORMATION;$/;"	t	typeref:struct:_CM_EISA_SLOT_INFORMATION
CM_FLOPPY_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_FLOPPY_DEVICE_DATA, *PCM_FLOPPY_DEVICE_DATA;$/;"	t	typeref:struct:_CM_FLOPPY_DEVICE_DATA
CM_FULL_RESOURCE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_FULL_RESOURCE_DESCRIPTOR, *PCM_FULL_RESOURCE_DESCRIPTOR;$/;"	t	typeref:struct:_CM_FULL_RESOURCE_DESCRIPTOR
CM_INT13_DRIVE_PARAMETER	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_INT13_DRIVE_PARAMETER, *PCM_INT13_DRIVE_PARAMETER;$/;"	t	typeref:struct:_CM_INT13_DRIVE_PARAMETER
CM_KEYBOARD_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_KEYBOARD_DEVICE_DATA, *PCM_KEYBOARD_DEVICE_DATA;$/;"	t	typeref:struct:_CM_KEYBOARD_DEVICE_DATA
CM_MCA_POS_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_MCA_POS_DATA, *PCM_MCA_POS_DATA;$/;"	t	typeref:struct:_CM_MCA_POS_DATA
CM_PARTIAL_RESOURCE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_PARTIAL_RESOURCE_DESCRIPTOR, *PCM_PARTIAL_RESOURCE_DESCRIPTOR;$/;"	t	typeref:struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR
CM_PARTIAL_RESOURCE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_PARTIAL_RESOURCE_LIST, *PCM_PARTIAL_RESOURCE_LIST;$/;"	t	typeref:struct:_CM_PARTIAL_RESOURCE_LIST
CM_POWER_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_POWER_DATA, *PCM_POWER_DATA;$/;"	t	typeref:struct:CM_Power_Data_s
CM_Power_Data_s	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct CM_Power_Data_s {$/;"	s
CM_RESOURCE_DMA_16	.\SpinAPI\src\ddk_headers\winddk.h	1346;"	d
CM_RESOURCE_DMA_32	.\SpinAPI\src\ddk_headers\winddk.h	1347;"	d
CM_RESOURCE_DMA_8	.\SpinAPI\src\ddk_headers\winddk.h	1345;"	d
CM_RESOURCE_DMA_8_AND_16	.\SpinAPI\src\ddk_headers\winddk.h	1348;"	d
CM_RESOURCE_DMA_BUS_MASTER	.\SpinAPI\src\ddk_headers\winddk.h	1349;"	d
CM_RESOURCE_DMA_TYPE_A	.\SpinAPI\src\ddk_headers\winddk.h	1350;"	d
CM_RESOURCE_DMA_TYPE_B	.\SpinAPI\src\ddk_headers\winddk.h	1351;"	d
CM_RESOURCE_DMA_TYPE_F	.\SpinAPI\src\ddk_headers\winddk.h	1352;"	d
CM_RESOURCE_INTERRUPT_LATCHED	.\SpinAPI\src\ddk_headers\winddk.h	1331;"	d
CM_RESOURCE_INTERRUPT_LEVEL_SENSITIVE	.\SpinAPI\src\ddk_headers\winddk.h	1330;"	d
CM_RESOURCE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_RESOURCE_LIST, *PCM_RESOURCE_LIST;$/;"	t	typeref:struct:_CM_RESOURCE_LIST
CM_RESOURCE_MEMORY_24	.\SpinAPI\src\ddk_headers\winddk.h	1340;"	d
CM_RESOURCE_MEMORY_CACHEABLE	.\SpinAPI\src\ddk_headers\winddk.h	1341;"	d
CM_RESOURCE_MEMORY_COMBINEDWRITE	.\SpinAPI\src\ddk_headers\winddk.h	1339;"	d
CM_RESOURCE_MEMORY_PREFETCHABLE	.\SpinAPI\src\ddk_headers\winddk.h	1338;"	d
CM_RESOURCE_MEMORY_READ_ONLY	.\SpinAPI\src\ddk_headers\winddk.h	1336;"	d
CM_RESOURCE_MEMORY_READ_WRITE	.\SpinAPI\src\ddk_headers\winddk.h	1335;"	d
CM_RESOURCE_MEMORY_WRITE_ONLY	.\SpinAPI\src\ddk_headers\winddk.h	1337;"	d
CM_RESOURCE_PORT_10_BIT_DECODE	.\SpinAPI\src\ddk_headers\winddk.h	1321;"	d
CM_RESOURCE_PORT_12_BIT_DECODE	.\SpinAPI\src\ddk_headers\winddk.h	1322;"	d
CM_RESOURCE_PORT_16_BIT_DECODE	.\SpinAPI\src\ddk_headers\winddk.h	1323;"	d
CM_RESOURCE_PORT_IO	.\SpinAPI\src\ddk_headers\winddk.h	1320;"	d
CM_RESOURCE_PORT_MEMORY	.\SpinAPI\src\ddk_headers\winddk.h	1319;"	d
CM_RESOURCE_PORT_PASSIVE_DECODE	.\SpinAPI\src\ddk_headers\winddk.h	1325;"	d
CM_RESOURCE_PORT_POSITIVE_DECODE	.\SpinAPI\src\ddk_headers\winddk.h	1324;"	d
CM_RESOURCE_PORT_WINDOW_DECODE	.\SpinAPI\src\ddk_headers\winddk.h	1326;"	d
CM_SCSI_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_SCSI_DEVICE_DATA, *PCM_SCSI_DEVICE_DATA;$/;"	t	typeref:struct:_CM_SCSI_DEVICE_DATA
CM_SERIAL_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_SERIAL_DEVICE_DATA, *PCM_SERIAL_DEVICE_DATA;$/;"	t	typeref:struct:_CM_SERIAL_DEVICE_DATA
CM_SHARE_DISPOSITION	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_SHARE_DISPOSITION;$/;"	t	typeref:enum:_CM_SHARE_DISPOSITION
COLORMAP	.\bitmap.h	/^} COLORMAP;$/;"	t	typeref:struct:tagCOLORMAP
COMPUTE_PAGES_SPANNED	.\SpinAPI\src\ddk_headers\winnt4.h	564;"	d
CONFIGURATION_FAILED	.\Sleator_apps\CPMG\cpmg.h	68;"	d
CONFIGURATION_FAILED	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	64;"	d
CONFIGURATION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} CONFIGURATION_INFORMATION, *PCONFIGURATION_INFORMATION;$/;"	t	typeref:struct:_CONFIGURATION_INFORMATION
CONFIGURATION_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} CONFIGURATION_TYPE, *PCONFIGURATION_TYPE;$/;"	t	typeref:enum:_CONFIGURATION_TYPE
CONST	.\SpinAPI\src\ddk_headers\winddk.h	61;"	d
CONTAINING_RECORD	.\SpinAPI\src\ddk_headers\winddk.h	3944;"	d
CONTINUE	.\SpinAPI\include\pulseblaster.h	23;"	d
CONTINUE	.\SpinAPI\src\pulseblaster.h	23;"	d
CONTINUE	.\mrispinapi.h	89;"	d
CONTROL	.\controls.h	/^} CONTROL;$/;"	t	typeref:struct:__anon2
CONTROLLER_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^} CONTROLLER_OBJECT, *PCONTROLLER_OBJECT;$/;"	t	typeref:struct:_CONTROLLER_OBJECT
CONTROLS_H	.\controls.h	25;"	d
CORE0	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example1.c	36;"	d	file:
CORE0	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example2.c	36;"	d	file:
CORE0	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example3.c	37;"	d	file:
CORE0	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example4.c	38;"	d	file:
CORE0	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example1.c	36;"	d	file:
CORE0	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example2.c	36;"	d	file:
CORE0	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example3.c	39;"	d	file:
CORE1	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example1.c	37;"	d	file:
CORE1	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example2.c	37;"	d	file:
CORE1	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example3.c	38;"	d	file:
CORE1	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example4.c	39;"	d	file:
CORE1	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example1.c	37;"	d	file:
CORE1	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example2.c	37;"	d	file:
CORE1	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example3.c	40;"	d	file:
CORE2	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example1.c	38;"	d	file:
CORE2	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example2.c	38;"	d	file:
CORE2	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example3.c	39;"	d	file:
CORE2	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example4.c	40;"	d	file:
CORE2	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example1.c	38;"	d	file:
CORE2	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example2.c	38;"	d	file:
CORE2	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example3.c	41;"	d	file:
CORE3	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example1.c	39;"	d	file:
CORE3	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example2.c	39;"	d	file:
CORE3	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example3.c	40;"	d	file:
CORE3	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example4.c	41;"	d	file:
CORE3	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example1.c	39;"	d	file:
CORE3	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example2.c	39;"	d	file:
CORE3	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example3.c	42;"	d	file:
COS_PHASE_REGS	.\SpinAPI\include\radioprocessor.h	20;"	d
COS_PHASE_REGS	.\SpinAPI\src\radioprocessor.h	20;"	d
CPMG_data	.\proc_quick.py	/^    CPMG_data = s.C$/;"	v
CPMG_data	.\swig\Hahn_echo\proc_echo.py	/^    CPMG_data = s.C$/;"	v
CREATE_DISK	.\SpinAPI\src\ddk_headers\winddk.h	/^} CREATE_DISK, *PCREATE_DISK;$/;"	t	typeref:struct:_CREATE_DISK
CREATE_DISK_GPT	.\SpinAPI\src\ddk_headers\winddk.h	/^} CREATE_DISK_GPT, *PCREATE_DISK_GPT;$/;"	t	typeref:struct:_CREATE_DISK_GPT
CREATE_DISK_MBR	.\SpinAPI\src\ddk_headers\winddk.h	/^} CREATE_DISK_MBR, *PCREATE_DISK_MBR;$/;"	t	typeref:struct:_CREATE_DISK_MBR
CREATE_FILE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} CREATE_FILE_TYPE;$/;"	t	typeref:enum:_CREATE_FILE_TYPE
CRIIsTXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR CRIIsTXDEN;			\/\/ non-zero if port C uses RI as RS485 TXDEN$/;"	m	struct:ft_eeprom_4232h
CRIIsTXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR CRIIsTXDEN;			\/\/ non-zero if port C uses RI as RS485 TXDEN$/;"	m	struct:ft_program_data
CSHORT	.\SpinAPI\src\ddk_headers\ntddk.h	/^typedef short CSHORT;$/;"	t
CSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR CSchmittInput;		\/\/ non-zero if C pins are Schmitt input$/;"	m	struct:ft_eeprom_4232h
CSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR CSchmittInput;		\/\/ non-zero if C pins are Schmitt input$/;"	m	struct:ft_program_data
CSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR CSlowSlew;			\/\/ non-zero if C pins have slow slew$/;"	m	struct:ft_eeprom_4232h
CSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR CSlowSlew;			\/\/ non-zero if C pins have slow slew$/;"	m	struct:ft_program_data
CTL_CODE	.\SpinAPI\src\ddk_headers\devioctl.h	103;"	d
CTL_CODE	.\SpinAPI\src\ddk_headers\winddk.h	1021;"	d
CYCLOPSPARAMS	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^typedef struct CYCLOPSPARAMS$/;"	s
CYCLOPSPARAMS	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^} CYCLOPSPARAMS;$/;"	t	typeref:struct:CYCLOPSPARAMS
CYUSBDRV_GUID	.\SpinAPI\src\driver-usb-windows.c	/^const GUID CYUSBDRV_GUID =$/;"	v
CacheLineSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  CacheLineSize;$/;"	m	struct:_PCI_COMMON_CONFIG
Cached	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Cached : 1;$/;"	m	struct:_EISA_MEMORY_TYPE
CalculateScatterGatherList	.\SpinAPI\src\ddk_headers\winddk.h	/^  PCALCULATE_SCATTER_GATHER_LIST_SIZE  CalculateScatterGatherList;$/;"	m	struct:_DMA_OPERATIONS
CallbackRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PKBUGCHECK_CALLBACK_ROUTINE  CallbackRoutine;$/;"	m	struct:_KBUGCHECK_CALLBACK_RECORD
Cancel	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Cancel;$/;"	m	struct:_IRP
CancelIrql	.\SpinAPI\src\ddk_headers\winddk.h	/^  KIRQL  CancelIrql;$/;"	m	struct:_IRP
CancelRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDRIVER_CANCEL  CancelRoutine;$/;"	m	struct:_IRP
Capabilities	.\SpinAPI\src\ddk_headers\winddk.h	/^      PDEVICE_CAPABILITIES  Capabilities;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon67
CapabilitiesPtr	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  CapabilitiesPtr;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
CapabilitiesPtr	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  CapabilitiesPtr;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
CapabilitiesPtr	.\SpinAPI\src\ddk_headers\winddk.h	/^      UCHAR  CapabilitiesPtr;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
Cbus0	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus0;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232h
Cbus0	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus0;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232r
Cbus0	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus0;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_x_series
Cbus0	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus0;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus0H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus0H;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus1	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus1;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232h
Cbus1	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus1;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232r
Cbus1	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus1;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_x_series
Cbus1	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus1;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus1H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus1H;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus2	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus2;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232h
Cbus2	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus2;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232r
Cbus2	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus2;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_x_series
Cbus2	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus2;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus2H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus2H;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus3	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus3;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232h
Cbus3	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus3;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232r
Cbus3	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus3;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_x_series
Cbus3	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus3;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus3H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus3H;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus4	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus4;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232h
Cbus4	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus4;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232r
Cbus4	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus4;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_x_series
Cbus4	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus4;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus4H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus4H;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus5	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus5;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232h
Cbus5	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus5;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_x_series
Cbus5H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus5H;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus6	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus6;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232h
Cbus6	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus6;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_x_series
Cbus6H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus6H;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus7;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232h
Cbus7H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus7H;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus8	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus8;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232h
Cbus8H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus8H;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
Cbus9	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus9;				\/\/ Cbus Mux control$/;"	m	struct:ft_eeprom_232h
Cbus9H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Cbus9H;				\/\/ Cbus Mux control$/;"	m	struct:ft_program_data
CbusConfiguration	.\SpinAPI\src\ddk_headers\win2k.h	/^  CbusConfiguration,$/;"	e	enum:_BUS_DATA_TYPE
CdRomCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  CdRomCount;$/;"	m	struct:_CONFIGURATION_INFORMATION
CdromController	.\SpinAPI\src\ddk_headers\winddk.h	/^  CdromController,$/;"	e	enum:_CONFIGURATION_TYPE
CentralProcessor	.\SpinAPI\src\ddk_headers\winddk.h	/^  CentralProcessor,$/;"	e	enum:_CONFIGURATION_TYPE
ChangeTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  ChangeTime;                                   $/;"	m	struct:_FILE_NETWORK_OPEN_INFORMATION
ChangeTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  ChangeTime;$/;"	m	struct:_FILE_BASIC_INFORMATION
Channel	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Channel;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon33
Channel	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR Channel : 3;$/;"	m	struct:_DMA_CONFIGURATION_BYTE0
Characteristics	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Characteristics;$/;"	m	struct:_DEVICE_OBJECT
Characteristics	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Characteristics;$/;"	m	struct:_FILE_FS_DEVICE_INFORMATION
CheckSum	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  CheckSum;$/;"	m	struct:_DISK_SIGNATURE::__anon87::__anon88
Checksum	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG_PTR  Checksum;$/;"	m	struct:_KBUGCHECK_CALLBACK_RECORD
Checksum	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Checksum;$/;"	m	struct:_CM_EISA_SLOT_INFORMATION
Class	.\SpinAPI\src\ddk_headers\winddk.h	/^  WCHAR  Class[1];$/;"	m	struct:_KEY_FULL_INFORMATION
ClassLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ClassLength;$/;"	m	struct:_KEY_FULL_INFORMATION
ClassLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ClassLength;$/;"	m	struct:_KEY_NODE_INFORMATION
ClassOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ClassOffset;$/;"	m	struct:_KEY_FULL_INFORMATION
ClassOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ClassOffset;$/;"	m	struct:_KEY_NODE_INFORMATION
ClientToken	.\SpinAPI\src\ddk_headers\winddk.h	/^  PACCESS_TOKEN  ClientToken;$/;"	m	struct:_SECURITY_SUBJECT_CONTEXT
ClusterCount	.\SpinAPI\src\ddk_headers\winddk.h	/^        ULONG  ClusterCount;$/;"	m	union:_IO_STACK_LOCATION::__anon50::__anon55::__anon56
CmResourceShareDeviceExclusive	.\SpinAPI\src\ddk_headers\winddk.h	/^  CmResourceShareDeviceExclusive,$/;"	e	enum:_CM_SHARE_DISPOSITION
CmResourceShareDriverExclusive	.\SpinAPI\src\ddk_headers\winddk.h	/^  CmResourceShareDriverExclusive,$/;"	e	enum:_CM_SHARE_DISPOSITION
CmResourceShareShared	.\SpinAPI\src\ddk_headers\winddk.h	/^  CmResourceShareShared$/;"	e	enum:_CM_SHARE_DISPOSITION
CmResourceShareUndetermined	.\SpinAPI\src\ddk_headers\winddk.h	/^  CmResourceShareUndetermined,$/;"	e	enum:_CM_SHARE_DISPOSITION
CmResourceTypeBusNumber	.\SpinAPI\src\ddk_headers\winddk.h	1300;"	d
CmResourceTypeConfigData	.\SpinAPI\src\ddk_headers\winddk.h	1303;"	d
CmResourceTypeDevicePrivate	.\SpinAPI\src\ddk_headers\winddk.h	1304;"	d
CmResourceTypeDeviceSpecific	.\SpinAPI\src\ddk_headers\winddk.h	1299;"	d
CmResourceTypeDma	.\SpinAPI\src\ddk_headers\winddk.h	1298;"	d
CmResourceTypeInterrupt	.\SpinAPI\src\ddk_headers\winddk.h	1296;"	d
CmResourceTypeMaximum	.\SpinAPI\src\ddk_headers\winddk.h	1301;"	d
CmResourceTypeMemory	.\SpinAPI\src\ddk_headers\winddk.h	1297;"	d
CmResourceTypeMfCardConfig	.\SpinAPI\src\ddk_headers\winddk.h	1306;"	d
CmResourceTypeNonArbitrated	.\SpinAPI\src\ddk_headers\winddk.h	1302;"	d
CmResourceTypeNull	.\SpinAPI\src\ddk_headers\winddk.h	1294;"	d
CmResourceTypePcCardConfig	.\SpinAPI\src\ddk_headers\winddk.h	1305;"	d
CmResourceTypePort	.\SpinAPI\src\ddk_headers\winddk.h	1295;"	d
Cmos	.\SpinAPI\src\ddk_headers\win2k.h	/^  Cmos,$/;"	e	enum:_BUS_DATA_TYPE
Colon	.\SpinAPI\interpreter\src\interpreter.cpp	/^	enum TokenType { Identifier = 0, Numeric, Variable, Colon, Comma, Equal, EndOfLine, EndOfFile };$/;"	e	enum:tagToken::TokenType	file:
Comma	.\SpinAPI\interpreter\src\interpreter.cpp	/^	enum TokenType { Identifier = 0, Numeric, Variable, Colon, Comma, Equal, EndOfLine, EndOfFile };$/;"	e	enum:tagToken::TokenType	file:
Command	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Command;$/;"	m	struct:_PCI_COMMON_CONFIG
CommandLine	.\SpinAPI\interpreter\doc\index.html	/^      <\/code> <a name="CommandLine"><\/a>$/;"	a
CommandLookup	.\SpinAPI\interpreter\src\interpreter.cpp	/^int CommandLookup(const char *word)$/;"	f
Common	.\SpinAPI\src\ddk_headers\winddk.h	/^  IO_REMOVE_LOCK_COMMON_BLOCK  Common;$/;"	m	struct:_IO_REMOVE_LOCK
CommunicationServer	.\SpinAPI\src\ddk_headers\winddk.h	/^  CommunicationServer,$/;"	e	enum:_SUITE_TYPE
Compatible	.\SpinAPI\src\ddk_headers\winddk.h	/^  Compatible,$/;"	e	enum:_DMA_SPEED
CompletionContext	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_COMPLETION_CONTEXT  CompletionContext;$/;"	m	struct:_FILE_OBJECT
CompletionKey	.\SpinAPI\src\ddk_headers\winddk.h	/^    PVOID  CompletionKey;$/;"	m	union:_IRP::__anon21
CompletionRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_COMPLETION_ROUTINE  CompletionRoutine;$/;"	m	struct:_IO_STACK_LOCATION
Component	.\SpinAPI\src\ddk_headers\winddk.h	/^  PUCHAR  Component;$/;"	m	struct:_KBUGCHECK_CALLBACK_RECORD
CompressedId	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  CompressedId;$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
CompressedId	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  CompressedId;$/;"	m	struct:_CM_EISA_SLOT_INFORMATION
ConfigData	.\SpinAPI\src\ddk_headers\winddk.h	/^    } ConfigData;$/;"	m	union:_IO_RESOURCE_DESCRIPTOR::__anon37	typeref:struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon45
Configuration	.\SpinAPI\src\ddk_headers\winddk.h	/^  EISA_PORT_DESCRIPTOR  Configuration;$/;"	m	struct:_EISA_PORT_CONFIGURATION
ConfigurationByte	.\SpinAPI\src\ddk_headers\winddk.h	/^  EISA_IRQ_DESCRIPTOR  ConfigurationByte;$/;"	m	struct:_EISA_IRQ_CONFIGURATION
ConfigurationByte	.\SpinAPI\src\ddk_headers\winddk.h	/^  EISA_MEMORY_TYPE  ConfigurationByte;$/;"	m	struct:_EISA_MEMORY_CONFIGURATION
ConfigurationByte0	.\SpinAPI\src\ddk_headers\winddk.h	/^  DMA_CONFIGURATION_BYTE0  ConfigurationByte0;$/;"	m	struct:_EISA_DMA_CONFIGURATION
ConfigurationByte1	.\SpinAPI\src\ddk_headers\winddk.h	/^  DMA_CONFIGURATION_BYTE1  ConfigurationByte1;$/;"	m	struct:_EISA_DMA_CONFIGURATION
ConfigurationSpaceUndefined	.\SpinAPI\src\ddk_headers\win2k.h	/^  ConfigurationSpaceUndefined = -1,$/;"	e	enum:_BUS_DATA_TYPE
Contention	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Contention;$/;"	m	struct:_FAST_MUTEX
ContentionCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ContentionCount;$/;"	m	struct:_ERESOURCE
Context	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Context;$/;"	m	struct:_BUS_INTERFACE_STANDARD
Context	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Context;$/;"	m	struct:_INTERFACE
Context	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Context;$/;"	m	struct:_IO_STACK_LOCATION
Control	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Control;$/;"	m	struct:_IO_STACK_LOCATION
Control	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Control;$/;"	m	struct:_INITIAL_PRIVILEGE_SET
ControlWord	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ControlWord;$/;"	m	struct:_KFLOATING_SAVE
ControllerExtension	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  ControllerExtension;$/;"	m	struct:_CONTROLLER_OBJECT
Convert	.\SpinAPI\interpreter\src\interpreter.cpp	/^std::string Convert(std::string value)$/;"	f
Count	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONG  Count;$/;"	m	struct:_FAST_MUTEX
Count	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Count;$/;"	m	struct:_CM_PARTIAL_RESOURCE_LIST
Count	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Count;$/;"	m	struct:_CM_RESOURCE_LIST
Count	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Count;$/;"	m	struct:_DEVICE_RELATIONS
Count	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Count;$/;"	m	struct:_DRIVER_EXTENSION
Count	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Count;$/;"	m	struct:_IO_RESOURCE_LIST
Count	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Count;$/;"	m	struct:_RTL_RANGE_LIST
Cr0NpxState	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Cr0NpxState;$/;"	m	struct:_KFLOATING_SAVE
Create	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Create;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon51
CreateFileTypeMailslot	.\SpinAPI\src\ddk_headers\winddk.h	/^  CreateFileTypeMailslot$/;"	e	enum:_CREATE_FILE_TYPE
CreateFileTypeNamedPipe	.\SpinAPI\src\ddk_headers\winddk.h	/^  CreateFileTypeNamedPipe,$/;"	e	enum:_CREATE_FILE_TYPE
CreateFileTypeNone	.\SpinAPI\src\ddk_headers\winddk.h	/^  CreateFileTypeNone,$/;"	e	enum:_CREATE_FILE_TYPE
CreationTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  CreationTime;                                 $/;"	m	struct:_FILE_NETWORK_OPEN_INFORMATION
CreationTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  CreationTime;$/;"	m	struct:_FILE_BASIC_INFORMATION
CreatorBackTraceIndex	.\SpinAPI\src\ddk_headers\winddk.h	/^    ULONG_PTR  CreatorBackTraceIndex;$/;"	m	union:_ERESOURCE::__anon48
CriticalWorkQueue	.\SpinAPI\src\ddk_headers\winddk.h	/^  CriticalWorkQueue,$/;"	e	enum:_WORK_QUEUE_TYPE
Csq	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _IO_CSQ  *Csq;$/;"	m	struct:_IO_CSQ_IRP_CONTEXT	typeref:struct:_IO_CSQ_IRP_CONTEXT::_IO_CSQ
CsqAcquireLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_CSQ_ACQUIRE_LOCK  CsqAcquireLock;$/;"	m	struct:_IO_CSQ
CsqCompleteCanceledIrp	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_CSQ_COMPLETE_CANCELED_IRP  CsqCompleteCanceledIrp;$/;"	m	struct:_IO_CSQ
CsqInsertIrp	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_CSQ_INSERT_IRP  CsqInsertIrp;$/;"	m	struct:_IO_CSQ
CsqPeekNextIrp	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_CSQ_PEEK_NEXT_IRP  CsqPeekNextIrp;$/;"	m	struct:_IO_CSQ
CsqReleaseLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_CSQ_RELEASE_LOCK  CsqReleaseLock;$/;"	m	struct:_IO_CSQ
CsqRemoveIrp	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_CSQ_REMOVE_IRP  CsqRemoveIrp;$/;"	m	struct:_IO_CSQ
Current	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Current;$/;"	m	struct:_RANGE_LIST_ITERATOR
CurrentByteOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  CurrentByteOffset;                        $/;"	m	struct:_FILE_POSITION_INFORMATION
CurrentByteOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  CurrentByteOffset;$/;"	m	struct:_FILE_OBJECT
CurrentIrp	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  CurrentIrp;$/;"	m	struct:_WAIT_CONTEXT_BLOCK
CurrentIrp	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _IRP  *CurrentIrp;$/;"	m	struct:_DEVICE_OBJECT	typeref:struct:_DEVICE_OBJECT::_IRP
CurrentLocation	.\SpinAPI\src\ddk_headers\winddk.h	/^  CHAR  CurrentLocation;$/;"	m	struct:_IRP
CurrentStackLocation	.\SpinAPI\src\ddk_headers\winddk.h	/^          struct _IO_STACK_LOCATION  *CurrentStackLocation;$/;"	m	union:_IRP::__anon21::__anon22::__anon25::__anon26	typeref:struct:_IRP::__anon21::__anon22::__anon25::__anon26::_IO_STACK_LOCATION
CustomDataBuffer	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  CustomDataBuffer[1];$/;"	m	struct:_TARGET_DEVICE_CUSTOM_NOTIFICATION
D1Latency	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  D1Latency;$/;"	m	struct:_DEVICE_CAPABILITIES
D2Latency	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  D2Latency;$/;"	m	struct:_DEVICE_CAPABILITIES
D3Latency	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  D3Latency;$/;"	m	struct:_DEVICE_CAPABILITIES
DAC1	.\mrispinapi.h	101;"	d
DAC2	.\mrispinapi.h	102;"	d
DAC3	.\mrispinapi.h	103;"	d
DAC_FEEDTHROUGH	.\SpinAPI\include\radioprocessor.h	474;"	d
DAC_FEEDTHROUGH	.\SpinAPI\src\radioprocessor.h	474;"	d
DATA_OUT_OF_BOUNDS	.\devices.h	31;"	d
DATA_RETRIEVAL_FAILED	.\Sleator_apps\CPMG\cpmg.h	70;"	d
DATA_RETRIEVAL_FAILED	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	66;"	d
DBG_STATUS_BUGCHECK_FIRST	.\SpinAPI\src\ddk_headers\winddk.h	3596;"	d
DBG_STATUS_BUGCHECK_SECOND	.\SpinAPI\src\ddk_headers\winddk.h	3597;"	d
DBG_STATUS_CONTROL_C	.\SpinAPI\src\ddk_headers\winddk.h	3594;"	d
DBG_STATUS_DEBUG_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	3599;"	d
DBG_STATUS_FATAL	.\SpinAPI\src\ddk_headers\winddk.h	3598;"	d
DBG_STATUS_SYSRQ	.\SpinAPI\src\ddk_headers\winddk.h	3595;"	d
DBG_STATUS_WORKER	.\SpinAPI\src\ddk_headers\winddk.h	3600;"	d
DC	.\SpinAPI\src\fid.h	3;"	d
DCBlength	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD DCBlength;			\/* sizeof(FTDCB)						*\/$/;"	m	struct:_FTDCB
DDKAPI	.\SpinAPI\src\ddk_headers\winddk.h	37;"	d
DDKCDECLAPI	.\SpinAPI\src\ddk_headers\winddk.h	39;"	d
DDKFASTAPI	.\SpinAPI\src\ddk_headers\winddk.h	38;"	d
DDS_DIRECT	.\SpinAPI\include\radioprocessor.h	472;"	d
DDS_DIRECT	.\SpinAPI\src\radioprocessor.h	472;"	d
DDS_FREQ_WE	.\SpinAPI\src\if.h	58;"	d
DDS_PROG_EXTREG	.\SpinAPI\src\caps.h	9;"	d
DDS_PROG_OLDPB	.\SpinAPI\src\caps.h	8;"	d
DDS_PROG_RPG	.\SpinAPI\src\caps.h	10;"	d
DDS_REF_PHASE_WE	.\SpinAPI\src\if.h	61;"	d
DDS_RUN	.\SpinAPI\src\if.h	57;"	d
DDS_RX_PHASE_WE	.\SpinAPI\src\if.h	60;"	d
DDS_TX_PHASE_WE	.\SpinAPI\src\if.h	59;"	d
DDS_WRITE_SEL	.\SpinAPI\src\if.h	62;"	d
DDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_eeprom_4232h
DDriveCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DDriveCurrent;		\/\/ valid values are 4mA, 8mA, 12mA, 16mA$/;"	m	struct:ft_program_data
DDriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DDriverType;			\/\/ $/;"	m	struct:ft_eeprom_4232h
DEBUG_ERROR	.\SpinAPI\src\debug.h	5;"	d
DEBUG_INFO	.\SpinAPI\src\debug.h	7;"	d
DEBUG_WARNING	.\SpinAPI\src\debug.h	6;"	d
DECLARE_INTERNAL_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	45;"	d
DECLARE_INTERNAL_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	51;"	d
DECLARE_INTERNAL_OBJECT2	.\SpinAPI\src\ddk_headers\winddk.h	46;"	d
DECLARE_INTERNAL_OBJECT2	.\SpinAPI\src\ddk_headers\winddk.h	52;"	d
DECL_EXPORT	.\SpinAPI\src\ddk_headers\ntddk.h	66;"	d
DECL_IMPORT	.\SpinAPI\src\ddk_headers\ntddk.h	62;"	d
DEFAULT_IO_TIMEOUT_MS	.\SpinAPI\src\driver-usb-windows.c	292;"	d	file:
DELAY_LOOP	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_long_delay_test.c	49;"	d	file:
DELAY_LOOP	.\SpinAPI\examples\PulseBlasterESR\pbesr_long_delay_test.c	43;"	d	file:
DELTA_TAU	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set DELTA_TAU=10000$/;"	v
DELTA_TAU	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set DELTA_TAU=10000$/;"	v
DEVICE	.\devices.h	/^} DEVICE;$/;"	t	typeref:struct:__anon3
DEVICES_H	.\devices.h	25;"	d
DEVICE_ADDR_MASK	.\devices.h	43;"	d
DEVICE_CAPABILITIES	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_CAPABILITIES, *PDEVICE_CAPABILITIES;$/;"	t	typeref:struct:_DEVICE_CAPABILITIES
DEVICE_DDS	.\SpinAPI\include\radioprocessor.h	25;"	d
DEVICE_DDS	.\SpinAPI\src\radioprocessor.h	25;"	d
DEVICE_DESCRIPTION	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_DESCRIPTION, *PDEVICE_DESCRIPTION;$/;"	t	typeref:struct:_DEVICE_DESCRIPTION
DEVICE_DESCRIPTION_VERSION	.\SpinAPI\src\ddk_headers\winddk.h	1539;"	d
DEVICE_DESCRIPTION_VERSION1	.\SpinAPI\src\ddk_headers\winddk.h	1540;"	d
DEVICE_DESCRIPTION_VERSION2	.\SpinAPI\src\ddk_headers\winddk.h	1541;"	d
DEVICE_INTERFACE_CHANGE_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_INTERFACE_CHANGE_NOTIFICATION, *PDEVICE_INTERFACE_CHANGE_NOTIFICATION;$/;"	t	typeref:struct:_DEVICE_INTERFACE_CHANGE_NOTIFICATION
DEVICE_NOT_READABLE	.\devices.h	35;"	d
DEVICE_NOT_SELECTED	.\devices.h	32;"	d
DEVICE_NOT_WRITABLE	.\devices.h	34;"	d
DEVICE_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_OBJECT;$/;"	t	typeref:struct:_DEVICE_OBJECT
DEVICE_OFFSET_MASK	.\devices.h	42;"	d
DEVICE_OPEN_FAIL	.\SpinAPI\include\spinpts.h	28;"	d
DEVICE_OPEN_FAIL	.\SpinAPI\src\spinpts.h	28;"	d
DEVICE_REGISTRY_PROPERTY	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_REGISTRY_PROPERTY;$/;"	t	typeref:enum:__anon16
DEVICE_RELATIONS	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_RELATIONS, *PDEVICE_RELATIONS;$/;"	t	typeref:struct:_DEVICE_RELATIONS
DEVICE_RELATION_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_RELATION_TYPE, *PDEVICE_RELATION_TYPE;$/;"	t	typeref:enum:_DEVICE_RELATION_TYPE
DEVICE_SHAPE	.\SpinAPI\include\radioprocessor.h	24;"	d
DEVICE_SHAPE	.\SpinAPI\src\radioprocessor.h	24;"	d
DEVICE_SPEED_HIGH	.\SpinAPI\src\cyioctl.h	55;"	d
DEVICE_SPEED_LOW_FULL	.\SpinAPI\src\cyioctl.h	54;"	d
DEVICE_SPEED_UNKNOWN	.\SpinAPI\src\cyioctl.h	53;"	d
DEVICE_TEXT_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_TEXT_TYPE, *PDEVICE_TEXT_TYPE;$/;"	t	typeref:enum:_DEVICE_TEXT_TYPE
DEVICE_TYPE	.\SpinAPI\src\ddk_headers\devioctl.h	31;"	d
DEVICE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	1628;"	d
DEVICE_TYPE_FROM_CTL_CODE	.\SpinAPI\src\ddk_headers\devioctl.h	110;"	d
DEVICE_TYPE_FROM_CTL_CODE	.\SpinAPI\src\ddk_headers\winddk.h	1024;"	d
DEVICE_USAGE_NOTIFICATION_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_USAGE_NOTIFICATION_TYPE;$/;"	t	typeref:enum:_DEVICE_USAGE_NOTIFICATION_TYPE
DIRECTORY_ALL_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	293;"	d
DIRECTORY_CREATE_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	291;"	d
DIRECTORY_CREATE_SUBDIRECTORY	.\SpinAPI\src\ddk_headers\winddk.h	292;"	d
DIRECTORY_QUERY	.\SpinAPI\src\ddk_headers\winddk.h	289;"	d
DIRECTORY_TRAVERSE	.\SpinAPI\src\ddk_headers\winddk.h	290;"	d
DIR_DEVICE_TO_HOST	.\SpinAPI\src\cyioctl.h	51;"	d
DIR_HOST_TO_DEVICE	.\SpinAPI\src\cyioctl.h	50;"	d
DISK_SIGNATURE	.\SpinAPI\src\ddk_headers\winddk.h	/^} DISK_SIGNATURE, *PDISK_SIGNATURE;$/;"	t	typeref:struct:_DISK_SIGNATURE
DISPATCHER_HEADER	.\SpinAPI\src\ddk_headers\winddk.h	/^} DISPATCHER_HEADER, *PDISPATCHER_HEADER;$/;"	t	typeref:struct:_DISPATCHER_HEADER
DISPATCH_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3712;"	d
DISP_MODE	.\SpinAPI\src\fid.h	9;"	d
DIsVCP8	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DIsVCP8;				\/\/ non-zero if interface is to use VCP drivers$/;"	m	struct:ft_program_data
DMA_ADAPTER	.\SpinAPI\src\ddk_headers\winddk.h	/^} DMA_ADAPTER;$/;"	t	typeref:struct:_DMA_ADAPTER
DMA_CONFIGURATION_BYTE0	.\SpinAPI\src\ddk_headers\winddk.h	/^} DMA_CONFIGURATION_BYTE0;$/;"	t	typeref:struct:_DMA_CONFIGURATION_BYTE0
DMA_CONFIGURATION_BYTE1	.\SpinAPI\src\ddk_headers\winddk.h	/^} DMA_CONFIGURATION_BYTE1;$/;"	t	typeref:struct:_DMA_CONFIGURATION_BYTE1
DMA_OPERATIONS	.\SpinAPI\src\ddk_headers\winddk.h	/^} DMA_OPERATIONS, *PDMA_OPERATIONS;$/;"	t	typeref:struct:_DMA_OPERATIONS
DMA_SPEED	.\SpinAPI\src\ddk_headers\winddk.h	/^} DMA_SPEED, *PDMA_SPEED;$/;"	t	typeref:enum:_DMA_SPEED
DMA_WIDTH	.\SpinAPI\src\ddk_headers\winddk.h	/^} DMA_WIDTH, *PDMA_WIDTH;$/;"	t	typeref:enum:_DMA_WIDTH
DONT_CLEAR	.\mrispinapi.h	112;"	d
DONT_UPDATE	.\mrispinapi.h	111;"	d
DONT_WRITE	.\mrispinapi.h	110;"	d
DO_BUFFERED_IO	.\SpinAPI\src\ddk_headers\winddk.h	1586;"	d
DO_BUS_ENUMERATED_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	1596;"	d
DO_CLEAR	.\mrispinapi.h	115;"	d
DO_DEVICE_HAS_NAME	.\SpinAPI\src\ddk_headers\winddk.h	1590;"	d
DO_DEVICE_INITIALIZING	.\SpinAPI\src\ddk_headers\winddk.h	1591;"	d
DO_DIRECT_IO	.\SpinAPI\src\ddk_headers\winddk.h	1588;"	d
DO_EXCLUSIVE	.\SpinAPI\src\ddk_headers\winddk.h	1587;"	d
DO_GPIF_RESET	.\SpinAPI\src\usb.h	36;"	d
DO_HEAVY	.\SpinAPI\src\usb.h	39;"	d
DO_LITE	.\SpinAPI\src\usb.h	38;"	d
DO_LONG_TERM_REQUESTS	.\SpinAPI\src\ddk_headers\winddk.h	1593;"	d
DO_LOW_PRIORITY_FILESYSTEM	.\SpinAPI\src\ddk_headers\winddk.h	1599;"	d
DO_MAP_IO_BUFFER	.\SpinAPI\src\ddk_headers\winddk.h	1589;"	d
DO_NEVER_LAST_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	1594;"	d
DO_POWER_INRUSH	.\SpinAPI\src\ddk_headers\winddk.h	1598;"	d
DO_POWER_PAGABLE	.\SpinAPI\src\ddk_headers\winddk.h	1597;"	d
DO_RENUM	.\SpinAPI\src\usb.h	35;"	d
DO_SHUTDOWN_REGISTERED	.\SpinAPI\src\ddk_headers\winddk.h	1595;"	d
DO_SYSTEM_BOOT_PARTITION	.\SpinAPI\src\ddk_headers\winddk.h	1592;"	d
DO_TRIGGER	.\Sleator_apps\CPMG\cpmg.h	56;"	d
DO_TRIGGER	.\Sleator_apps\Hahn_echo\Hahn_echo.h	64;"	d
DO_TRIGGER	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	61;"	d
DO_TRIGGER	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	64;"	d
DO_TRIGGER	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	61;"	d
DO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	47;"	d	file:
DO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	44;"	d	file:
DO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	42;"	d	file:
DO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	45;"	d	file:
DO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	42;"	d	file:
DO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	35;"	d	file:
DO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	37;"	d	file:
DO_TRIGGER	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	49;"	d
DO_TRIGGER	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	39;"	d	file:
DO_TRIGGER	.\SpinAPI\examples\RadioProcessor\awg.c	41;"	d	file:
DO_TRIGGER	.\SpinAPI\examples\RadioProcessor\excite_test.c	41;"	d	file:
DO_TRIGGER	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	52;"	d
DO_UPDATE	.\mrispinapi.h	114;"	d
DO_VERIFY_VOLUME	.\SpinAPI\src\ddk_headers\winddk.h	1585;"	d
DO_WRITE	.\mrispinapi.h	113;"	d
DO_ZERO	.\SpinAPI\include\radioprocessor.h	467;"	d
DO_ZERO	.\SpinAPI\src\radioprocessor.h	467;"	d
DRIIsTXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DRIIsTXDEN;			\/\/ non-zero if port D uses RI as RS485 TXDEN$/;"	m	struct:ft_eeprom_4232h
DRIIsTXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DRIIsTXDEN;			\/\/ non-zero if port D uses RI as RS485 TXDEN$/;"	m	struct:ft_program_data
DRIVER_EXTENSION	.\SpinAPI\src\ddk_headers\winddk.h	/^} DRIVER_EXTENSION, *PDRIVER_EXTENSION;$/;"	t	typeref:struct:_DRIVER_EXTENSION
DRIVER_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^} DRIVER_OBJECT;$/;"	t	typeref:struct:_DRIVER_OBJECT
DRIVER_USB_H_	.\SpinAPI\src\driver-usb.h	2;"	d
DRIVER_VERIFIER_FORCE_IRQL_CHECKING	.\SpinAPI\src\ddk_headers\winddk.h	3617;"	d
DRIVER_VERIFIER_INJECT_ALLOCATION_FAILURES	.\SpinAPI\src\ddk_headers\winddk.h	3618;"	d
DRIVER_VERIFIER_IO_CHECKING	.\SpinAPI\src\ddk_headers\winddk.h	3620;"	d
DRIVER_VERIFIER_SPECIAL_POOLING	.\SpinAPI\src\ddk_headers\winddk.h	3616;"	d
DRIVER_VERIFIER_THUNK_PAIRS	.\SpinAPI\src\ddk_headers\winddk.h	/^} DRIVER_VERIFIER_THUNK_PAIRS, *PDRIVER_VERIFIER_THUNK_PAIRS;$/;"	t	typeref:struct:_DRIVER_VERIFIER_THUNK_PAIRS
DRIVER_VERIFIER_TRACK_POOL_ALLOCATIONS	.\SpinAPI\src\ddk_headers\winddk.h	3619;"	d
DRIVE_LAYOUT_INFORMATION_GPT	.\SpinAPI\src\ddk_headers\winddk.h	/^} DRIVE_LAYOUT_INFORMATION_GPT, *PDRIVE_LAYOUT_INFORMATION_GPT;$/;"	t	typeref:struct:_DRIVE_LAYOUT_INFORMATION_GPT
DRIVE_LAYOUT_INFORMATION_MBR	.\SpinAPI\src\ddk_headers\winddk.h	/^} DRIVE_LAYOUT_INFORMATION_MBR, *PDRIVE_LAYOUT_INFORMATION_MBR;$/;"	t	typeref:struct:_DRIVE_LAYOUT_INFORMATION_MBR
DSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DSchmittInput;		\/\/ non-zero if D pins are Schmitt input$/;"	m	struct:ft_eeprom_4232h
DSchmittInput	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DSchmittInput;		\/\/ non-zero if D pins are Schmitt input$/;"	m	struct:ft_program_data
DSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DSlowSlew;			\/\/ non-zero if D pins have slow slew$/;"	m	struct:ft_eeprom_4232h
DSlowSlew	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DSlowSlew;			\/\/ non-zero if D pins have slow slew$/;"	m	struct:ft_program_data
DUMMYSTRUCTNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^        } DUMMYSTRUCTNAME;$/;"	m	union:_IO_STACK_LOCATION::__anon50::__anon55::__anon56	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon55::__anon56::__anon57
DUMMYSTRUCTNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^        } DUMMYSTRUCTNAME;$/;"	m	union:_IRP::__anon21::__anon22::__anon23	typeref:struct:_IRP::__anon21::__anon22::__anon23::__anon24
DUMMYSTRUCTNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^      } DUMMYSTRUCTNAME;$/;"	m	struct:_IRP::__anon21::__anon22	typeref:struct:_IRP::__anon21::__anon22::__anon25
DUMMYSTRUCTNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^    } DUMMYSTRUCTNAME;$/;"	m	union:_IMAGE_INFO::__anon84	typeref:struct:_IMAGE_INFO::__anon84::__anon85
DUMMYUNIONNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^        } DUMMYUNIONNAME;$/;"	m	struct:_IRP::__anon21::__anon22::__anon25	typeref:union:_IRP::__anon21::__anon22::__anon25::__anon26
DUMMYUNIONNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^      } DUMMYUNIONNAME;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon55	typeref:union:_IO_STACK_LOCATION::__anon50::__anon55::__anon56
DUMMYUNIONNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^      } DUMMYUNIONNAME;$/;"	m	struct:_IRP::__anon21::__anon22	typeref:union:_IRP::__anon21::__anon22::__anon23
DUMMYUNIONNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^  } DUMMYUNIONNAME;$/;"	m	struct:_CREATE_DISK	typeref:union:_CREATE_DISK::__anon86
DUMMYUNIONNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^  } DUMMYUNIONNAME;$/;"	m	struct:_DISK_SIGNATURE	typeref:union:_DISK_SIGNATURE::__anon87
DUMMYUNIONNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^  } DUMMYUNIONNAME;$/;"	m	struct:_ERESOURCE	typeref:union:_ERESOURCE::__anon48
DUMMYUNIONNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^  } DUMMYUNIONNAME;$/;"	m	struct:_IMAGE_INFO	typeref:union:_IMAGE_INFO::__anon84
DUMMYUNIONNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^  } DUMMYUNIONNAME;$/;"	m	struct:_IO_STATUS_BLOCK	typeref:union:_IO_STATUS_BLOCK::__anon17
DUMMYUNIONNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^  } DUMMYUNIONNAME;$/;"	m	struct:_KPCR_TIB	typeref:union:_KPCR_TIB::__anon90
DUMMYUNIONNAME	.\SpinAPI\src\ddk_headers\winddk.h	/^  } DUMMYUNIONNAME;$/;"	m	struct:_OWNER_ENTRY	typeref:union:_OWNER_ENTRY::__anon47
DUPLICATE_CLOSE_SOURCE	.\SpinAPI\src\ddk_headers\winddk.h	749;"	d
DUPLICATE_SAME_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	750;"	d
DUPLICATE_SAME_ATTRIBUTES	.\SpinAPI\src\ddk_headers\winddk.h	751;"	d
DWORD	.\board.h	40;"	d
DWORD	.\pci.h	23;"	d
DWRITE_FAIL	.\SpinAPI\include\spinpts.h	27;"	d
DWRITE_FAIL	.\SpinAPI\src\spinpts.h	27;"	d
Data	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Data[3];$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon43
Data	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Data[3];$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon34
Data	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Data[1];$/;"	m	struct:_KEY_VALUE_PARTIAL_INFORMATION
Data	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Data[1];$/;"	m	struct:_KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
DataCenter	.\SpinAPI\src\ddk_headers\winddk.h	/^  DataCenter,$/;"	e	enum:_SUITE_TYPE
DataLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DataLength;$/;"	m	struct:_KEY_VALUE_ENTRY
DataLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DataLength;$/;"	m	struct:_KEY_VALUE_FULL_INFORMATION
DataLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DataLength;$/;"	m	struct:_KEY_VALUE_PARTIAL_INFORMATION
DataLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DataLength;$/;"	m	struct:_KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
DataOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DataOffset;$/;"	m	struct:_KEY_VALUE_ENTRY
DataOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DataOffset;$/;"	m	struct:_KEY_VALUE_FULL_INFORMATION
DataOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DataOffset;$/;"	m	struct:_KFLOATING_SAVE
DataPath	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVOID  DataPath;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon78
DataSectionObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  DataSectionObject;$/;"	m	struct:_SECTION_OBJECT_POINTERS
DataSelector	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DataSelector;$/;"	m	struct:_KFLOATING_SAVE
DataSize	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG DataSize;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon36
DataSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  DataSize;$/;"	m	struct:_EISA_MEMORY_CONFIGURATION
DataTransferLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  DataTransferLength;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
DataTransferRate	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  DataTransferRate;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
Day	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Day;$/;"	m	struct:_TIME_FIELDS
Dbg	.\SpinAPI\src\ddk_headers\winddk.h	/^  IO_REMOVE_LOCK_DBG_BLOCK  Dbg;$/;"	m	struct:_IO_REMOVE_LOCK
DeallocateObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  DeallocateObject,$/;"	e	enum:_IO_ALLOCATION_ACTION
DeallocateObjectKeepRegisters	.\SpinAPI\src\ddk_headers\winddk.h	/^  DeallocateObjectKeepRegisters$/;"	e	enum:_IO_ALLOCATION_ACTION
DefaultData	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  DefaultData;$/;"	m	struct:_RTL_QUERY_REGISTRY_TABLE
DefaultLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DefaultLength;$/;"	m	struct:_RTL_QUERY_REGISTRY_TABLE
DefaultType	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DefaultType;$/;"	m	struct:_RTL_QUERY_REGISTRY_TABLE
DeferredContext	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  DeferredContext;$/;"	m	struct:_KDPC
DeferredRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PKDEFERRED_ROUTINE  DeferredRoutine;$/;"	m	struct:_KDPC
DelayExecution	.\SpinAPI\src\ddk_headers\winddk.h	/^  DelayExecution,$/;"	e	enum:_KWAIT_REASON
DelayedWorkQueue	.\SpinAPI\src\ddk_headers\winddk.h	/^  DelayedWorkQueue,$/;"	e	enum:_WORK_QUEUE_TYPE
DeleteAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  DeleteAccess;$/;"	m	struct:_FILE_OBJECT
DeleteHandle	.\SpinAPI\src\ddk_headers\winddk.h	/^        HANDLE  DeleteHandle;$/;"	m	union:_IO_STACK_LOCATION::__anon50::__anon55::__anon56
DeletePending	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  DeletePending;$/;"	m	struct:_FILE_OBJECT
DeletePending	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  DeletePending;$/;"	m	struct:_FILE_STANDARD_INFORMATION
DeleteSecurityDescriptor	.\SpinAPI\src\ddk_headers\winddk.h	/^  DeleteSecurityDescriptor,$/;"	e	enum:_SECURITY_OPERATION_CODE
Deleters	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Deleters;$/;"	m	struct:_SHARE_ACCESS
DemandMode	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  DemandMode;$/;"	m	struct:_DEVICE_DESCRIPTION
Description	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char *Description;			\/\/ "USB HS Serial Converter"$/;"	m	struct:ft_program_data
Description	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char Description[64];$/;"	m	struct:_ft_device_list_info_node
Descriptors	.\SpinAPI\src\ddk_headers\winddk.h	/^  IO_RESOURCE_DESCRIPTOR  Descriptors[1];$/;"	m	struct:_IO_RESOURCE_LIST
DesiredAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  ACCESS_MASK  DesiredAccess;$/;"	m	struct:_IO_SECURITY_CONTEXT
DeviceCapabilities	.\SpinAPI\src\ddk_headers\winddk.h	/^    } DeviceCapabilities;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon67
DeviceContext	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  DeviceContext;$/;"	m	struct:_WAIT_CONTEXT_BLOCK
DeviceD1	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DeviceD1 : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
DeviceD2	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DeviceD2 : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
DeviceExtension	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  DeviceExtension;$/;"	m	struct:_DEVICE_OBJECT
DeviceID	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  DeviceID;$/;"	m	struct:_PCI_COMMON_CONFIG
DeviceIoControl	.\SpinAPI\src\ddk_headers\winddk.h	/^    } DeviceIoControl;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon59
DeviceListEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  DeviceListEntry;$/;"	m	struct:_KDEVICE_QUEUE_ENTRY
DeviceListHead	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  DeviceListHead;$/;"	m	struct:_KDEVICE_QUEUE
DeviceLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  KEVENT  DeviceLock;$/;"	m	struct:_DEVICE_OBJECT
DeviceNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  DeviceNumber : 5;$/;"	m	struct:_PCI_SLOT_NUMBER::__anon82::__anon83
DeviceObject	.\SpinAPI\src\ddk_headers\winddk.h	/^      PDEVICE_OBJECT  DeviceObject;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon62
DeviceObject	.\SpinAPI\src\ddk_headers\winddk.h	/^      PDEVICE_OBJECT  DeviceObject;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon63
DeviceObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDEVICE_OBJECT  DeviceObject;$/;"	m	struct:_DRIVER_OBJECT
DeviceObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDEVICE_OBJECT  DeviceObject;$/;"	m	struct:_FILE_OBJECT
DeviceObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDEVICE_OBJECT  DeviceObject;$/;"	m	struct:_IO_STACK_LOCATION
DeviceObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  DeviceObject;$/;"	m	struct:_WAIT_CONTEXT_BLOCK
DeviceObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _DEVICE_OBJECT  *DeviceObject;$/;"	m	struct:_VPB	typeref:struct:_VPB::_DEVICE_OBJECT
DeviceObjectExtension	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _DEVOBJ_EXTENSION  *DeviceObjectExtension;$/;"	m	struct:_DEVICE_OBJECT	typeref:struct:_DEVICE_OBJECT::_DEVOBJ_EXTENSION
DeviceOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^	LARGE_INTEGER  DeviceOffset; $/;"	m	struct:_IO_ERROR_LOG_PACKET
DevicePowerState	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePowerState$/;"	e	enum:_POWER_STATE_TYPE
DevicePrivate	.\SpinAPI\src\ddk_headers\winddk.h	/^    } DevicePrivate;$/;"	m	union:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28	typeref:struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon34
DevicePrivate	.\SpinAPI\src\ddk_headers\winddk.h	/^    } DevicePrivate;$/;"	m	union:_IO_RESOURCE_DESCRIPTOR::__anon37	typeref:struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon43
DevicePropertyAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyAddress,$/;"	e	enum:__anon16
DevicePropertyBootConfiguration	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyBootConfiguration,$/;"	e	enum:__anon16
DevicePropertyBootConfigurationTranslated	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyBootConfigurationTranslated,$/;"	e	enum:__anon16
DevicePropertyBusNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyBusNumber,$/;"	e	enum:__anon16
DevicePropertyBusTypeGuid	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyBusTypeGuid,$/;"	e	enum:__anon16
DevicePropertyClassGuid	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyClassGuid,$/;"	e	enum:__anon16
DevicePropertyClassName	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyClassName,$/;"	e	enum:__anon16
DevicePropertyCompatibleIDs	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyCompatibleIDs,$/;"	e	enum:__anon16
DevicePropertyDeviceDescription	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyDeviceDescription,$/;"	e	enum:__anon16
DevicePropertyDriverKeyName	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyDriverKeyName,$/;"	e	enum:__anon16
DevicePropertyEnumeratorName	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyEnumeratorName,$/;"	e	enum:__anon16
DevicePropertyFriendlyName	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyFriendlyName,$/;"	e	enum:__anon16
DevicePropertyHardwareID	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyHardwareID,$/;"	e	enum:__anon16
DevicePropertyInstallState	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyInstallState,$/;"	e	enum:__anon16
DevicePropertyLegacyBusType	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyLegacyBusType,$/;"	e	enum:__anon16
DevicePropertyLocationInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyLocationInformation,$/;"	e	enum:__anon16
DevicePropertyManufacturer	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyManufacturer,$/;"	e	enum:__anon16
DevicePropertyPhysicalDeviceObjectName	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyPhysicalDeviceObjectName,$/;"	e	enum:__anon16
DevicePropertyRemovalPolicy	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyRemovalPolicy$/;"	e	enum:__anon16
DevicePropertyUINumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  DevicePropertyUINumber,$/;"	e	enum:__anon16
DeviceQueue	.\SpinAPI\src\ddk_headers\winddk.h	/^  KDEVICE_QUEUE  DeviceQueue;$/;"	m	struct:_DEVICE_OBJECT
DeviceQueueEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^        KDEVICE_QUEUE_ENTRY  DeviceQueueEntry;$/;"	m	union:_IRP::__anon21::__anon22::__anon23
DeviceRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _DRIVER_CONTROL  *DeviceRoutine;$/;"	m	struct:_WAIT_CONTEXT_BLOCK	typeref:struct:_WAIT_CONTEXT_BLOCK::_DRIVER_CONTROL
DeviceSpecific	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  DeviceSpecific[192];$/;"	m	struct:_PCI_COMMON_CONFIG
DeviceSpecificData	.\SpinAPI\src\ddk_headers\winddk.h	/^    } DeviceSpecificData;$/;"	m	union:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28	typeref:struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon36
DeviceState	.\SpinAPI\src\ddk_headers\winddk.h	/^  DEVICE_POWER_STATE  DeviceState;$/;"	m	union:_POWER_STATE
DeviceState	.\SpinAPI\src\ddk_headers\winddk.h	/^  DEVICE_POWER_STATE  DeviceState[PowerSystemMaximum];$/;"	m	struct:_DEVICE_CAPABILITIES
DeviceTextDescription	.\SpinAPI\src\ddk_headers\winddk.h	/^  DeviceTextDescription,$/;"	e	enum:_DEVICE_TEXT_TYPE
DeviceTextLocationInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  DeviceTextLocationInformation$/;"	e	enum:_DEVICE_TEXT_TYPE
DeviceTextType	.\SpinAPI\src\ddk_headers\winddk.h	/^      DEVICE_TEXT_TYPE  DeviceTextType;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon72
DeviceType	.\SpinAPI\src\ddk_headers\winddk.h	/^  DEVICE_TYPE  DeviceType;$/;"	m	struct:_DEVICE_OBJECT
DeviceType	.\SpinAPI\src\ddk_headers\winddk.h	/^  DEVICE_TYPE  DeviceType;$/;"	m	struct:_FILE_FS_DEVICE_INFORMATION
DeviceUsageTypeDumpFile	.\SpinAPI\src\ddk_headers\winddk.h	/^  DeviceUsageTypeDumpFile$/;"	e	enum:_DEVICE_USAGE_NOTIFICATION_TYPE
DeviceUsageTypeHibernation	.\SpinAPI\src\ddk_headers\winddk.h	/^  DeviceUsageTypeHibernation,$/;"	e	enum:_DEVICE_USAGE_NOTIFICATION_TYPE
DeviceUsageTypePaging	.\SpinAPI\src\ddk_headers\winddk.h	/^  DeviceUsageTypePaging,$/;"	e	enum:_DEVICE_USAGE_NOTIFICATION_TYPE
DeviceUsageTypeUndefined	.\SpinAPI\src\ddk_headers\winddk.h	/^  DeviceUsageTypeUndefined,$/;"	e	enum:_DEVICE_USAGE_NOTIFICATION_TYPE
DeviceWaitQueue	.\SpinAPI\src\ddk_headers\winddk.h	/^  KDEVICE_QUEUE  DeviceWaitQueue;$/;"	m	struct:_CONTROLLER_OBJECT
DeviceWake	.\SpinAPI\src\ddk_headers\winddk.h	/^  DEVICE_POWER_STATE  DeviceWake;$/;"	m	struct:_DEVICE_CAPABILITIES
Direction	.\SpinAPI\src\cyioctl.h	/^    UCHAR   Direction:1;$/;"	m	struct:_BM_REQ_TYPE
Directory	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Directory;$/;"	m	struct:_FILE_STANDARD_INFORMATION
DiskController	.\SpinAPI\src\ddk_headers\winddk.h	/^  DiskController,$/;"	e	enum:_CONFIGURATION_TYPE
DiskCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DiskCount;$/;"	m	struct:_CONFIGURATION_INFORMATION
DiskId	.\SpinAPI\src\ddk_headers\winddk.h	/^      GUID  DiskId;$/;"	m	struct:_DISK_SIGNATURE::__anon87::__anon89
DiskId	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  DiskId;$/;"	m	struct:_CREATE_DISK_GPT
DiskId	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  DiskId;$/;"	m	struct:_DRIVE_LAYOUT_INFORMATION_GPT
DiskPeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  DiskPeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
DisplayController	.\SpinAPI\src\ddk_headers\winddk.h	/^  DisplayController,$/;"	e	enum:_CONFIGURATION_TYPE
DisplayUsage	.\SpinAPI\interpreter\src\commandline.cpp	/^void DisplayUsage()$/;"	f
Dma	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Dma;$/;"	m	union:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28	typeref:struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon33
Dma	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Dma;$/;"	m	union:_IO_RESOURCE_DESCRIPTOR::__anon37	typeref:struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon41
Dma32BitAddresses	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Dma32BitAddresses;$/;"	m	struct:_DEVICE_DESCRIPTION
Dma64BitAddresses	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Dma64BitAddresses;$/;"	m	struct:_DEVICE_DESCRIPTION
DmaChannel	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DmaChannel;$/;"	m	struct:_DEVICE_DESCRIPTION
DmaOperations	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDMA_OPERATIONS  DmaOperations;$/;"	m	struct:_DMA_ADAPTER
DmaPort	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DmaPort;$/;"	m	struct:_DEVICE_DESCRIPTION
DmaSpeed	.\SpinAPI\src\ddk_headers\winddk.h	/^  DMA_SPEED  DmaSpeed;$/;"	m	struct:_DEVICE_DESCRIPTION
DmaWidth	.\SpinAPI\src\ddk_headers\winddk.h	/^  DMA_WIDTH  DmaWidth;$/;"	m	struct:_DEVICE_DESCRIPTION
DoDeleteFile	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  DoDeleteFile;                                         $/;"	m	struct:_FILE_DISPOSITION_INFORMATION
DockDevice	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DockDevice : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
DockingInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  DockingInformation,$/;"	e	enum:_CONFIGURATION_TYPE
DontUseThisType	.\SpinAPI\src\ddk_headers\winddk.h	/^  DontUseThisType,$/;"	e	enum:_POOL_TYPE
DontUseThisTypeSession	.\SpinAPI\src\ddk_headers\winddk.h	/^	DontUseThisTypeSession,$/;"	e	enum:_POOL_TYPE
Dpc	.\SpinAPI\src\ddk_headers\winddk.h	/^  KDPC  Dpc;$/;"	m	struct:_DEVICE_OBJECT
Dpc	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _KDPC  *Dpc;$/;"	m	struct:_KTIMER	typeref:struct:_KTIMER::_KDPC
DpcListEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  DpcListEntry;$/;"	m	struct:_KDPC
DriveSelect	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  DriveSelect;$/;"	m	struct:_CM_INT13_DRIVE_PARAMETER
DriverContext	.\SpinAPI\src\ddk_headers\winddk.h	/^          PVOID  DriverContext[4];$/;"	m	struct:_IRP::__anon21::__anon22::__anon23::__anon24
DriverExtension	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDRIVER_EXTENSION  DriverExtension;$/;"	m	struct:_DRIVER_OBJECT
DriverInit	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDRIVER_INITIALIZE  DriverInit;$/;"	m	struct:_DRIVER_OBJECT
DriverName	.\SpinAPI\src\ddk_headers\winddk.h	/^  UNICODE_STRING  DriverName;$/;"	m	struct:_DRIVER_OBJECT
DriverObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _DRIVER_OBJECT  *DriverObject;$/;"	m	struct:_DEVICE_OBJECT	typeref:struct:_DEVICE_OBJECT::_DRIVER_OBJECT
DriverObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _DRIVER_OBJECT  *DriverObject;$/;"	m	struct:_DRIVER_EXTENSION	typeref:struct:_DRIVER_EXTENSION::_DRIVER_OBJECT
DriverSection	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  DriverSection;$/;"	m	struct:_DRIVER_OBJECT
DriverSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  DriverSize;$/;"	m	struct:_DRIVER_OBJECT
DriverStart	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  DriverStart;$/;"	m	struct:_DRIVER_OBJECT
DriverStartIo	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDRIVER_STARTIO  DriverStartIo;$/;"	m	struct:_DRIVER_OBJECT
DriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DriverType;			\/\/ $/;"	m	struct:ft_eeprom_232h
DriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DriverType;			\/\/ $/;"	m	struct:ft_eeprom_232r
DriverType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR DriverType;			\/\/ $/;"	m	struct:ft_eeprom_x_series
DriverUnload	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDRIVER_UNLOAD  DriverUnload;$/;"	m	struct:_DRIVER_OBJECT
DtiAdapter	.\SpinAPI\src\ddk_headers\winddk.h	/^  DtiAdapter,$/;"	e	enum:_CONFIGURATION_TYPE
DueTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULARGE_INTEGER  DueTime;$/;"	m	struct:_KTIMER
DumpData	.\SpinAPI\src\ddk_headers\winddk.h	/^	ULONG  DumpData[1]; $/;"	m	struct:_IO_ERROR_LOG_PACKET
DumpDataSize	.\SpinAPI\src\ddk_headers\winddk.h	/^	USHORT  DumpDataSize; $/;"	m	struct:_IO_ERROR_LOG_PACKET
EFLAG_SELECT	.\SpinAPI\src\ddk_headers\winddk.h	3786;"	d
EFLAG_SIGN	.\SpinAPI\src\ddk_headers\winddk.h	3784;"	d
EFLAG_ZERO	.\SpinAPI\src\ddk_headers\winddk.h	3785;"	d
EISA_DMA_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_DMA_CONFIGURATION, *PEISA_DMA_CONFIGURATION;$/;"	t	typeref:struct:_EISA_DMA_CONFIGURATION
EISA_EMPTY_SLOT	.\SpinAPI\src\ddk_headers\winddk.h	1197;"	d
EISA_FREE_FORM_DATA	.\SpinAPI\src\ddk_headers\winddk.h	1170;"	d
EISA_FUNCTION_ENABLED	.\SpinAPI\src\ddk_headers\winddk.h	1169;"	d
EISA_HAS_DMA_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	1173;"	d
EISA_HAS_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	1177;"	d
EISA_HAS_IRQ_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	1174;"	d
EISA_HAS_MEMORY_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	1175;"	d
EISA_HAS_PORT_INIT_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	1171;"	d
EISA_HAS_PORT_RANGE	.\SpinAPI\src\ddk_headers\winddk.h	1172;"	d
EISA_HAS_TYPE_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	1176;"	d
EISA_INVALID_BIOS_CALL	.\SpinAPI\src\ddk_headers\winddk.h	1198;"	d
EISA_INVALID_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	1196;"	d
EISA_INVALID_FUNCTION	.\SpinAPI\src\ddk_headers\winddk.h	1195;"	d
EISA_INVALID_SLOT	.\SpinAPI\src\ddk_headers\winddk.h	1194;"	d
EISA_IRQ_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_IRQ_CONFIGURATION, *PEISA_IRQ_CONFIGURATION;$/;"	t	typeref:struct:_EISA_IRQ_CONFIGURATION
EISA_IRQ_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_IRQ_DESCRIPTOR, *PEISA_IRQ_DESCRIPTOR;$/;"	t	typeref:struct:_EISA_IRQ_DESCRIPTOR
EISA_MEMORY_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_MEMORY_CONFIGURATION, *PEISA_MEMORY_CONFIGURATION;$/;"	t	typeref:struct:_EISA_MEMORY_CONFIGURATION
EISA_MEMORY_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_MEMORY_TYPE, *PEISA_MEMORY_TYPE;$/;"	t	typeref:struct:_EISA_MEMORY_TYPE
EISA_PORT_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_PORT_CONFIGURATION, *PEISA_PORT_CONFIGURATION;$/;"	t	typeref:struct:_EISA_PORT_CONFIGURATION
EISA_PORT_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_PORT_DESCRIPTOR, *PEISA_PORT_DESCRIPTOR;$/;"	t	typeref:struct:_EISA_PORT_DESCRIPTOR
END_LOOP	.\SpinAPI\include\pulseblaster.h	26;"	d
END_LOOP	.\SpinAPI\src\pulseblaster.h	26;"	d
END_LOOP	.\mrispinapi.h	92;"	d
END_PHASE	.\GradientEcho.c	32;"	d	file:
EP1OUT	.\SpinAPI\src\usb.h	41;"	d
EP1OUT	.\SpinAPI\src\usb_endpoints.h	4;"	d
EP2OUT	.\SpinAPI\src\usb.h	42;"	d
EP2OUT	.\SpinAPI\src\usb_endpoints.h	5;"	d
EP6IN	.\SpinAPI\src\usb.h	43;"	d
EP6IN	.\SpinAPI\src\usb_endpoints.h	6;"	d
EPT_NT_CANT_CREATE	.\SpinAPI\src\ddk_headers\ntstatus.h	965;"	d
EPT_NT_CANT_PERFORM_OP	.\SpinAPI\src\ddk_headers\ntstatus.h	930;"	d
EPT_NT_INVALID_ENTRY	.\SpinAPI\src\ddk_headers\ntstatus.h	929;"	d
EPT_NT_NOT_REGISTERED	.\SpinAPI\src\ddk_headers\ntstatus.h	931;"	d
ERESOURCE	.\SpinAPI\src\ddk_headers\winddk.h	/^} ERESOURCE, *PERESOURCE;$/;"	t	typeref:struct:_ERESOURCE
ERESOURCE_THREAD	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG_PTR ERESOURCE_THREAD;$/;"	t
ERROR_CATCH	.\GradientEcho.c	35;"	d	file:
ERROR_CATCH	.\JFAB_Hahn_echo_hardcode.c	33;"	d	file:
ERROR_CATCH	.\RPG_CPMG.c	7;"	d	file:
ERROR_CATCH	.\RPG_Field_Sweep.c	7;"	d	file:
ERROR_CATCH	.\RPG_Hahn_echo.c	7;"	d	file:
ERROR_CATCH	.\RPG_IR.c	7;"	d	file:
ERROR_CATCH	.\RPG_excite_test.c	14;"	d	file:
ERROR_CATCH	.\RPG_nutation.c	7;"	d	file:
ERROR_CATCH	.\RPG_nutation90.c	7;"	d	file:
ERROR_CATCH	.\RPG_p90.c	7;"	d	file:
ERROR_CATCH	.\RPG_tune.c	16;"	d	file:
ERROR_CATCH	.\adc_offset.c	14;"	d	file:
ERROR_CATCH	.\example_1.c	33;"	d	file:
ERROR_CATCH	.\example_2.c	32;"	d	file:
ERROR_CATCH	.\swig\Hahn_echo\Hahn_echo.c	7;"	d	file:
ERROR_CATCH	.\swig\ppg_lang\temp\ppg_temp.c	8;"	d	file:
ERROR_CATCH	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	8;"	d	file:
ERROR_STR_SIZE	.\SpinAPI\include\spinpts.h	8;"	d
ERROR_STR_SIZE	.\SpinAPI\src\spinapi.c	34;"	d	file:
ERROR_STR_SIZE	.\SpinAPI\src\spinpts.h	8;"	d
ES_CONTINUOUS	.\SpinAPI\src\ddk_headers\winddk.h	3520;"	d
ES_DISPLAY_REQUIRED	.\SpinAPI\src\ddk_headers\winddk.h	3518;"	d
ES_SYSTEM_REQUIRED	.\SpinAPI\src\ddk_headers\winddk.h	3517;"	d
ES_USER_PRESENT	.\SpinAPI\src\ddk_headers\winddk.h	3519;"	d
EVENT_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	927;"	d
EVENT_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} EVENT_TYPE;$/;"	t	typeref:enum:_EVENT_TYPE
EXECUTION_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG EXECUTION_STATE;$/;"	t
EXT_ADDRESS	.\SpinAPI\src\if.h	9;"	d
EXT_DATA	.\SpinAPI\src\if.h	10;"	d
EX_POOL_PRIORITY	.\SpinAPI\src\ddk_headers\winddk.h	/^} EX_POOL_PRIORITY;$/;"	t	typeref:enum:_EX_POOL_PRIORITY
EaLength	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG POINTER_ALIGNMENT  EaLength;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon51
EaName	.\SpinAPI\src\ddk_headers\winddk.h	/^  CHAR  EaName[1];$/;"	m	struct:_FILE_FULL_EA_INFORMATION
EaNameLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  EaNameLength;$/;"	m	struct:_FILE_FULL_EA_INFORMATION
EaValueLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  EaValueLength;$/;"	m	struct:_FILE_FULL_EA_INFORMATION
EditWndProc	.\SpinAPI\interpreter\src\gui.cpp	/^LRESULT CALLBACK EditWndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f
Eisa	.\SpinAPI\src\ddk_headers\winddk.h	/^  Eisa,$/;"	e	enum:_INTERFACE_TYPE
EisaAdapter	.\SpinAPI\src\ddk_headers\winddk.h	/^  EisaAdapter,$/;"	e	enum:_CONFIGURATION_TYPE
EisaConfiguration	.\SpinAPI\src\ddk_headers\win2k.h	/^  EisaConfiguration,$/;"	e	enum:_BUS_DATA_TYPE
EisaDma	.\SpinAPI\src\ddk_headers\winddk.h	/^  EISA_DMA_CONFIGURATION  EisaDma[4];$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
EisaIrq	.\SpinAPI\src\ddk_headers\winddk.h	/^  EISA_IRQ_CONFIGURATION  EisaIrq[7];$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
EisaMemory	.\SpinAPI\src\ddk_headers\winddk.h	/^  EISA_MEMORY_CONFIGURATION  EisaMemory[9];$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
EisaPort	.\SpinAPI\src\ddk_headers\winddk.h	/^  EISA_PORT_CONFIGURATION  EisaPort[20];$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
EjectSupported	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  EjectSupported : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
EjectionRelations	.\SpinAPI\src\ddk_headers\winddk.h	/^  EjectionRelations,$/;"	e	enum:_DEVICE_RELATION_TYPE
Elements	.\SpinAPI\src\ddk_headers\winddk.h	/^  SCATTER_GATHER_ELEMENT  Elements[0];$/;"	m	struct:_SCATTER_GATHER_LIST
EmbeddedNT	.\SpinAPI\src\ddk_headers\winddk.h	/^  EmbeddedNT,$/;"	e	enum:_SUITE_TYPE
End	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONGLONG  End;$/;"	m	struct:_RTL_RANGE
EndOfFile	.\SpinAPI\interpreter\src\interpreter.cpp	/^	enum TokenType { Identifier = 0, Numeric, Variable, Colon, Comma, Equal, EndOfLine, EndOfFile };$/;"	e	enum:tagToken::TokenType	file:
EndOfFile	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  EndOfFile;                                    $/;"	m	struct:_FILE_END_OF_FILE_INFORMATION
EndOfFile	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  EndOfFile;                                    $/;"	m	struct:_FILE_NETWORK_OPEN_INFORMATION
EndOfFile	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  EndOfFile;$/;"	m	struct:_FILE_STANDARD_INFORMATION
EndOfLine	.\SpinAPI\interpreter\src\interpreter.cpp	/^	enum TokenType { Identifier = 0, Numeric, Variable, Colon, Comma, Equal, EndOfLine, EndOfFile };$/;"	e	enum:tagToken::TokenType	file:
EndpointAddress	.\SpinAPI\src\cyioctl.h	/^    UCHAR EndpointAddress;$/;"	m	struct:_SET_TRANSFER_SIZE_INFO
EndpointSize	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR EndpointSize;			\/\/ Endpoint size$/;"	m	struct:ft_program_data
Enterprise	.\SpinAPI\src\ddk_headers\winddk.h	/^  Enterprise,$/;"	e	enum:_SUITE_TYPE
Entry	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  Entry;$/;"	m	struct:_KBUGCHECK_CALLBACK_RECORD
EntryContext	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  EntryContext;$/;"	m	struct:_RTL_QUERY_REGISTRY_TABLE
EofChar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char EofChar;				\/* End of Input character				*\/$/;"	m	struct:_FTDCB
Equal	.\SpinAPI\interpreter\src\interpreter.cpp	/^	enum TokenType { Identifier = 0, Numeric, Variable, Colon, Comma, Equal, EndOfLine, EndOfFile };$/;"	e	enum:tagToken::TokenType	file:
ErrorChar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char ErrorChar;				\/* Error replacement char				*\/$/;"	m	struct:_FTDCB
ErrorCode	.\SpinAPI\src\ddk_headers\winddk.h	/^	NTSTATUS  ErrorCode; $/;"	m	struct:_IO_ERROR_LOG_PACKET
ErrorOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ErrorOffset;$/;"	m	struct:_KFLOATING_SAVE
ErrorSelector	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ErrorSelector;$/;"	m	struct:_KFLOATING_SAVE
Event	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  Event;$/;"	m	struct:_DEVICE_INTERFACE_CHANGE_NOTIFICATION
Event	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  Event;$/;"	m	struct:_HWPROFILE_CHANGE_NOTIFICATION
Event	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  Event;$/;"	m	struct:_PLUGPLAY_NOTIFICATION_HEADER
Event	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  Event;$/;"	m	struct:_TARGET_DEVICE_CUSTOM_NOTIFICATION
Event	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  Event;$/;"	m	struct:_TARGET_DEVICE_REMOVAL_NOTIFICATION
Event	.\SpinAPI\src\ddk_headers\winddk.h	/^  KEVENT  Event;$/;"	m	struct:_FAST_MUTEX
Event	.\SpinAPI\src\ddk_headers\winddk.h	/^  KEVENT  Event;$/;"	m	struct:_FILE_OBJECT
EventCategory	.\SpinAPI\src\ddk_headers\winddk.h	/^	USHORT  EventCategory; $/;"	m	struct:_IO_ERROR_LOG_PACKET
EventCategoryDeviceInterfaceChange	.\SpinAPI\src\ddk_headers\winddk.h	/^  EventCategoryDeviceInterfaceChange,$/;"	e	enum:_IO_NOTIFICATION_EVENT_CATEGORY
EventCategoryHardwareProfileChange	.\SpinAPI\src\ddk_headers\winddk.h	/^  EventCategoryHardwareProfileChange,$/;"	e	enum:_IO_NOTIFICATION_EVENT_CATEGORY
EventCategoryReserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  EventCategoryReserved,$/;"	e	enum:_IO_NOTIFICATION_EVENT_CATEGORY
EventCategoryTargetDeviceChange	.\SpinAPI\src\ddk_headers\winddk.h	/^  EventCategoryTargetDeviceChange$/;"	e	enum:_IO_NOTIFICATION_EVENT_CATEGORY
EventLoggerHandleClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  EventLoggerHandleClass,$/;"	e	enum:_TRACE_INFORMATION_CLASS
EvtChar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char EvtChar;				\/* Received Event character				*\/$/;"	m	struct:_FTDCB
ExAcquireResourceExclusive	.\SpinAPI\src\ddk_headers\winnt4.h	153;"	d
ExAcquireResourceShared	.\SpinAPI\src\ddk_headers\winnt4.h	154;"	d
ExAllocateFromNPagedLookasideList	.\SpinAPI\src\ddk_headers\winddk.h	/^ExAllocateFromNPagedLookasideList($/;"	f
ExAllocateFromPagedLookasideList	.\SpinAPI\src\ddk_headers\winddk.h	/^ExAllocateFromPagedLookasideList($/;"	f
ExAllocateFromZone	.\SpinAPI\src\ddk_headers\winnt4.h	/^ExAllocateFromZone($/;"	f
ExAllocatePool	.\SpinAPI\src\ddk_headers\winddk.h	5213;"	d
ExAllocatePoolWithQuota	.\SpinAPI\src\ddk_headers\winddk.h	5212;"	d
ExConvertExclusiveToShared	.\SpinAPI\src\ddk_headers\winnt4.h	155;"	d
ExDeleteResource	.\SpinAPI\src\ddk_headers\winnt4.h	156;"	d
ExFreePool	.\SpinAPI\src\ddk_headers\winddk.h	5284;"	d
ExFreeToNPagedLookasideList	.\SpinAPI\src\ddk_headers\winddk.h	/^ExFreeToNPagedLookasideList($/;"	f
ExFreeToPagedLookasideList	.\SpinAPI\src\ddk_headers\winddk.h	/^ExFreeToPagedLookasideList($/;"	f
ExFreeToZone	.\SpinAPI\src\ddk_headers\winnt4.h	/^ExFreeToZone($/;"	f
ExGetCurrentResourceThread	.\SpinAPI\src\ddk_headers\winddk.h	5299;"	d
ExInitializeFastMutex	.\SpinAPI\src\ddk_headers\winddk.h	5332;"	d
ExInitializeResource	.\SpinAPI\src\ddk_headers\winnt4.h	157;"	d
ExInitializeSListHead	.\SpinAPI\src\ddk_headers\winddk.h	5378;"	d
ExInitializeWorkItem	.\SpinAPI\src\ddk_headers\winnt4.h	116;"	d
ExInterlockedAllocateFromZone	.\SpinAPI\src\ddk_headers\winnt4.h	88;"	d
ExInterlockedDecrementLong	.\SpinAPI\src\ddk_headers\winnt4.h	614;"	d
ExInterlockedExchangeUlong	.\SpinAPI\src\ddk_headers\winnt4.h	615;"	d
ExInterlockedIncrementLong	.\SpinAPI\src\ddk_headers\winnt4.h	613;"	d
ExInterlockedPopEntrySList	.\SpinAPI\src\ddk_headers\winddk.h	5097;"	d
ExInterlockedPushEntrySList	.\SpinAPI\src\ddk_headers\winddk.h	5101;"	d
ExIsFullZone	.\SpinAPI\src\ddk_headers\winnt4.h	130;"	d
ExIsResourceAcquired	.\SpinAPI\src\ddk_headers\winnt4.h	160;"	d
ExIsResourceAcquiredExclusive	.\SpinAPI\src\ddk_headers\winnt4.h	158;"	d
ExIsResourceAcquiredShared	.\SpinAPI\src\ddk_headers\winnt4.h	159;"	d
ExQueryDepthSList	.\SpinAPI\src\ddk_headers\winddk.h	5107;"	d
ExReleaseResourceForThread	.\SpinAPI\src\ddk_headers\winnt4.h	161;"	d
ExceptionList	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  ExceptionList;         \/* 00 *\/$/;"	m	struct:_KPCR_TIB
ExclusiveWaiters	.\SpinAPI\src\ddk_headers\winddk.h	/^  PKEVENT  ExclusiveWaiters;$/;"	m	struct:_ERESOURCE
Executive	.\SpinAPI\src\ddk_headers\winddk.h	/^  Executive,$/;"	e	enum:_KWAIT_REASON
Exit	.\SpinAPI\interpreter\src\gui.cpp	/^void Exit()$/;"	f
F4_RSIZE	.\SpinAPI\src\if.c	1591;"	d	file:
F4_RSIZE	.\SpinAPI\src\if.c	1626;"	d	file:
FACILITY_ACPI_ERROR_CODE	.\SpinAPI\src\ddk_headers\ntstatus.h	46;"	d
FACILITY_CLUSTER_ERROR_CODE	.\SpinAPI\src\ddk_headers\ntstatus.h	45;"	d
FACILITY_DEBUGGER	.\SpinAPI\src\ddk_headers\ntstatus.h	37;"	d
FACILITY_FIREWIRE_ERROR_CODE	.\SpinAPI\src\ddk_headers\ntstatus.h	44;"	d
FACILITY_HID_ERROR_CODE	.\SpinAPI\src\ddk_headers\ntstatus.h	43;"	d
FACILITY_IO_ERROR_CODE	.\SpinAPI\src\ddk_headers\ntstatus.h	40;"	d
FACILITY_RPC_RUNTIME	.\SpinAPI\src\ddk_headers\ntstatus.h	38;"	d
FACILITY_RPC_STUBS	.\SpinAPI\src\ddk_headers\ntstatus.h	39;"	d
FACILITY_SXS_ERROR_CODE	.\SpinAPI\src\ddk_headers\ntstatus.h	47;"	d
FACILITY_TERMINAL_SERVER	.\SpinAPI\src\ddk_headers\ntstatus.h	41;"	d
FACILITY_USB_ERROR_CODE	.\SpinAPI\src\ddk_headers\ntstatus.h	42;"	d
FAST_IO_DISPATCH	.\SpinAPI\src\ddk_headers\winddk.h	/^} FAST_IO_DISPATCH, *PFAST_IO_DISPATCH;$/;"	t	typeref:struct:_FAST_IO_DISPATCH
FAST_MUTEX	.\SpinAPI\src\ddk_headers\winddk.h	/^} FAST_MUTEX, *PFAST_MUTEX;$/;"	t	typeref:struct:_FAST_MUTEX
FELIX_OPEN_FILE_ERROR	.\mrispinapi.h	70;"	d
FFTW3_H	.\fftw3.h	48;"	d
FFTW_ALLOW_LARGE_GENERIC	.\fftw3.h	369;"	d
FFTW_ALLOW_PRUNING	.\fftw3.h	376;"	d
FFTW_BACKWARD	.\fftw3.h	348;"	d
FFTW_BELIEVE_PCOST	.\fftw3.h	364;"	d
FFTW_CONCAT	.\fftw3.h	65;"	d
FFTW_CONSERVE_MEMORY	.\fftw3.h	356;"	d
FFTW_DEFINE_API	.\fftw3.h	118;"	d
FFTW_DEFINE_COMPLEX	.\fftw3.h	60;"	d
FFTW_DEFINE_COMPLEX	.\fftw3.h	62;"	d
FFTW_DESTROY_INPUT	.\fftw3.h	354;"	d
FFTW_DHT	.\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_DLL	.\fftw3.h	72;"	d
FFTW_ESTIMATE	.\fftw3.h	360;"	d
FFTW_ESTIMATE_PATIENT	.\fftw3.h	363;"	d
FFTW_EXHAUSTIVE	.\fftw3.h	357;"	d
FFTW_EXTERN	.\fftw3.h	82;"	d
FFTW_EXTERN	.\fftw3.h	84;"	d
FFTW_EXTERN	.\fftw3.h	87;"	d
FFTW_FORWARD	.\fftw3.h	347;"	d
FFTW_HC2R	.\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_MANGLE_DOUBLE	.\fftw3.h	66;"	d
FFTW_MANGLE_FLOAT	.\fftw3.h	67;"	d
FFTW_MANGLE_LONG_DOUBLE	.\fftw3.h	68;"	d
FFTW_MEASURE	.\fftw3.h	353;"	d
FFTW_NO_BUFFERING	.\fftw3.h	367;"	d
FFTW_NO_DFT_R2HC	.\fftw3.h	365;"	d
FFTW_NO_FIXED_RADIX_LARGE_N	.\fftw3.h	375;"	d
FFTW_NO_INDIRECT_OP	.\fftw3.h	368;"	d
FFTW_NO_NONTHREADED	.\fftw3.h	366;"	d
FFTW_NO_RANK_SPLITS	.\fftw3.h	370;"	d
FFTW_NO_SIMD	.\fftw3.h	373;"	d
FFTW_NO_SLOW	.\fftw3.h	374;"	d
FFTW_NO_TIMELIMIT	.\fftw3.h	350;"	d
FFTW_NO_VRANK_SPLITS	.\fftw3.h	371;"	d
FFTW_NO_VRECURSE	.\fftw3.h	372;"	d
FFTW_PATIENT	.\fftw3.h	359;"	d
FFTW_PRESERVE_INPUT	.\fftw3.h	358;"	d
FFTW_R2HC	.\fftw3.h	/^     FFTW_R2HC=0, FFTW_HC2R=1, FFTW_DHT=2,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT00	.\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT01	.\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT10	.\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_REDFT11	.\fftw3.h	/^     FFTW_REDFT00=3, FFTW_REDFT01=4, FFTW_REDFT10=5, FFTW_REDFT11=6,$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT00	.\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT01	.\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT10	.\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_RODFT11	.\fftw3.h	/^     FFTW_RODFT00=7, FFTW_RODFT01=8, FFTW_RODFT10=9, FFTW_RODFT11=10$/;"	e	enum:fftw_r2r_kind_do_not_use_me
FFTW_UNALIGNED	.\fftw3.h	355;"	d
FFTW_WISDOM_ONLY	.\fftw3.h	377;"	d
FID_START	.\SpinAPI\src\fid.h	29;"	d
FID_TIME	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set FID_TIME=10000$/;"	v
FID_TYPE	.\SpinAPI\src\fid.h	2;"	d
FID_UNITS	.\SpinAPI\src\fid.h	17;"	d
FID_VERT_OFFSET	.\SpinAPI\src\fid.h	31;"	d
FID_VERT_SCALE	.\SpinAPI\src\fid.h	32;"	d
FIELD_OFFSET	.\SpinAPI\src\ddk_headers\winddk.h	3954;"	d
FILENAME	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set FILENAME=hahn_echo$/;"	v
FILENAME	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set FILENAME=hahn_echo$/;"	v
FILENAME	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set FILENAME=stim_echo$/;"	v
FILENAME	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set FILENAME=T1_sweep$/;"	v
FILE_128_BYTE_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	1622;"	d
FILE_256_BYTE_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	1623;"	d
FILE_32_BYTE_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	1620;"	d
FILE_512_BYTE_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	1624;"	d
FILE_64_BYTE_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	1621;"	d
FILE_ADD_FILE	.\SpinAPI\src\ddk_headers\winddk.h	184;"	d
FILE_ADD_SUBDIRECTORY	.\SpinAPI\src\ddk_headers\winddk.h	186;"	d
FILE_ALIGNMENT_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_ALIGNMENT_INFORMATION;$/;"	t	typeref:struct:_FILE_ALIGNMENT_INFORMATION
FILE_ALL_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	262;"	d
FILE_ANY_ACCESS	.\SpinAPI\src\ddk_headers\devioctl.h	150;"	d
FILE_ANY_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	257;"	d
FILE_APPEND_DATA	.\SpinAPI\src\ddk_headers\winddk.h	187;"	d
FILE_ATTRIBUTE_ARCHIVE	.\SpinAPI\src\ddk_headers\winddk.h	206;"	d
FILE_ATTRIBUTE_COMPRESSED	.\SpinAPI\src\ddk_headers\winddk.h	212;"	d
FILE_ATTRIBUTE_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	207;"	d
FILE_ATTRIBUTE_DIRECTORY	.\SpinAPI\src\ddk_headers\winddk.h	205;"	d
FILE_ATTRIBUTE_ENCRYPTED	.\SpinAPI\src\ddk_headers\winddk.h	215;"	d
FILE_ATTRIBUTE_HIDDEN	.\SpinAPI\src\ddk_headers\winddk.h	203;"	d
FILE_ATTRIBUTE_NORMAL	.\SpinAPI\src\ddk_headers\winddk.h	208;"	d
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED	.\SpinAPI\src\ddk_headers\winddk.h	214;"	d
FILE_ATTRIBUTE_OFFLINE	.\SpinAPI\src\ddk_headers\winddk.h	213;"	d
FILE_ATTRIBUTE_READONLY	.\SpinAPI\src\ddk_headers\winddk.h	202;"	d
FILE_ATTRIBUTE_REPARSE_POINT	.\SpinAPI\src\ddk_headers\winddk.h	211;"	d
FILE_ATTRIBUTE_SPARSE_FILE	.\SpinAPI\src\ddk_headers\winddk.h	210;"	d
FILE_ATTRIBUTE_SYSTEM	.\SpinAPI\src\ddk_headers\winddk.h	204;"	d
FILE_ATTRIBUTE_TAG_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION;$/;"	t	typeref:struct:_FILE_ATTRIBUTE_TAG_INFORMATION
FILE_ATTRIBUTE_TEMPORARY	.\SpinAPI\src\ddk_headers\winddk.h	209;"	d
FILE_ATTRIBUTE_VALID_FLAGS	.\SpinAPI\src\ddk_headers\winddk.h	217;"	d
FILE_ATTRIBUTE_VALID_SET_FLAGS	.\SpinAPI\src\ddk_headers\winddk.h	218;"	d
FILE_AUTOGENERATED_DEVICE_NAME	.\SpinAPI\src\ddk_headers\winddk.h	1610;"	d
FILE_BASIC_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION;$/;"	t	typeref:struct:_FILE_BASIC_INFORMATION
FILE_BYTE_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	1615;"	d
FILE_COMPLETE_IF_OPLOCKED	.\SpinAPI\src\ddk_headers\winddk.h	244;"	d
FILE_COPY_STRUCTURED_STORAGE	.\SpinAPI\src\ddk_headers\winddk.h	220;"	d
FILE_CREATE	.\SpinAPI\src\ddk_headers\winddk.h	230;"	d
FILE_CREATED	.\SpinAPI\src\ddk_headers\winddk.h	176;"	d
FILE_CREATE_PIPE_INSTANCE	.\SpinAPI\src\ddk_headers\winddk.h	188;"	d
FILE_CREATE_TREE_CONNECTION	.\SpinAPI\src\ddk_headers\winddk.h	243;"	d
FILE_DELETE_CHILD	.\SpinAPI\src\ddk_headers\winddk.h	193;"	d
FILE_DELETE_ON_CLOSE	.\SpinAPI\src\ddk_headers\winddk.h	248;"	d
FILE_DEVICE_8042_PORT	.\SpinAPI\src\ddk_headers\devioctl.h	71;"	d
FILE_DEVICE_8042_PORT	.\SpinAPI\src\ddk_headers\winddk.h	1668;"	d
FILE_DEVICE_ACPI	.\SpinAPI\src\ddk_headers\devioctl.h	82;"	d
FILE_DEVICE_ACPI	.\SpinAPI\src\ddk_headers\winddk.h	1679;"	d
FILE_DEVICE_BATTERY	.\SpinAPI\src\ddk_headers\devioctl.h	73;"	d
FILE_DEVICE_BATTERY	.\SpinAPI\src\ddk_headers\winddk.h	1670;"	d
FILE_DEVICE_BEEP	.\SpinAPI\src\ddk_headers\devioctl.h	33;"	d
FILE_DEVICE_BEEP	.\SpinAPI\src\ddk_headers\winddk.h	1630;"	d
FILE_DEVICE_BLUETOOTH	.\SpinAPI\src\ddk_headers\devioctl.h	95;"	d
FILE_DEVICE_BUS_EXTENDER	.\SpinAPI\src\ddk_headers\devioctl.h	74;"	d
FILE_DEVICE_BUS_EXTENDER	.\SpinAPI\src\ddk_headers\winddk.h	1671;"	d
FILE_DEVICE_CD_ROM	.\SpinAPI\src\ddk_headers\devioctl.h	34;"	d
FILE_DEVICE_CD_ROM	.\SpinAPI\src\ddk_headers\winddk.h	1631;"	d
FILE_DEVICE_CD_ROM_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\devioctl.h	35;"	d
FILE_DEVICE_CD_ROM_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\winddk.h	1632;"	d
FILE_DEVICE_CHANGER	.\SpinAPI\src\ddk_headers\devioctl.h	80;"	d
FILE_DEVICE_CHANGER	.\SpinAPI\src\ddk_headers\winddk.h	1677;"	d
FILE_DEVICE_CONTROLLER	.\SpinAPI\src\ddk_headers\devioctl.h	36;"	d
FILE_DEVICE_CONTROLLER	.\SpinAPI\src\ddk_headers\winddk.h	1633;"	d
FILE_DEVICE_CRYPT_PROVIDER	.\SpinAPI\src\ddk_headers\devioctl.h	93;"	d
FILE_DEVICE_DATALINK	.\SpinAPI\src\ddk_headers\devioctl.h	37;"	d
FILE_DEVICE_DATALINK	.\SpinAPI\src\ddk_headers\winddk.h	1634;"	d
FILE_DEVICE_DFS	.\SpinAPI\src\ddk_headers\devioctl.h	38;"	d
FILE_DEVICE_DFS	.\SpinAPI\src\ddk_headers\winddk.h	1635;"	d
FILE_DEVICE_DFS_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\devioctl.h	85;"	d
FILE_DEVICE_DFS_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\winddk.h	1682;"	d
FILE_DEVICE_DFS_VOLUME	.\SpinAPI\src\ddk_headers\devioctl.h	86;"	d
FILE_DEVICE_DFS_VOLUME	.\SpinAPI\src\ddk_headers\winddk.h	1683;"	d
FILE_DEVICE_DISK	.\SpinAPI\src\ddk_headers\devioctl.h	39;"	d
FILE_DEVICE_DISK	.\SpinAPI\src\ddk_headers\winddk.h	1636;"	d
FILE_DEVICE_DISK_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\devioctl.h	40;"	d
FILE_DEVICE_DISK_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\winddk.h	1637;"	d
FILE_DEVICE_DVD	.\SpinAPI\src\ddk_headers\devioctl.h	83;"	d
FILE_DEVICE_DVD	.\SpinAPI\src\ddk_headers\winddk.h	1680;"	d
FILE_DEVICE_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\devioctl.h	41;"	d
FILE_DEVICE_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\winddk.h	1638;"	d
FILE_DEVICE_FIPS	.\SpinAPI\src\ddk_headers\devioctl.h	90;"	d
FILE_DEVICE_FIPS	.\SpinAPI\src\ddk_headers\winddk.h	1687;"	d
FILE_DEVICE_FULLSCREEN_VIDEO	.\SpinAPI\src\ddk_headers\devioctl.h	84;"	d
FILE_DEVICE_FULLSCREEN_VIDEO	.\SpinAPI\src\ddk_headers\winddk.h	1681;"	d
FILE_DEVICE_INFINIBAND	.\SpinAPI\src\ddk_headers\devioctl.h	91;"	d
FILE_DEVICE_INPORT_PORT	.\SpinAPI\src\ddk_headers\devioctl.h	42;"	d
FILE_DEVICE_INPORT_PORT	.\SpinAPI\src\ddk_headers\winddk.h	1639;"	d
FILE_DEVICE_IS_MOUNTED	.\SpinAPI\src\ddk_headers\winddk.h	1608;"	d
FILE_DEVICE_KEYBOARD	.\SpinAPI\src\ddk_headers\devioctl.h	43;"	d
FILE_DEVICE_KEYBOARD	.\SpinAPI\src\ddk_headers\winddk.h	1640;"	d
FILE_DEVICE_KS	.\SpinAPI\src\ddk_headers\devioctl.h	79;"	d
FILE_DEVICE_KS	.\SpinAPI\src\ddk_headers\winddk.h	1676;"	d
FILE_DEVICE_KSEC	.\SpinAPI\src\ddk_headers\devioctl.h	89;"	d
FILE_DEVICE_KSEC	.\SpinAPI\src\ddk_headers\winddk.h	1686;"	d
FILE_DEVICE_MAILSLOT	.\SpinAPI\src\ddk_headers\devioctl.h	44;"	d
FILE_DEVICE_MAILSLOT	.\SpinAPI\src\ddk_headers\winddk.h	1641;"	d
FILE_DEVICE_MASS_STORAGE	.\SpinAPI\src\ddk_headers\devioctl.h	77;"	d
FILE_DEVICE_MASS_STORAGE	.\SpinAPI\src\ddk_headers\winddk.h	1674;"	d
FILE_DEVICE_MIDI_IN	.\SpinAPI\src\ddk_headers\devioctl.h	45;"	d
FILE_DEVICE_MIDI_IN	.\SpinAPI\src\ddk_headers\winddk.h	1642;"	d
FILE_DEVICE_MIDI_OUT	.\SpinAPI\src\ddk_headers\devioctl.h	46;"	d
FILE_DEVICE_MIDI_OUT	.\SpinAPI\src\ddk_headers\winddk.h	1643;"	d
FILE_DEVICE_MODEM	.\SpinAPI\src\ddk_headers\devioctl.h	75;"	d
FILE_DEVICE_MODEM	.\SpinAPI\src\ddk_headers\winddk.h	1672;"	d
FILE_DEVICE_MOUSE	.\SpinAPI\src\ddk_headers\devioctl.h	47;"	d
FILE_DEVICE_MOUSE	.\SpinAPI\src\ddk_headers\winddk.h	1644;"	d
FILE_DEVICE_MULTI_UNC_PROVIDER	.\SpinAPI\src\ddk_headers\devioctl.h	48;"	d
FILE_DEVICE_MULTI_UNC_PROVIDER	.\SpinAPI\src\ddk_headers\winddk.h	1645;"	d
FILE_DEVICE_NAMED_PIPE	.\SpinAPI\src\ddk_headers\devioctl.h	49;"	d
FILE_DEVICE_NAMED_PIPE	.\SpinAPI\src\ddk_headers\winddk.h	1646;"	d
FILE_DEVICE_NETWORK	.\SpinAPI\src\ddk_headers\devioctl.h	50;"	d
FILE_DEVICE_NETWORK	.\SpinAPI\src\ddk_headers\winddk.h	1647;"	d
FILE_DEVICE_NETWORK_BROWSER	.\SpinAPI\src\ddk_headers\devioctl.h	51;"	d
FILE_DEVICE_NETWORK_BROWSER	.\SpinAPI\src\ddk_headers\winddk.h	1648;"	d
FILE_DEVICE_NETWORK_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\devioctl.h	52;"	d
FILE_DEVICE_NETWORK_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\winddk.h	1649;"	d
FILE_DEVICE_NETWORK_REDIRECTOR	.\SpinAPI\src\ddk_headers\devioctl.h	72;"	d
FILE_DEVICE_NETWORK_REDIRECTOR	.\SpinAPI\src\ddk_headers\winddk.h	1669;"	d
FILE_DEVICE_NULL	.\SpinAPI\src\ddk_headers\devioctl.h	53;"	d
FILE_DEVICE_NULL	.\SpinAPI\src\ddk_headers\winddk.h	1650;"	d
FILE_DEVICE_PARALLEL_PORT	.\SpinAPI\src\ddk_headers\devioctl.h	54;"	d
FILE_DEVICE_PARALLEL_PORT	.\SpinAPI\src\ddk_headers\winddk.h	1651;"	d
FILE_DEVICE_PHYSICAL_NETCARD	.\SpinAPI\src\ddk_headers\devioctl.h	55;"	d
FILE_DEVICE_PHYSICAL_NETCARD	.\SpinAPI\src\ddk_headers\winddk.h	1652;"	d
FILE_DEVICE_PRINTER	.\SpinAPI\src\ddk_headers\devioctl.h	56;"	d
FILE_DEVICE_PRINTER	.\SpinAPI\src\ddk_headers\winddk.h	1653;"	d
FILE_DEVICE_SCANNER	.\SpinAPI\src\ddk_headers\devioctl.h	57;"	d
FILE_DEVICE_SCANNER	.\SpinAPI\src\ddk_headers\winddk.h	1654;"	d
FILE_DEVICE_SCREEN	.\SpinAPI\src\ddk_headers\devioctl.h	60;"	d
FILE_DEVICE_SCREEN	.\SpinAPI\src\ddk_headers\winddk.h	1657;"	d
FILE_DEVICE_SECURE_OPEN	.\SpinAPI\src\ddk_headers\winddk.h	1611;"	d
FILE_DEVICE_SERENUM	.\SpinAPI\src\ddk_headers\devioctl.h	87;"	d
FILE_DEVICE_SERENUM	.\SpinAPI\src\ddk_headers\winddk.h	1684;"	d
FILE_DEVICE_SERIAL_MOUSE_PORT	.\SpinAPI\src\ddk_headers\devioctl.h	58;"	d
FILE_DEVICE_SERIAL_MOUSE_PORT	.\SpinAPI\src\ddk_headers\winddk.h	1655;"	d
FILE_DEVICE_SERIAL_PORT	.\SpinAPI\src\ddk_headers\devioctl.h	59;"	d
FILE_DEVICE_SERIAL_PORT	.\SpinAPI\src\ddk_headers\winddk.h	1656;"	d
FILE_DEVICE_SMARTCARD	.\SpinAPI\src\ddk_headers\devioctl.h	81;"	d
FILE_DEVICE_SMARTCARD	.\SpinAPI\src\ddk_headers\winddk.h	1678;"	d
FILE_DEVICE_SMB	.\SpinAPI\src\ddk_headers\devioctl.h	78;"	d
FILE_DEVICE_SMB	.\SpinAPI\src\ddk_headers\winddk.h	1675;"	d
FILE_DEVICE_SOUND	.\SpinAPI\src\ddk_headers\devioctl.h	61;"	d
FILE_DEVICE_SOUND	.\SpinAPI\src\ddk_headers\winddk.h	1658;"	d
FILE_DEVICE_STREAMS	.\SpinAPI\src\ddk_headers\devioctl.h	62;"	d
FILE_DEVICE_STREAMS	.\SpinAPI\src\ddk_headers\winddk.h	1659;"	d
FILE_DEVICE_TAPE	.\SpinAPI\src\ddk_headers\devioctl.h	63;"	d
FILE_DEVICE_TAPE	.\SpinAPI\src\ddk_headers\winddk.h	1660;"	d
FILE_DEVICE_TAPE_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\devioctl.h	64;"	d
FILE_DEVICE_TAPE_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\winddk.h	1661;"	d
FILE_DEVICE_TERMSRV	.\SpinAPI\src\ddk_headers\devioctl.h	88;"	d
FILE_DEVICE_TERMSRV	.\SpinAPI\src\ddk_headers\winddk.h	1685;"	d
FILE_DEVICE_TRANSPORT	.\SpinAPI\src\ddk_headers\devioctl.h	65;"	d
FILE_DEVICE_TRANSPORT	.\SpinAPI\src\ddk_headers\winddk.h	1662;"	d
FILE_DEVICE_UNKNOWN	.\SpinAPI\src\ddk_headers\devioctl.h	66;"	d
FILE_DEVICE_UNKNOWN	.\SpinAPI\src\ddk_headers\winddk.h	1663;"	d
FILE_DEVICE_VDM	.\SpinAPI\src\ddk_headers\devioctl.h	76;"	d
FILE_DEVICE_VDM	.\SpinAPI\src\ddk_headers\winddk.h	1673;"	d
FILE_DEVICE_VIDEO	.\SpinAPI\src\ddk_headers\devioctl.h	67;"	d
FILE_DEVICE_VIDEO	.\SpinAPI\src\ddk_headers\winddk.h	1664;"	d
FILE_DEVICE_VIRTUAL_DISK	.\SpinAPI\src\ddk_headers\devioctl.h	68;"	d
FILE_DEVICE_VIRTUAL_DISK	.\SpinAPI\src\ddk_headers\winddk.h	1665;"	d
FILE_DEVICE_VMBUS	.\SpinAPI\src\ddk_headers\devioctl.h	92;"	d
FILE_DEVICE_WAVE_IN	.\SpinAPI\src\ddk_headers\devioctl.h	69;"	d
FILE_DEVICE_WAVE_IN	.\SpinAPI\src\ddk_headers\winddk.h	1666;"	d
FILE_DEVICE_WAVE_OUT	.\SpinAPI\src\ddk_headers\devioctl.h	70;"	d
FILE_DEVICE_WAVE_OUT	.\SpinAPI\src\ddk_headers\winddk.h	1667;"	d
FILE_DEVICE_WPD	.\SpinAPI\src\ddk_headers\devioctl.h	94;"	d
FILE_DIRECTORY_FILE	.\SpinAPI\src\ddk_headers\winddk.h	236;"	d
FILE_DISPOSITION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION; $/;"	t	typeref:struct:_FILE_DISPOSITION_INFORMATION
FILE_DOES_NOT_EXIST	.\SpinAPI\src\ddk_headers\winddk.h	179;"	d
FILE_END_OF_FILE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION; $/;"	t	typeref:struct:_FILE_END_OF_FILE_INFORMATION
FILE_EXECUTE	.\SpinAPI\src\ddk_headers\winddk.h	191;"	d
FILE_EXISTS	.\SpinAPI\src\ddk_headers\winddk.h	178;"	d
FILE_FLOPPY_DISKETTE	.\SpinAPI\src\ddk_headers\winddk.h	1605;"	d
FILE_FS_DEVICE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION;$/;"	t	typeref:struct:_FILE_FS_DEVICE_INFORMATION
FILE_FULL_EA_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_FULL_EA_INFORMATION, *PFILE_FULL_EA_INFORMATION;$/;"	t	typeref:struct:_FILE_FULL_EA_INFORMATION
FILE_GENERIC_EXECUTE	.\SpinAPI\src\ddk_headers\winddk.h	267;"	d
FILE_GENERIC_READ	.\SpinAPI\src\ddk_headers\winddk.h	273;"	d
FILE_GENERIC_WRITE	.\SpinAPI\src\ddk_headers\winddk.h	280;"	d
FILE_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;$/;"	t	typeref:enum:_FILE_INFORMATION_CLASS
FILE_LIST_DIRECTORY	.\SpinAPI\src\ddk_headers\winddk.h	182;"	d
FILE_LONG_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	1617;"	d
FILE_MAXIMUM_DISPOSITION	.\SpinAPI\src\ddk_headers\winddk.h	234;"	d
FILE_NAME_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION;           $/;"	t	typeref:struct:_FILE_NAME_INFORMATION
FILE_NETWORK_OPEN_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION;   $/;"	t	typeref:struct:_FILE_NETWORK_OPEN_INFORMATION
FILE_NON_DIRECTORY_FILE	.\SpinAPI\src\ddk_headers\winddk.h	242;"	d
FILE_NO_COMPRESSION	.\SpinAPI\src\ddk_headers\winddk.h	251;"	d
FILE_NO_EA_KNOWLEDGE	.\SpinAPI\src\ddk_headers\winddk.h	245;"	d
FILE_NO_INTERMEDIATE_BUFFERING	.\SpinAPI\src\ddk_headers\winddk.h	239;"	d
FILE_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_OBJECT;$/;"	t	typeref:struct:_FILE_OBJECT
FILE_OCTA_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	1619;"	d
FILE_OPEN	.\SpinAPI\src\ddk_headers\winddk.h	229;"	d
FILE_OPENED	.\SpinAPI\src\ddk_headers\winddk.h	175;"	d
FILE_OPEN_BY_FILE_ID	.\SpinAPI\src\ddk_headers\winddk.h	249;"	d
FILE_OPEN_FOR_BACKUP_INTENT	.\SpinAPI\src\ddk_headers\winddk.h	250;"	d
FILE_OPEN_FOR_FREE_SPACE_QUERY	.\SpinAPI\src\ddk_headers\winddk.h	255;"	d
FILE_OPEN_FOR_RECOVERY	.\SpinAPI\src\ddk_headers\winddk.h	246;"	d
FILE_OPEN_IF	.\SpinAPI\src\ddk_headers\winddk.h	231;"	d
FILE_OPEN_NO_RECALL	.\SpinAPI\src\ddk_headers\winddk.h	254;"	d
FILE_OPEN_REPARSE_POINT	.\SpinAPI\src\ddk_headers\winddk.h	253;"	d
FILE_OVERWRITE	.\SpinAPI\src\ddk_headers\winddk.h	232;"	d
FILE_OVERWRITE_IF	.\SpinAPI\src\ddk_headers\winddk.h	233;"	d
FILE_OVERWRITTEN	.\SpinAPI\src\ddk_headers\winddk.h	177;"	d
FILE_POSITION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION;   $/;"	t	typeref:struct:_FILE_POSITION_INFORMATION
FILE_QUAD_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	1618;"	d
FILE_RANDOM_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	247;"	d
FILE_READ_ACCESS	.\SpinAPI\src\ddk_headers\devioctl.h	152;"	d
FILE_READ_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	259;"	d
FILE_READ_ATTRIBUTES	.\SpinAPI\src\ddk_headers\winddk.h	194;"	d
FILE_READ_DATA	.\SpinAPI\src\ddk_headers\winddk.h	183;"	d
FILE_READ_EA	.\SpinAPI\src\ddk_headers\winddk.h	189;"	d
FILE_READ_ONLY_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	1604;"	d
FILE_REMOTE_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	1607;"	d
FILE_REMOVABLE_MEDIA	.\SpinAPI\src\ddk_headers\winddk.h	1603;"	d
FILE_RESERVE_OPFILTER	.\SpinAPI\src\ddk_headers\winddk.h	252;"	d
FILE_SEQUENTIAL_ONLY	.\SpinAPI\src\ddk_headers\winddk.h	238;"	d
FILE_SHARE_DELETE	.\SpinAPI\src\ddk_headers\winddk.h	199;"	d
FILE_SHARE_READ	.\SpinAPI\src\ddk_headers\winddk.h	197;"	d
FILE_SHARE_VALID_FLAGS	.\SpinAPI\src\ddk_headers\winddk.h	200;"	d
FILE_SHARE_WRITE	.\SpinAPI\src\ddk_headers\winddk.h	198;"	d
FILE_SPECIAL_ACCESS	.\SpinAPI\src\ddk_headers\devioctl.h	151;"	d
FILE_SPECIAL_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	258;"	d
FILE_STANDARD_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION;$/;"	t	typeref:struct:_FILE_STANDARD_INFORMATION
FILE_STRUCTURED_STORAGE	.\SpinAPI\src\ddk_headers\winddk.h	221;"	d
FILE_SUPERSEDE	.\SpinAPI\src\ddk_headers\winddk.h	228;"	d
FILE_SUPERSEDED	.\SpinAPI\src\ddk_headers\winddk.h	174;"	d
FILE_SYNCHRONOUS_IO_ALERT	.\SpinAPI\src\ddk_headers\winddk.h	240;"	d
FILE_SYNCHRONOUS_IO_NONALERT	.\SpinAPI\src\ddk_headers\winddk.h	241;"	d
FILE_TRAVERSE	.\SpinAPI\src\ddk_headers\winddk.h	192;"	d
FILE_VALID_DATA_LENGTH_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION;             $/;"	t	typeref:struct:_FILE_VALID_DATA_LENGTH_INFORMATION
FILE_VALID_MAILSLOT_OPTION_FLAGS	.\SpinAPI\src\ddk_headers\winddk.h	225;"	d
FILE_VALID_OPTION_FLAGS	.\SpinAPI\src\ddk_headers\winddk.h	223;"	d
FILE_VALID_PIPE_OPTION_FLAGS	.\SpinAPI\src\ddk_headers\winddk.h	224;"	d
FILE_VALID_SET_FLAGS	.\SpinAPI\src\ddk_headers\winddk.h	226;"	d
FILE_VIRTUAL_VOLUME	.\SpinAPI\src\ddk_headers\winddk.h	1609;"	d
FILE_WORD_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	1616;"	d
FILE_WRITE_ACCESS	.\SpinAPI\src\ddk_headers\devioctl.h	153;"	d
FILE_WRITE_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	260;"	d
FILE_WRITE_ATTRIBUTES	.\SpinAPI\src\ddk_headers\winddk.h	195;"	d
FILE_WRITE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	185;"	d
FILE_WRITE_EA	.\SpinAPI\src\ddk_headers\winddk.h	190;"	d
FILE_WRITE_ONCE_MEDIA	.\SpinAPI\src\ddk_headers\winddk.h	1606;"	d
FILE_WRITE_THROUGH	.\SpinAPI\src\ddk_headers\winddk.h	237;"	d
FILTER_OVERFLOW_ERROR	.\mrispinapi.h	54;"	d
FIR_COEF_LOAD_EN	.\SpinAPI\src\if.h	49;"	d
FIR_RESET	.\SpinAPI\src\if.h	46;"	d
FIVE_PERIOD	.\SpinAPI\include\pulseblaster.h	55;"	d
FIVE_PERIOD	.\SpinAPI\src\pulseblaster.h	55;"	d
FLAG_STATES	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTL_only.c	38;"	d	file:
FLAG_STATES	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	39;"	d	file:
FLAG_STATES	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	56;"	d	file:
FLAG_STATES	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	52;"	d	file:
FLAG_STATES	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	235;"	d	file:
FNAME_SIZE	.\Sleator_apps\CPMG\cpmg.h	40;"	d
FNAME_SIZE	.\Sleator_apps\Hahn_echo\Hahn_echo.h	48;"	d
FNAME_SIZE	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	45;"	d
FNAME_SIZE	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	48;"	d
FNAME_SIZE	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	45;"	d
FNAME_SIZE	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	32;"	d
FNAME_SIZE	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	36;"	d
FORCE_AVG	.\SpinAPI\include\radioprocessor.h	465;"	d
FORCE_AVG	.\SpinAPI\src\radioprocessor.h	465;"	d
FOR_ALL_RANGES	.\SpinAPI\src\ddk_headers\winddk.h	4618;"	d
FOR_ALL_RANGES_BACKWARDS	.\SpinAPI\src\ddk_headers\winddk.h	4623;"	d
FOURIER_NUMBER	.\SpinAPI\src\fid.h	4;"	d
FOUR_PERIOD	.\SpinAPI\include\pulseblaster.h	54;"	d
FOUR_PERIOD	.\SpinAPI\src\pulseblaster.h	54;"	d
FO_ALERTABLE_IO	.\SpinAPI\src\ddk_headers\winddk.h	2372;"	d
FO_CACHE_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	2376;"	d
FO_CLEANUP_COMPLETE	.\SpinAPI\src\ddk_headers\winddk.h	2384;"	d
FO_DELETE_ON_CLOSE	.\SpinAPI\src\ddk_headers\winddk.h	2386;"	d
FO_DIRECT_DEVICE_OPEN	.\SpinAPI\src\ddk_headers\winddk.h	2381;"	d
FO_FILE_FAST_IO_READ	.\SpinAPI\src\ddk_headers\winddk.h	2389;"	d
FO_FILE_MODIFIED	.\SpinAPI\src\ddk_headers\winddk.h	2382;"	d
FO_FILE_OBJECT_HAS_EXTENSION	.\SpinAPI\src\ddk_headers\winddk.h	2393;"	d
FO_FILE_OPEN	.\SpinAPI\src\ddk_headers\winddk.h	2370;"	d
FO_FILE_OPEN_CANCELLED	.\SpinAPI\src\ddk_headers\winddk.h	2391;"	d
FO_FILE_SIZE_CHANGED	.\SpinAPI\src\ddk_headers\winddk.h	2383;"	d
FO_GENERATE_AUDIT_ON_CLOSE	.\SpinAPI\src\ddk_headers\winddk.h	2380;"	d
FO_HANDLE_CREATED	.\SpinAPI\src\ddk_headers\winddk.h	2388;"	d
FO_MAILSLOT	.\SpinAPI\src\ddk_headers\winddk.h	2379;"	d
FO_NAMED_PIPE	.\SpinAPI\src\ddk_headers\winddk.h	2377;"	d
FO_NO_INTERMEDIATE_BUFFERING	.\SpinAPI\src\ddk_headers\winddk.h	2373;"	d
FO_OPENED_CASE_SENSITIVE	.\SpinAPI\src\ddk_headers\winddk.h	2387;"	d
FO_RANDOM_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	2390;"	d
FO_REMOTE_ORIGIN	.\SpinAPI\src\ddk_headers\winddk.h	2394;"	d
FO_SEQUENTIAL_ONLY	.\SpinAPI\src\ddk_headers\winddk.h	2375;"	d
FO_STREAM_FILE	.\SpinAPI\src\ddk_headers\winddk.h	2378;"	d
FO_SYNCHRONOUS_IO	.\SpinAPI\src\ddk_headers\winddk.h	2371;"	d
FO_TEMPORARY_FILE	.\SpinAPI\src\ddk_headers\winddk.h	2385;"	d
FO_VOLUME_OPEN	.\SpinAPI\src\ddk_headers\winddk.h	2392;"	d
FO_WRITE_THROUGH	.\SpinAPI\src\ddk_headers\winddk.h	2374;"	d
FREQ0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	49;"	d	file:
FREQ0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	46;"	d	file:
FREQ0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	44;"	d	file:
FREQ0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	47;"	d	file:
FREQ1	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	50;"	d	file:
FREQ1	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	47;"	d	file:
FREQ1	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	45;"	d	file:
FREQ1	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	48;"	d	file:
FREQUENCY	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	41;"	d	file:
FREQ_ORANGE	.\SpinAPI\include\spinpts.h	25;"	d
FREQ_ORANGE	.\SpinAPI\src\spinpts.h	25;"	d
FREQ_REGS	.\SpinAPI\include\radioprocessor.h	10;"	d
FREQ_REGS	.\SpinAPI\src\radioprocessor.h	10;"	d
FREQ_REGS	.\spinapi.py	/^FREQ_REGS = 1  $/;"	v
FREQ_STEP	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	46;"	d	file:
FS_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^} FS_INFORMATION_CLASS, *PFS_INFORMATION_CLASS;$/;"	t	typeref:enum:_FSINFOCLASS
FT1248Cpol	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR FT1248Cpol;			\/\/ FT1248 clock polarity - clock idle high (1) or clock idle low (0)$/;"	m	struct:ft_eeprom_232h
FT1248Cpol	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR FT1248Cpol;			\/\/ FT1248 clock polarity - clock idle high (1) or clock idle low (0)$/;"	m	struct:ft_eeprom_x_series
FT1248CpolH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR FT1248CpolH;			\/\/ FT1248 clock polarity - clock idle high (1) or clock idle low (0)$/;"	m	struct:ft_program_data
FT1248FlowControl	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR FT1248FlowControl;	\/\/ FT1248 flow control enable$/;"	m	struct:ft_eeprom_232h
FT1248FlowControl	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR FT1248FlowControl;	\/\/ FT1248 flow control enable$/;"	m	struct:ft_eeprom_x_series
FT1248FlowControlH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR FT1248FlowControlH;	\/\/ FT1248 flow control enable$/;"	m	struct:ft_program_data
FT1248Lsb	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR FT1248Lsb;			\/\/ FT1248 data is LSB (1) or MSB (0)$/;"	m	struct:ft_eeprom_232h
FT1248Lsb	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR FT1248Lsb;			\/\/ FT1248 data is LSB (1) or MSB (0)$/;"	m	struct:ft_eeprom_x_series
FT1248LsbH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR FT1248LsbH;			\/\/ FT1248 data is LSB (1) or MSB (0)$/;"	m	struct:ft_program_data
FTCOMSTAT	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FTCOMSTAT, *LPFTCOMSTAT;$/;"	t	typeref:struct:_FTCOMSTAT
FTD2XX_API	.\SpinAPI\src\ftd2xx\ftd2xx.h	57;"	d
FTD2XX_API	.\SpinAPI\src\ftd2xx\ftd2xx.h	60;"	d
FTD2XX_API	.\SpinAPI\src\ftd2xx\ftd2xx.h	66;"	d
FTD2XX_API	.\SpinAPI\src\ftd2xx\ftd2xx.h	73;"	d
FTD2XX_H	.\SpinAPI\src\ftd2xx\ftd2xx.h	42;"	d
FTDCB	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FTDCB, *LPFTDCB;$/;"	t	typeref:struct:_FTDCB
FTTIMEOUTS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FTTIMEOUTS,*LPFTTIMEOUTS;$/;"	t	typeref:struct:_FTTIMEOUTS
FT_232H_CBUS_CLK15	.\SpinAPI\src\ftd2xx\ftd2xx.h	278;"	d
FT_232H_CBUS_CLK30	.\SpinAPI\src\ftd2xx\ftd2xx.h	277;"	d
FT_232H_CBUS_CLK7_5	.\SpinAPI\src\ftd2xx\ftd2xx.h	279;"	d
FT_232H_CBUS_DRIVE_0	.\SpinAPI\src\ftd2xx\ftd2xx.h	273;"	d
FT_232H_CBUS_DRIVE_1	.\SpinAPI\src\ftd2xx\ftd2xx.h	274;"	d
FT_232H_CBUS_IOMODE	.\SpinAPI\src\ftd2xx\ftd2xx.h	275;"	d
FT_232H_CBUS_PWREN	.\SpinAPI\src\ftd2xx\ftd2xx.h	271;"	d
FT_232H_CBUS_RXLED	.\SpinAPI\src\ftd2xx\ftd2xx.h	269;"	d
FT_232H_CBUS_SLEEP	.\SpinAPI\src\ftd2xx\ftd2xx.h	272;"	d
FT_232H_CBUS_TRISTATE	.\SpinAPI\src\ftd2xx\ftd2xx.h	267;"	d
FT_232H_CBUS_TXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	276;"	d
FT_232H_CBUS_TXLED	.\SpinAPI\src\ftd2xx\ftd2xx.h	268;"	d
FT_232H_CBUS_TXRXLED	.\SpinAPI\src\ftd2xx\ftd2xx.h	270;"	d
FT_232R_CBUS_BITBANG_RD	.\SpinAPI\src\ftd2xx\ftd2xx.h	261;"	d
FT_232R_CBUS_BITBANG_WR	.\SpinAPI\src\ftd2xx\ftd2xx.h	260;"	d
FT_232R_CBUS_CLK12	.\SpinAPI\src\ftd2xx\ftd2xx.h	257;"	d
FT_232R_CBUS_CLK24	.\SpinAPI\src\ftd2xx\ftd2xx.h	256;"	d
FT_232R_CBUS_CLK48	.\SpinAPI\src\ftd2xx\ftd2xx.h	255;"	d
FT_232R_CBUS_CLK6	.\SpinAPI\src\ftd2xx\ftd2xx.h	258;"	d
FT_232R_CBUS_IOMODE	.\SpinAPI\src\ftd2xx\ftd2xx.h	259;"	d
FT_232R_CBUS_PWRON	.\SpinAPI\src\ftd2xx\ftd2xx.h	250;"	d
FT_232R_CBUS_RXLED	.\SpinAPI\src\ftd2xx\ftd2xx.h	251;"	d
FT_232R_CBUS_SLEEP	.\SpinAPI\src\ftd2xx\ftd2xx.h	254;"	d
FT_232R_CBUS_TXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	249;"	d
FT_232R_CBUS_TXLED	.\SpinAPI\src\ftd2xx\ftd2xx.h	252;"	d
FT_232R_CBUS_TXRXLED	.\SpinAPI\src\ftd2xx\ftd2xx.h	253;"	d
FT_BAUD_115200	.\SpinAPI\src\ftd2xx\ftd2xx.h	146;"	d
FT_BAUD_1200	.\SpinAPI\src\ftd2xx\ftd2xx.h	138;"	d
FT_BAUD_14400	.\SpinAPI\src\ftd2xx\ftd2xx.h	142;"	d
FT_BAUD_19200	.\SpinAPI\src\ftd2xx\ftd2xx.h	143;"	d
FT_BAUD_230400	.\SpinAPI\src\ftd2xx\ftd2xx.h	147;"	d
FT_BAUD_2400	.\SpinAPI\src\ftd2xx\ftd2xx.h	139;"	d
FT_BAUD_300	.\SpinAPI\src\ftd2xx\ftd2xx.h	136;"	d
FT_BAUD_38400	.\SpinAPI\src\ftd2xx\ftd2xx.h	144;"	d
FT_BAUD_460800	.\SpinAPI\src\ftd2xx\ftd2xx.h	148;"	d
FT_BAUD_4800	.\SpinAPI\src\ftd2xx\ftd2xx.h	140;"	d
FT_BAUD_57600	.\SpinAPI\src\ftd2xx\ftd2xx.h	145;"	d
FT_BAUD_600	.\SpinAPI\src\ftd2xx\ftd2xx.h	137;"	d
FT_BAUD_921600	.\SpinAPI\src\ftd2xx\ftd2xx.h	149;"	d
FT_BAUD_9600	.\SpinAPI\src\ftd2xx\ftd2xx.h	141;"	d
FT_BITMODE_ASYNC_BITBANG	.\SpinAPI\src\ftd2xx\ftd2xx.h	237;"	d
FT_BITMODE_CBUS_BITBANG	.\SpinAPI\src\ftd2xx\ftd2xx.h	242;"	d
FT_BITMODE_FAST_SERIAL	.\SpinAPI\src\ftd2xx\ftd2xx.h	241;"	d
FT_BITMODE_MCU_HOST	.\SpinAPI\src\ftd2xx\ftd2xx.h	240;"	d
FT_BITMODE_MPSSE	.\SpinAPI\src\ftd2xx\ftd2xx.h	238;"	d
FT_BITMODE_RESET	.\SpinAPI\src\ftd2xx\ftd2xx.h	236;"	d
FT_BITMODE_SYNC_BITBANG	.\SpinAPI\src\ftd2xx\ftd2xx.h	239;"	d
FT_BITMODE_SYNC_FIFO	.\SpinAPI\src\ftd2xx\ftd2xx.h	243;"	d
FT_BITS_7	.\SpinAPI\src\ftd2xx\ftd2xx.h	156;"	d
FT_BITS_8	.\SpinAPI\src\ftd2xx\ftd2xx.h	155;"	d
FT_DEFAULT_RX_TIMEOUT	.\SpinAPI\src\ftd2xx\ftd2xx.h	204;"	d
FT_DEFAULT_TX_TIMEOUT	.\SpinAPI\src\ftd2xx\ftd2xx.h	205;"	d
FT_DEVICE	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^typedef ULONG	FT_DEVICE;$/;"	t
FT_DEVICE_100AX	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_100AX,$/;"	e	enum:__anon92
FT_DEVICE_2232C	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_2232C,$/;"	e	enum:__anon92
FT_DEVICE_2232H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_2232H,$/;"	e	enum:__anon92
FT_DEVICE_232H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_232H,$/;"	e	enum:__anon92
FT_DEVICE_232R	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_232R,$/;"	e	enum:__anon92
FT_DEVICE_4222H_0	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_4222H_0,$/;"	e	enum:__anon92
FT_DEVICE_4222H_1_2	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_4222H_1_2,$/;"	e	enum:__anon92
FT_DEVICE_4222H_3	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_4222H_3,$/;"	e	enum:__anon92
FT_DEVICE_4222_PROG	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^    FT_DEVICE_4222_PROG,$/;"	e	enum:__anon92
FT_DEVICE_4232H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_4232H,$/;"	e	enum:__anon92
FT_DEVICE_900	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^    FT_DEVICE_900,$/;"	e	enum:__anon92
FT_DEVICE_AM	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_AM,$/;"	e	enum:__anon92
FT_DEVICE_BM	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_BM,$/;"	e	enum:__anon92
FT_DEVICE_LIST_INFO_NODE	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_DEVICE_LIST_INFO_NODE;$/;"	t	typeref:struct:_ft_device_list_info_node
FT_DEVICE_LIST_NOT_READY	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_LIST_NOT_READY,$/;"	e	enum:__anon91
FT_DEVICE_NOT_FOUND	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_NOT_FOUND,$/;"	e	enum:__anon91
FT_DEVICE_NOT_OPENED	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_NOT_OPENED,$/;"	e	enum:__anon91
FT_DEVICE_NOT_OPENED_FOR_ERASE	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_NOT_OPENED_FOR_ERASE,$/;"	e	enum:__anon91
FT_DEVICE_NOT_OPENED_FOR_WRITE	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_NOT_OPENED_FOR_WRITE,$/;"	e	enum:__anon91
FT_DEVICE_UMFTPD3A	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^    FT_DEVICE_UMFTPD3A,$/;"	e	enum:__anon92
FT_DEVICE_UNKNOWN	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_UNKNOWN,$/;"	e	enum:__anon92
FT_DEVICE_X_SERIES	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_DEVICE_X_SERIES,$/;"	e	enum:__anon92
FT_DRIVER_TYPE_D2XX	.\SpinAPI\src\ftd2xx\ftd2xx.h	310;"	d
FT_DRIVER_TYPE_VCP	.\SpinAPI\src\ftd2xx\ftd2xx.h	311;"	d
FT_EEPROM_2232	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_2232, *PFT_EEPROM_2232;$/;"	t	typeref:struct:ft_eeprom_2232
FT_EEPROM_2232H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_2232H, *PFT_EEPROM_2232H;$/;"	t	typeref:struct:ft_eeprom_2232h
FT_EEPROM_232B	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_232B, *PFT_EEPROM_232B;$/;"	t	typeref:struct:ft_eeprom_232b
FT_EEPROM_232H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_232H, *PFT_EEPROM_232H;$/;"	t	typeref:struct:ft_eeprom_232h
FT_EEPROM_232R	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_232R, *PFT_EEPROM_232R;$/;"	t	typeref:struct:ft_eeprom_232r
FT_EEPROM_4232H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_4232H, *PFT_EEPROM_4232H;$/;"	t	typeref:struct:ft_eeprom_4232h
FT_EEPROM_ERASE_FAILED	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_EEPROM_ERASE_FAILED,$/;"	e	enum:__anon91
FT_EEPROM_HEADER	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_HEADER, *PFT_EEPROM_HEADER;$/;"	t	typeref:struct:ft_eeprom_header
FT_EEPROM_NOT_PRESENT	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_EEPROM_NOT_PRESENT,$/;"	e	enum:__anon91
FT_EEPROM_NOT_PROGRAMMED	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_EEPROM_NOT_PROGRAMMED,$/;"	e	enum:__anon91
FT_EEPROM_READ_FAILED	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_EEPROM_READ_FAILED,$/;"	e	enum:__anon91
FT_EEPROM_WRITE_FAILED	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_EEPROM_WRITE_FAILED,$/;"	e	enum:__anon91
FT_EEPROM_X_SERIES	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_X_SERIES, *PFT_EEPROM_X_SERIES;$/;"	t	typeref:struct:ft_eeprom_x_series
FT_EVENT_LINE_STATUS	.\SpinAPI\src\ftd2xx\ftd2xx.h	198;"	d
FT_EVENT_MODEM_STATUS	.\SpinAPI\src\ftd2xx\ftd2xx.h	197;"	d
FT_EVENT_RXCHAR	.\SpinAPI\src\ftd2xx\ftd2xx.h	196;"	d
FT_FAILED_TO_WRITE_DEVICE	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_FAILED_TO_WRITE_DEVICE,$/;"	e	enum:__anon91
FT_FLAGS_HISPEED	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_FLAGS_HISPEED = 2$/;"	e	enum:__anon93
FT_FLAGS_OPENED	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_FLAGS_OPENED = 1,$/;"	e	enum:__anon93
FT_FLOW_DTR_DSR	.\SpinAPI\src\ftd2xx\ftd2xx.h	181;"	d
FT_FLOW_NONE	.\SpinAPI\src\ftd2xx\ftd2xx.h	179;"	d
FT_FLOW_RTS_CTS	.\SpinAPI\src\ftd2xx\ftd2xx.h	180;"	d
FT_FLOW_XON_XOFF	.\SpinAPI\src\ftd2xx\ftd2xx.h	182;"	d
FT_HANDLE	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^typedef PVOID	FT_HANDLE;$/;"	t
FT_INSUFFICIENT_RESOURCES	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_INSUFFICIENT_RESOURCES,$/;"	e	enum:__anon91
FT_INVALID_ARGS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_INVALID_ARGS,$/;"	e	enum:__anon91
FT_INVALID_BAUD_RATE	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_INVALID_BAUD_RATE,$/;"	e	enum:__anon91
FT_INVALID_HANDLE	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_INVALID_HANDLE,$/;"	e	enum:__anon91
FT_INVALID_PARAMETER	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_INVALID_PARAMETER,$/;"	e	enum:__anon91
FT_IO_ERROR	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_IO_ERROR,$/;"	e	enum:__anon91
FT_LIST_ALL	.\SpinAPI\src\ftd2xx\ftd2xx.h	128;"	d
FT_LIST_BY_INDEX	.\SpinAPI\src\ftd2xx\ftd2xx.h	127;"	d
FT_LIST_MASK	.\SpinAPI\src\ftd2xx\ftd2xx.h	130;"	d
FT_LIST_NUMBER_ONLY	.\SpinAPI\src\ftd2xx\ftd2xx.h	126;"	d
FT_NOT_SUPPORTED	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_NOT_SUPPORTED,$/;"	e	enum:__anon91
FT_OK	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_OK,$/;"	e	enum:__anon91
FT_OPEN_BY_DESCRIPTION	.\SpinAPI\src\ftd2xx\ftd2xx.h	115;"	d
FT_OPEN_BY_LOCATION	.\SpinAPI\src\ftd2xx\ftd2xx.h	116;"	d
FT_OPEN_BY_SERIAL_NUMBER	.\SpinAPI\src\ftd2xx\ftd2xx.h	114;"	d
FT_OPEN_MASK	.\SpinAPI\src\ftd2xx\ftd2xx.h	118;"	d
FT_OTHER_ERROR	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	FT_OTHER_ERROR,$/;"	e	enum:__anon91
FT_PARITY_EVEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	171;"	d
FT_PARITY_MARK	.\SpinAPI\src\ftd2xx\ftd2xx.h	172;"	d
FT_PARITY_NONE	.\SpinAPI\src\ftd2xx\ftd2xx.h	169;"	d
FT_PARITY_ODD	.\SpinAPI\src\ftd2xx\ftd2xx.h	170;"	d
FT_PARITY_SPACE	.\SpinAPI\src\ftd2xx\ftd2xx.h	173;"	d
FT_PROGRAM_DATA	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_PROGRAM_DATA, *PFT_PROGRAM_DATA;$/;"	t	typeref:struct:ft_program_data
FT_PURGE_RX	.\SpinAPI\src\ftd2xx\ftd2xx.h	187;"	d
FT_PURGE_TX	.\SpinAPI\src\ftd2xx\ftd2xx.h	188;"	d
FT_STATUS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^typedef ULONG	FT_STATUS;$/;"	t
FT_STOP_BITS_1	.\SpinAPI\src\ftd2xx\ftd2xx.h	162;"	d
FT_STOP_BITS_2	.\SpinAPI\src\ftd2xx\ftd2xx.h	163;"	d
FT_SUCCESS	.\SpinAPI\src\ftd2xx\ftd2xx.h	108;"	d
FT_X_SERIES_CBUS_BCD_CHARGER	.\SpinAPI\src\ftd2xx\ftd2xx.h	298;"	d
FT_X_SERIES_CBUS_BCD_CHARGER_N	.\SpinAPI\src\ftd2xx\ftd2xx.h	299;"	d
FT_X_SERIES_CBUS_BITBANG_RD	.\SpinAPI\src\ftd2xx\ftd2xx.h	304;"	d
FT_X_SERIES_CBUS_BITBANG_WR	.\SpinAPI\src\ftd2xx\ftd2xx.h	303;"	d
FT_X_SERIES_CBUS_CLK12	.\SpinAPI\src\ftd2xx\ftd2xx.h	296;"	d
FT_X_SERIES_CBUS_CLK24	.\SpinAPI\src\ftd2xx\ftd2xx.h	295;"	d
FT_X_SERIES_CBUS_CLK6	.\SpinAPI\src\ftd2xx\ftd2xx.h	297;"	d
FT_X_SERIES_CBUS_DRIVE_0	.\SpinAPI\src\ftd2xx\ftd2xx.h	291;"	d
FT_X_SERIES_CBUS_DRIVE_1	.\SpinAPI\src\ftd2xx\ftd2xx.h	292;"	d
FT_X_SERIES_CBUS_I2C_RXF	.\SpinAPI\src\ftd2xx\ftd2xx.h	301;"	d
FT_X_SERIES_CBUS_I2C_TXE	.\SpinAPI\src\ftd2xx\ftd2xx.h	300;"	d
FT_X_SERIES_CBUS_IOMODE	.\SpinAPI\src\ftd2xx\ftd2xx.h	293;"	d
FT_X_SERIES_CBUS_KEEP_AWAKE	.\SpinAPI\src\ftd2xx\ftd2xx.h	306;"	d
FT_X_SERIES_CBUS_PWREN	.\SpinAPI\src\ftd2xx\ftd2xx.h	289;"	d
FT_X_SERIES_CBUS_RXLED	.\SpinAPI\src\ftd2xx\ftd2xx.h	287;"	d
FT_X_SERIES_CBUS_SLEEP	.\SpinAPI\src\ftd2xx\ftd2xx.h	290;"	d
FT_X_SERIES_CBUS_TIMESTAMP	.\SpinAPI\src\ftd2xx\ftd2xx.h	305;"	d
FT_X_SERIES_CBUS_TRISTATE	.\SpinAPI\src\ftd2xx\ftd2xx.h	285;"	d
FT_X_SERIES_CBUS_TXDEN	.\SpinAPI\src\ftd2xx\ftd2xx.h	294;"	d
FT_X_SERIES_CBUS_TXLED	.\SpinAPI\src\ftd2xx\ftd2xx.h	286;"	d
FT_X_SERIES_CBUS_TXRXLED	.\SpinAPI\src\ftd2xx\ftd2xx.h	288;"	d
FT_X_SERIES_CBUS_VBUS_SENSE	.\SpinAPI\src\ftd2xx\ftd2xx.h	302;"	d
FUNCTION_FROM_CTL_CODE	.\SpinAPI\src\cyioctl.h	150;"	d
FW_DEV_MSK	.\SpinAPI\examples\General\pb_read_firmware.c	28;"	d	file:
FW_REV_MSK	.\SpinAPI\examples\General\pb_read_firmware.c	29;"	d	file:
FastIoCheckIfPossible	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_CHECK_IF_POSSIBLE  FastIoCheckIfPossible;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoDetachDevice	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_DETACH_DEVICE  FastIoDetachDevice;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoDeviceControl	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_DEVICE_CONTROL  FastIoDeviceControl;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoDispatch	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_DISPATCH  FastIoDispatch;$/;"	m	struct:_DRIVER_OBJECT
FastIoLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_LOCK  FastIoLock;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoQueryBasicInfo	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_QUERY_BASIC_INFO  FastIoQueryBasicInfo;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoQueryNetworkOpenInfo	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_QUERY_NETWORK_OPEN_INFO  FastIoQueryNetworkOpenInfo;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoQueryOpen	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_QUERY_OPEN  FastIoQueryOpen;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoQueryStandardInfo	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_QUERY_STANDARD_INFO  FastIoQueryStandardInfo;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoRead	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_READ  FastIoRead;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoReadCompressed	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_READ_COMPRESSED  FastIoReadCompressed;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoUnlockAll	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_UNLOCK_ALL  FastIoUnlockAll;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoUnlockAllByKey	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_UNLOCK_ALL_BY_KEY  FastIoUnlockAllByKey;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoUnlockSingle	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_UNLOCK_SINGLE  FastIoUnlockSingle;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoWrite	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_WRITE  FastIoWrite;$/;"	m	struct:_FAST_IO_DISPATCH
FastIoWriteCompressed	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_WRITE_COMPRESSED  FastIoWriteCompressed;$/;"	m	struct:_FAST_IO_DISPATCH
FiberData	.\SpinAPI\src\ddk_headers\winddk.h	/^    PVOID  FiberData;           \/* 10 *\/$/;"	m	union:_KPCR_TIB::__anon90
FileAccessInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileAccessInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileAlignmentInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileAlignmentInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileAllInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileAllInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileAllocationInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileAllocationInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileAlternateNameInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileAlternateNameInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileAttributeTagInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileAttributeTagInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileAttributes	.\SpinAPI\src\ddk_headers\winddk.h	/^      USHORT POINTER_ALIGNMENT  FileAttributes;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon51
FileAttributes	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  FileAttributes;                                       $/;"	m	struct:_FILE_ATTRIBUTE_TAG_INFORMATION
FileAttributes	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  FileAttributes;                                       $/;"	m	struct:_FILE_NETWORK_OPEN_INFORMATION
FileAttributes	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  FileAttributes;$/;"	m	struct:_FILE_BASIC_INFORMATION
FileBasicInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileBasicInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileBothDirectoryInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileBothDirectoryInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileCompletionInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileCompletionInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileCompressionInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileCompressionInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileDirectoryInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileDirectoryInformation = 1,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileDispositionInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileDispositionInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileEaInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileEaInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileEndOfFileInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileEndOfFileInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileFsAttributeInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFsAttributeInformation,$/;"	e	enum:_FSINFOCLASS
FileFsControlInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFsControlInformation,$/;"	e	enum:_FSINFOCLASS
FileFsDeviceInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFsDeviceInformation,$/;"	e	enum:_FSINFOCLASS
FileFsDriverPathInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFsDriverPathInformation,$/;"	e	enum:_FSINFOCLASS
FileFsFullSizeInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFsFullSizeInformation,$/;"	e	enum:_FSINFOCLASS
FileFsLabelInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFsLabelInformation,$/;"	e	enum:_FSINFOCLASS
FileFsMaximumInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFsMaximumInformation$/;"	e	enum:_FSINFOCLASS
FileFsObjectIdInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFsObjectIdInformation,$/;"	e	enum:_FSINFOCLASS
FileFsSizeInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFsSizeInformation,$/;"	e	enum:_FSINFOCLASS
FileFsVolumeInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFsVolumeInformation = 1,$/;"	e	enum:_FSINFOCLASS
FileFullDirectoryInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFullDirectoryInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileFullEaInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileFullEaInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileIdBothDirectoryInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileIdBothDirectoryInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileIdFullDirectoryInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileIdFullDirectoryInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileInformationClass	.\SpinAPI\src\ddk_headers\winddk.h	/^      FILE_INFORMATION_CLASS POINTER_ALIGNMENT  FileInformationClass;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon54
FileInformationClass	.\SpinAPI\src\ddk_headers\winddk.h	/^      FILE_INFORMATION_CLASS POINTER_ALIGNMENT  FileInformationClass;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon55
FileInternalInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileInternalInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileLinkInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileLinkInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileMailslotQueryInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileMailslotQueryInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileMailslotSetInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileMailslotSetInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileMaximumInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileMaximumInformation$/;"	e	enum:_FILE_INFORMATION_CLASS
FileModeInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileModeInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileMoveClusterInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileMoveClusterInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileName	.\SpinAPI\src\ddk_headers\winddk.h	/^  UNICODE_STRING  FileName;$/;"	m	struct:_FILE_OBJECT
FileName	.\SpinAPI\src\ddk_headers\winddk.h	/^  WCHAR  FileName[1];                                      $/;"	m	struct:_FILE_NAME_INFORMATION
FileNameInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileNameInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileNameLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  FileNameLength;                                   $/;"	m	struct:_FILE_NAME_INFORMATION
FileNamesInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileNamesInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileNetworkOpenInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileNetworkOpenInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileObject	.\SpinAPI\src\ddk_headers\winddk.h	/^      PFILE_OBJECT  FileObject;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon55
FileObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFILE_OBJECT  FileObject;$/;"	m	struct:_IO_STACK_LOCATION
FileObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _FILE_OBJECT  *FileObject;$/;"	m	struct:_TARGET_DEVICE_CUSTOM_NOTIFICATION	typeref:struct:_TARGET_DEVICE_CUSTOM_NOTIFICATION::_FILE_OBJECT
FileObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _FILE_OBJECT  *FileObject;$/;"	m	struct:_TARGET_DEVICE_REMOVAL_NOTIFICATION	typeref:struct:_TARGET_DEVICE_REMOVAL_NOTIFICATION::_FILE_OBJECT
FileObjectIdInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileObjectIdInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FilePipeInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FilePipeInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FilePipeLocalInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FilePipeLocalInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FilePipeRemoteInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FilePipeRemoteInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FilePositionInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FilePositionInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileQuotaInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileQuotaInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileRenameInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileRenameInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileReparsePointInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileReparsePointInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileShortNameInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileShortNameInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileStandardInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileStandardInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileStreamInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileStreamInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileTrackingInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileTrackingInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FileValidDataLengthInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  FileValidDataLengthInformation,$/;"	e	enum:_FILE_INFORMATION_CLASS
FilterResourceRequirements	.\SpinAPI\src\ddk_headers\winddk.h	/^    } FilterResourceRequirements;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon68
FinalStatus	.\SpinAPI\src\ddk_headers\winddk.h	/^	NTSTATUS  FinalStatus; $/;"	m	struct:_IO_ERROR_LOG_PACKET
FinalStatus	.\SpinAPI\src\ddk_headers\winddk.h	/^  NTSTATUS  FinalStatus;$/;"	m	struct:_FILE_OBJECT
Flag	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Flag;$/;"	m	struct:_ERESOURCE
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Flags;$/;"	m	struct:_FILE_FULL_EA_INFORMATION
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Flags;$/;"	m	struct:_IO_STACK_LOCATION
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Flags;$/;"	m	struct:_RTL_RANGE
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Flags;$/;"	m	struct:_ACCESS_STATE
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Flags;$/;"	m	struct:_DEVICE_OBJECT
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Flags;$/;"	m	struct:_DRIVER_OBJECT
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Flags;$/;"	m	struct:_FILE_OBJECT
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Flags;$/;"	m	struct:_IRP
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Flags;$/;"	m	struct:_RTL_QUERY_REGISTRY_TABLE
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Flags;$/;"	m	struct:_RTL_RANGE_LIST
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Flags;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Flags;$/;"	m	struct:_VPB
Flags	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT Flags;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR
Flags	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		ULONG Flags;$/;"	m	struct:_ft_device_list_info_node
FloatingPointProcessor	.\SpinAPI\src\ddk_headers\winddk.h	/^  FloatingPointProcessor,$/;"	e	enum:_CONFIGURATION_TYPE
FloppyCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  FloppyCount;$/;"	m	struct:_CONFIGURATION_INFORMATION
FloppyDiskPeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  FloppyDiskPeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
FlushAdapterBuffers	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFLUSH_ADAPTER_BUFFERS  FlushAdapterBuffers;$/;"	m	struct:_DMA_OPERATIONS
FormatFillCharacter	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  FormatFillCharacter;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
FormatGapLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  FormatGapLength;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
FreeAdapterChannel	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFREE_ADAPTER_CHANNEL  FreeAdapterChannel;$/;"	m	struct:_DMA_OPERATIONS
FreeCommonBuffer	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFREE_COMMON_BUFFER  FreeCommonBuffer;$/;"	m	struct:_DMA_OPERATIONS
FreeList	.\SpinAPI\src\ddk_headers\winnt4.h	/^  SINGLE_LIST_ENTRY  FreeList;$/;"	m	struct:_ZONE_HEADER
FreeMapRegisters	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFREE_MAP_REGISTERS  FreeMapRegisters;$/;"	m	struct:_DMA_OPERATIONS
FreePage	.\SpinAPI\src\ddk_headers\winddk.h	/^  FreePage,$/;"	e	enum:_KWAIT_REASON
FsContext	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  FsContext;$/;"	m	struct:_FILE_OBJECT
FsContext2	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  FsContext2;$/;"	m	struct:_FILE_OBJECT
FsInformationClass	.\SpinAPI\src\ddk_headers\winddk.h	/^      FS_INFORMATION_CLASS POINTER_ALIGNMENT  FsInformationClass;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon58
FullCreateOptions	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  FullCreateOptions;$/;"	m	struct:_IO_SECURITY_CONTEXT
FunctionFlags	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  FunctionFlags;$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
FunctionInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  FunctionInformation;$/;"	m	struct:_CM_EISA_SLOT_INFORMATION
FunctionNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  FunctionNumber : 3;$/;"	m	struct:_PCI_SLOT_NUMBER::__anon82::__anon83
GAUSS_BROAD	.\SpinAPI\src\fid.h	6;"	d
GCC_HASCLASSVISIBILITY	.\ppg_wrap.c	88;"	d	file:
GCC_HASCLASSVISIBILITY	.\swig\Hahn_echo\.c	88;"	d	file:
GCC_HASCLASSVISIBILITY	.\swig\Hahn_echo\Hahn_echo_wrap.c	88;"	d	file:
GCC_HASCLASSVISIBILITY	.\swig\example\example_wrap.c	88;"	d	file:
GCC_HASCLASSVISIBILITY	.\swig\example\get_rand_array\get_rand_array_wrap.c	88;"	d	file:
GCC_HASCLASSVISIBILITY	.\swig\ppg_lang\ppg_lang_wrap.c	88;"	d	file:
GCC_HASCLASSVISIBILITY	.\swig\ppg_lang\temp\ppg_temp_wrap.c	88;"	d	file:
GCC_HASCLASSVISIBILITY	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	88;"	d	file:
GDT	.\SpinAPI\src\ddk_headers\winddk.h	/^  PUSHORT  GDT;                 \/* 3C *\/$/;"	m	struct:_KPCR
GENERAL_LOOKASIDE	.\SpinAPI\src\ddk_headers\winddk.h	/^} GENERAL_LOOKASIDE, *PGENERAL_LOOKASIDE;$/;"	t	typeref:struct:_GENERAL_LOOKASIDE
GENERAL_LOOKASIDE_S	.\SpinAPI\src\ddk_headers\winddk.h	3068;"	d
GUI	.\SpinAPI\interpreter\doc\index.html	/^for any purpose, including commercial applications. <a name="GUI"><\/a>$/;"	a
GenerateAudit	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  GenerateAudit;$/;"	m	struct:_ACCESS_STATE
GenerateOnClose	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  GenerateOnClose;$/;"	m	struct:_ACCESS_STATE
Generic	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Generic;$/;"	m	union:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28	typeref:struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon29
Generic	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Generic;$/;"	m	union:_IO_RESOURCE_DESCRIPTOR::__anon37	typeref:struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon42
GetBusData	.\SpinAPI\src\ddk_headers\winddk.h	/^  PGET_SET_DEVICE_DATA  GetBusData;$/;"	m	struct:_BUS_INTERFACE_STANDARD
GetDmaAdapter	.\SpinAPI\src\ddk_headers\winddk.h	/^  PGET_DMA_ADAPTER  GetDmaAdapter;$/;"	m	struct:_BUS_INTERFACE_STANDARD
GetDmaAlignment	.\SpinAPI\src\ddk_headers\winddk.h	/^  PGET_DMA_ALIGNMENT  GetDmaAlignment;$/;"	m	struct:_DMA_OPERATIONS
GetScatterGatherList	.\SpinAPI\src\ddk_headers\winddk.h	/^  PGET_SCATTER_GATHER_LIST  GetScatterGatherList;$/;"	m	struct:_DMA_OPERATIONS
GlobalLoggerHandleClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  GlobalLoggerHandleClass,$/;"	e	enum:_TRACE_INFORMATION_CLASS
Gpt	.\SpinAPI\src\ddk_headers\winddk.h	/^    CREATE_DISK_GPT  Gpt;$/;"	m	union:_CREATE_DISK::__anon86
Gpt	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Gpt;$/;"	m	union:_DISK_SIGNATURE::__anon87	typeref:struct:_DISK_SIGNATURE::__anon87::__anon89
GrantedAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  ACCESS_MASK GrantedAccess;$/;"	m	struct:_OBJECT_HANDLE_INFORMATION
HASH_STRING_ALGORITHM_DEFAULT	.\SpinAPI\src\ddk_headers\winddk.h	3664;"	d
HASH_STRING_ALGORITHM_INVALID	.\SpinAPI\src\ddk_headers\winddk.h	3666;"	d
HASH_STRING_ALGORITHM_X65599	.\SpinAPI\src\ddk_headers\winddk.h	3665;"	d
HEXDUMP_COLS	.\SpinAPI\src\util.h	99;"	d
HIGH_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3719;"	d
HIGH_PRIORITY	.\SpinAPI\src\ddk_headers\winddk.h	171;"	d
HWPROFILE_CHANGE_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} HWPROFILE_CHANGE_NOTIFICATION, *PHWPROFILE_CHANGE_NOTIFICATION;$/;"	t	typeref:struct:_HWPROFILE_CHANGE_NOTIFICATION
Hahn_echo	.\swig\Hahn_echo\run_Hahn_echo.py	/^import Hahn_echo$/;"	i
HandleAttributes	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG HandleAttributes;$/;"	m	struct:_OBJECT_HANDLE_INFORMATION
HardwareDatabase	.\SpinAPI\src\ddk_headers\winddk.h	/^  PUNICODE_STRING  HardwareDatabase;$/;"	m	struct:_DRIVER_OBJECT
HardwareDisabled	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  HardwareDisabled : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
HeadLoadTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  HeadLoadTime;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
HeadSettleTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  HeadSettleTime;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
Header	.\SpinAPI\src\ddk_headers\winddk.h	/^    DISPATCHER_HEADER Header;$/;"	m	struct:_KSEMAPHORE
Header	.\SpinAPI\src\ddk_headers\winddk.h	/^  DISPATCHER_HEADER  Header;$/;"	m	struct:_KEVENT
Header	.\SpinAPI\src\ddk_headers\winddk.h	/^  DISPATCHER_HEADER  Header;$/;"	m	struct:_KMUTANT
Header	.\SpinAPI\src\ddk_headers\winddk.h	/^  DISPATCHER_HEADER  Header;$/;"	m	struct:_KTIMER
HeaderType	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  HeaderType;$/;"	m	struct:_PCI_COMMON_CONFIG
HexStringToInteger	.\SpinAPI\interpreter\src\interpreter.cpp	/^int HexStringToInteger(const char *input, int *output)$/;"	f
HiddenSectors	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  HiddenSectors;$/;"	m	struct:_PARTITION_INFORMATION_MBR
HighDriveIOs	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR HighDriveIOs;			\/\/ High Drive I\/Os$/;"	m	struct:ft_program_data
HighImportance	.\SpinAPI\src\ddk_headers\winddk.h	/^  HighImportance$/;"	e	enum:_KDPC_IMPORTANCE
HighPagePriority	.\SpinAPI\src\ddk_headers\winddk.h	/^  HighPagePriority = 32$/;"	e	enum:_MM_PAGE_PRIORITY
HighPoolPriority	.\SpinAPI\src\ddk_headers\winddk.h	/^  HighPoolPriority = 32,$/;"	e	enum:_EX_POOL_PRIORITY
HighPoolPrioritySpecialPoolOverrun	.\SpinAPI\src\ddk_headers\winddk.h	/^  HighPoolPrioritySpecialPoolOverrun = 40,$/;"	e	enum:_EX_POOL_PRIORITY
HighPoolPrioritySpecialPoolUnderrun	.\SpinAPI\src\ddk_headers\winddk.h	/^  HighPoolPrioritySpecialPoolUnderrun = 41$/;"	e	enum:_EX_POOL_PRIORITY
HighWatermark	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONG  HighWatermark;$/;"	m	struct:_IO_REMOVE_LOCK_DBG_BLOCK
HostIdentifier	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  HostIdentifier;$/;"	m	struct:_CM_SCSI_DEVICE_DATA
Hour	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Hour;$/;"	m	struct:_TIME_FIELDS
HyperCriticalWorkQueue	.\SpinAPI\src\ddk_headers\winddk.h	/^  HyperCriticalWorkQueue,$/;"	e	enum:_WORK_QUEUE_TYPE
Hz	.\SpinAPI\include\radioprocessor.h	38;"	d
Hz	.\SpinAPI\src\radioprocessor.h	38;"	d
Hz	.\spinapi.py	/^Hz = 0.000001$/;"	v
I2CDeviceId	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD I2CDeviceId;			\/\/ I2C device ID$/;"	m	struct:ft_eeprom_x_series
I2CDisableSchmitt	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR I2CDisableSchmitt;	\/\/ Disable I2C Schmitt trigger$/;"	m	struct:ft_eeprom_x_series
I2CSlaveAddress	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD I2CSlaveAddress;		\/\/ I2C slave device address$/;"	m	struct:ft_eeprom_x_series
ID	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		ULONG ID;$/;"	m	struct:_ft_device_list_info_node
IDC_EDIT	.\SpinAPI\interpreter\src\gui.cpp	46;"	d	file:
IDC_FREQUENCY	.\SpinAPI\interpreter\src\gui.cpp	71;"	d	file:
IDC_FREQUENCYLABEL	.\SpinAPI\interpreter\src\gui.cpp	68;"	d	file:
IDC_MHZ	.\SpinAPI\interpreter\src\gui.cpp	74;"	d	file:
IDC_OPEN	.\SpinAPI\interpreter\src\gui.cpp	53;"	d	file:
IDC_OUTPUT	.\SpinAPI\interpreter\src\gui.cpp	50;"	d	file:
IDC_POS	.\SpinAPI\interpreter\src\gui.cpp	77;"	d	file:
IDC_PROGRAM	.\SpinAPI\interpreter\src\gui.cpp	59;"	d	file:
IDC_SAVE	.\SpinAPI\interpreter\src\gui.cpp	56;"	d	file:
IDC_START	.\SpinAPI\interpreter\src\gui.cpp	62;"	d	file:
IDC_STATIC	.\SpinAPI\interpreter\src\afxres.h	17;"	d
IDC_STOP	.\SpinAPI\interpreter\src\gui.cpp	65;"	d	file:
IDI_ICON1	.\SpinAPI\interpreter\src\resource.h	5;"	d
IDI_ICON2	.\SpinAPI\interpreter\src\resource.h	6;"	d
IDM_BOARD_PROGRAM	.\SpinAPI\interpreter\src\gui.cpp	99;"	d	file:
IDM_BOARD_START	.\SpinAPI\interpreter\src\gui.cpp	100;"	d	file:
IDM_BOARD_STOP	.\SpinAPI\interpreter\src\gui.cpp	101;"	d	file:
IDM_FILE_EXIT	.\SpinAPI\interpreter\src\gui.cpp	93;"	d	file:
IDM_FILE_NEW	.\SpinAPI\interpreter\src\gui.cpp	89;"	d	file:
IDM_FILE_OPEN	.\SpinAPI\interpreter\src\gui.cpp	90;"	d	file:
IDM_FILE_SAVE	.\SpinAPI\interpreter\src\gui.cpp	91;"	d	file:
IDM_FILE_SAVEAS	.\SpinAPI\interpreter\src\gui.cpp	92;"	d	file:
IDM_HELP_ABOUT	.\SpinAPI\interpreter\src\gui.cpp	104;"	d	file:
IDM_HELP_README	.\SpinAPI\interpreter\src\gui.cpp	103;"	d	file:
IDM_INTERPRETER_CLEAR	.\SpinAPI\interpreter\src\gui.cpp	97;"	d	file:
IDM_INTERPRETER_DEBUG	.\SpinAPI\interpreter\src\gui.cpp	95;"	d	file:
IDM_INTERPRETER_SAVE	.\SpinAPI\interpreter\src\gui.cpp	96;"	d	file:
IDR	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  IDR;                   \/* 30 *\/$/;"	m	struct:_KPCR
IDT	.\SpinAPI\src\ddk_headers\winddk.h	/^  PUSHORT  IDT;                 \/* 38 *\/$/;"	m	struct:_KPCR
ID_Hz1	.\SpinAPI\include\spinpts.h	19;"	d
ID_Hz1	.\SpinAPI\src\spinpts.h	19;"	d
ID_Hz10	.\SpinAPI\include\spinpts.h	18;"	d
ID_Hz10	.\SpinAPI\src\spinpts.h	18;"	d
ID_Hz100	.\SpinAPI\include\spinpts.h	17;"	d
ID_Hz100	.\SpinAPI\src\spinpts.h	17;"	d
ID_MHz1	.\SpinAPI\include\spinpts.h	13;"	d
ID_MHz1	.\SpinAPI\src\spinpts.h	13;"	d
ID_MHz10	.\SpinAPI\include\spinpts.h	12;"	d
ID_MHz10	.\SpinAPI\src\spinpts.h	12;"	d
ID_MHz100	.\SpinAPI\include\spinpts.h	11;"	d
ID_MHz100	.\SpinAPI\src\spinpts.h	11;"	d
ID_UNUSED	.\SpinAPI\include\spinpts.h	22;"	d
ID_UNUSED	.\SpinAPI\src\spinpts.h	22;"	d
ID_kHz1	.\SpinAPI\include\spinpts.h	16;"	d
ID_kHz1	.\SpinAPI\src\spinpts.h	16;"	d
ID_kHz10	.\SpinAPI\include\spinpts.h	15;"	d
ID_kHz10	.\SpinAPI\src\spinpts.h	15;"	d
ID_kHz100	.\SpinAPI\include\spinpts.h	14;"	d
ID_kHz100	.\SpinAPI\src\spinpts.h	14;"	d
ID_latch	.\SpinAPI\include\spinpts.h	21;"	d
ID_latch	.\SpinAPI\src\spinpts.h	21;"	d
ID_pHz	.\SpinAPI\include\spinpts.h	20;"	d
ID_pHz	.\SpinAPI\src\spinpts.h	20;"	d
IFAIsFastSer	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFAIsFastSer;			\/\/ non-zero if interface is Fast serial$/;"	m	struct:ft_program_data
IFAIsFastSer7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFAIsFastSer7;		\/\/ non-zero if interface is Fast serial$/;"	m	struct:ft_program_data
IFAIsFifo	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFAIsFifo;			\/\/ non-zero if interface is 245 FIFO$/;"	m	struct:ft_program_data
IFAIsFifo7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFAIsFifo7;			\/\/ non-zero if interface is 245 FIFO$/;"	m	struct:ft_program_data
IFAIsFifoTar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFAIsFifoTar;			\/\/ non-zero if interface is 245 FIFO CPU target$/;"	m	struct:ft_program_data
IFAIsFifoTar7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFAIsFifoTar7;		\/\/ non-zero if interface is 245 FIFO CPU target$/;"	m	struct:ft_program_data
IFBIsFastSer	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFBIsFastSer;			\/\/ non-zero if interface is Fast serial$/;"	m	struct:ft_program_data
IFBIsFastSer7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFBIsFastSer7;		\/\/ non-zero if interface is Fast serial$/;"	m	struct:ft_program_data
IFBIsFifo	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFBIsFifo;			\/\/ non-zero if interface is 245 FIFO$/;"	m	struct:ft_program_data
IFBIsFifo7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFBIsFifo7;			\/\/ non-zero if interface is 245 FIFO$/;"	m	struct:ft_program_data
IFBIsFifoTar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFBIsFifoTar;			\/\/ non-zero if interface is 245 FIFO CPU target$/;"	m	struct:ft_program_data
IFBIsFifoTar7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IFBIsFifoTar7;		\/\/ non-zero if interface is 245 FIFO CPU target$/;"	m	struct:ft_program_data
IMAGE	.\bitmap.h	/^} IMAGE;$/;"	t	typeref:struct:tagIMAGE
IMAGE_ADDRESSING_MODE_32BIT	.\SpinAPI\src\ddk_headers\winddk.h	3449;"	d
IMAGE_INFO	.\SpinAPI\src\ddk_headers\winddk.h	/^} IMAGE_INFO, *PIMAGE_INFO;$/;"	t	typeref:struct:_IMAGE_INFO
IMW_ADDR	.\board.h	29;"	d
IMW_DATA1	.\board.h	30;"	d
IMW_DATA2	.\board.h	31;"	d
IMW_DATA3	.\board.h	32;"	d
IMW_DATA4	.\board.h	33;"	d
IMW_TRANSFER_ERROR	.\board.h	37;"	d
IN	.\SpinAPI\src\ddk_headers\winddk.h	56;"	d
INITIAL_PRIVILEGE_COUNT	.\SpinAPI\src\ddk_headers\winddk.h	2434;"	d
INITIAL_PRIVILEGE_SET	.\SpinAPI\src\ddk_headers\winddk.h	/^} INITIAL_PRIVILEGE_SET, * PINITIAL_PRIVILEGE_SET;$/;"	t	typeref:struct:_INITIAL_PRIVILEGE_SET
INPUT_OUT_OF_BOUNDS	.\controls.h	32;"	d
INSTRUCTION_DATA_ERROR	.\mrispinapi.h	71;"	d
INSTRUCTION_TOO_SHORT	.\mrispinapi.h	52;"	d
INTERFACE	.\SpinAPI\src\ddk_headers\winddk.h	/^} INTERFACE, *PINTERFACE; $/;"	t	typeref:struct:_INTERFACE
INTERFACE	.\SpinAPI\src\ddk_headers\winddk.h	629;"	d
INTERFACE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} INTERFACE_TYPE, *PINTERFACE_TYPE;$/;"	t	typeref:enum:_INTERFACE_TYPE
INTERLOCKED_RESULT	.\SpinAPI\src\ddk_headers\winddk.h	/^} INTERLOCKED_RESULT;$/;"	t	typeref:enum:_INTERLOCKED_RESULT
INTERPRETER_VERSION	.\SpinAPI\interpreter\src\interpreter.h	9;"	d
INVALID_AMP_SEL	.\mrispinapi.h	68;"	d
INVALID_ARGUMENTS	.\Sleator_apps\CPMG\cpmg.h	62;"	d
INVALID_ARGUMENTS	.\Sleator_apps\Hahn_echo\Hahn_echo.h	69;"	d
INVALID_ARGUMENTS	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	66;"	d
INVALID_ARGUMENTS	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	69;"	d
INVALID_ARGUMENTS	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	66;"	d
INVALID_ARGUMENTS	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	59;"	d
INVALID_ARGUMENTS	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	58;"	d
INVALID_ARRAY_LENGTH	.\devices.h	36;"	d
INVALID_CARRIER_FREQ_SEL	.\mrispinapi.h	62;"	d
INVALID_CLOCK_FREQUENCY	.\mrispinapi.h	51;"	d
INVALID_CYCLOPS_PHASE	.\mrispinapi.h	69;"	d
INVALID_DAC_ADDR	.\mrispinapi.h	58;"	d
INVALID_DAC_AMP	.\mrispinapi.h	57;"	d
INVALID_DAC_CLEAR	.\mrispinapi.h	61;"	d
INVALID_DAC_UPDATE	.\mrispinapi.h	60;"	d
INVALID_DAC_WRITE	.\mrispinapi.h	59;"	d
INVALID_DATA_FROM_BOARD	.\Sleator_apps\CPMG\cpmg.h	66;"	d
INVALID_DATA_FROM_BOARD	.\Sleator_apps\Hahn_echo\Hahn_echo.h	73;"	d
INVALID_DATA_FROM_BOARD	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	70;"	d
INVALID_DATA_FROM_BOARD	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	73;"	d
INVALID_DATA_FROM_BOARD	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	70;"	d
INVALID_DATA_FROM_BOARD	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	63;"	d
INVALID_DATA_FROM_BOARD	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	62;"	d
INVALID_DEVICE_ADDRESS	.\devices.h	33;"	d
INVALID_DEV_NUM	.\mrispinapi.h	53;"	d
INVALID_ENVELOPE_FREQ_SEL	.\mrispinapi.h	67;"	d
INVALID_NUM_ARGUMENTS	.\Sleator_apps\CPMG\cpmg.h	64;"	d
INVALID_NUM_ARGUMENTS	.\Sleator_apps\Hahn_echo\Hahn_echo.h	71;"	d
INVALID_NUM_ARGUMENTS	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	68;"	d
INVALID_NUM_ARGUMENTS	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	71;"	d
INVALID_NUM_ARGUMENTS	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	68;"	d
INVALID_NUM_ARGUMENTS	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	61;"	d
INVALID_NUM_ARGUMENTS	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	60;"	d
INVALID_NUM_POINTS	.\devices.h	40;"	d
INVALID_PHASE_RESET	.\mrispinapi.h	65;"	d
INVALID_TRIGGER_SCAN	.\mrispinapi.h	66;"	d
INVALID_TX_EN	.\mrispinapi.h	64;"	d
INVALID_TX_PHASE_SEL	.\mrispinapi.h	63;"	d
IOBase	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  IOBase;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
IOBaseUpper16	.\SpinAPI\src\ddk_headers\winddk.h	/^        USHORT  IOBaseUpper16;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
IOCTL_ADAPT_ABORT_PIPE	.\SpinAPI\src\cyioctl.h	207;"	d
IOCTL_ADAPT_CYCLE_PORT	.\SpinAPI\src\cyioctl.h	186;"	d
IOCTL_ADAPT_GET_ADDRESS	.\SpinAPI\src\cyioctl.h	168;"	d
IOCTL_ADAPT_GET_ALT_INTERFACE_SETTING	.\SpinAPI\src\cyioctl.h	162;"	d
IOCTL_ADAPT_GET_CURRENT_FRAME	.\SpinAPI\src\cyioctl.h	216;"	d
IOCTL_ADAPT_GET_DEVICE_NAME	.\SpinAPI\src\cyioctl.h	201;"	d
IOCTL_ADAPT_GET_DEVICE_POWER_STATE	.\SpinAPI\src\cyioctl.h	174;"	d
IOCTL_ADAPT_GET_DEVICE_SPEED	.\SpinAPI\src\cyioctl.h	213;"	d
IOCTL_ADAPT_GET_DRIVER_VERSION	.\SpinAPI\src\cyioctl.h	156;"	d
IOCTL_ADAPT_GET_FRIENDLY_NAME	.\SpinAPI\src\cyioctl.h	204;"	d
IOCTL_ADAPT_GET_NUMBER_ENDPOINTS	.\SpinAPI\src\cyioctl.h	171;"	d
IOCTL_ADAPT_GET_TRANSFER_SIZE	.\SpinAPI\src\cyioctl.h	195;"	d
IOCTL_ADAPT_GET_USBDI_VERSION	.\SpinAPI\src\cyioctl.h	159;"	d
IOCTL_ADAPT_INDEX	.\SpinAPI\src\cyioctl.h	153;"	d
IOCTL_ADAPT_RESET_PARENT_PORT	.\SpinAPI\src\cyioctl.h	192;"	d
IOCTL_ADAPT_RESET_PIPE	.\SpinAPI\src\cyioctl.h	189;"	d
IOCTL_ADAPT_SELECT_INTERFACE	.\SpinAPI\src\cyioctl.h	165;"	d
IOCTL_ADAPT_SEND_EP0_CONTROL_TRANSFER	.\SpinAPI\src\cyioctl.h	180;"	d
IOCTL_ADAPT_SEND_NON_EP0_DIRECT	.\SpinAPI\src\cyioctl.h	210;"	d
IOCTL_ADAPT_SEND_NON_EP0_TRANSFER	.\SpinAPI\src\cyioctl.h	183;"	d
IOCTL_ADAPT_SET_DEVICE_POWER_STATE	.\SpinAPI\src\cyioctl.h	177;"	d
IOCTL_ADAPT_SET_TRANSFER_SIZE	.\SpinAPI\src\cyioctl.h	198;"	d
IOLimit	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  IOLimit;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
IOLimitUpper16	.\SpinAPI\src\ddk_headers\winddk.h	/^        USHORT  IOLimitUpper16;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
IO_ALLOCATION_ACTION	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_ALLOCATION_ACTION, *PIO_ALLOCATION_ACTION;$/;"	t	typeref:enum:_IO_ALLOCATION_ACTION
IO_CD_ROM_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	929;"	d
IO_COMPLETION_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_COMPLETION_CONTEXT, *PIO_COMPLETION_CONTEXT;$/;"	t	typeref:struct:_IO_COMPLETION_CONTEXT
IO_CSQ	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_CSQ, *PIO_CSQ;$/;"	t	typeref:struct:_IO_CSQ
IO_CSQ_IRP_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_CSQ_IRP_CONTEXT, *PIO_CSQ_IRP_CONTEXT;$/;"	t	typeref:struct:_IO_CSQ_IRP_CONTEXT
IO_DELAY_US	.\SpinAPI\src\usb.c	12;"	d	file:
IO_DISK_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	930;"	d
IO_ERROR_LOG_PACKET	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_ERROR_LOG_PACKET, *PIO_ERROR_LOG_PACKET; $/;"	t	typeref:struct:_IO_ERROR_LOG_PACKET
IO_FUTURE_WAIT_COMPLETE	.\SpinAPI\src\io.h	6;"	d
IO_FUTURE_WAIT_ERROR	.\SpinAPI\src\io.h	7;"	d
IO_FUTURE_WAIT_TIMEOUT	.\SpinAPI\src\io.h	5;"	d
IO_KEYBOARD_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	931;"	d
IO_MAILSLOT_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	932;"	d
IO_MOUSE_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	933;"	d
IO_NAMED_PIPE_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	934;"	d
IO_NETWORK_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	935;"	d
IO_NOTIFICATION_EVENT_CATEGORY	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_NOTIFICATION_EVENT_CATEGORY;$/;"	t	typeref:enum:_IO_NOTIFICATION_EVENT_CATEGORY
IO_NO_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	928;"	d
IO_PARALLEL_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	936;"	d
IO_REMOVE_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_REMOVE_LOCK, *PIO_REMOVE_LOCK;$/;"	t	typeref:struct:_IO_REMOVE_LOCK
IO_REMOVE_LOCK_COMMON_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_REMOVE_LOCK_COMMON_BLOCK;$/;"	t	typeref:struct:_IO_REMOVE_LOCK_COMMON_BLOCK
IO_REMOVE_LOCK_DBG_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_REMOVE_LOCK_DBG_BLOCK;$/;"	t	typeref:struct:_IO_REMOVE_LOCK_DBG_BLOCK
IO_RESOURCE_ALTERNATIVE	.\SpinAPI\src\ddk_headers\winddk.h	1442;"	d
IO_RESOURCE_DEFAULT	.\SpinAPI\src\ddk_headers\winddk.h	1441;"	d
IO_RESOURCE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_RESOURCE_DESCRIPTOR, *PIO_RESOURCE_DESCRIPTOR;$/;"	t	typeref:struct:_IO_RESOURCE_DESCRIPTOR
IO_RESOURCE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_RESOURCE_LIST, *PIO_RESOURCE_LIST;$/;"	t	typeref:struct:_IO_RESOURCE_LIST
IO_RESOURCE_PREFERRED	.\SpinAPI\src\ddk_headers\winddk.h	1440;"	d
IO_RESOURCE_REQUIREMENTS_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_RESOURCE_REQUIREMENTS_LIST, *PIO_RESOURCE_REQUIREMENTS_LIST;$/;"	t	typeref:struct:_IO_RESOURCE_REQUIREMENTS_LIST
IO_SECURITY_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_SECURITY_CONTEXT, *PIO_SECURITY_CONTEXT;$/;"	t	typeref:struct:_IO_SECURITY_CONTEXT
IO_SERIAL_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	937;"	d
IO_SOUND_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	938;"	d
IO_STACK_LOCATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_STACK_LOCATION, *PIO_STACK_LOCATION;$/;"	t	typeref:struct:_IO_STACK_LOCATION
IO_STATUS_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_STATUS_BLOCK;$/;"	t	typeref:struct:_IO_STATUS_BLOCK
IO_VIDEO_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	939;"	d
IPI_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3717;"	d
IRP	.\SpinAPI\src\ddk_headers\winddk.h	/^} IRP;$/;"	t	typeref:struct:_IRP
IRP_ASSOCIATED_IRP	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_ASSOCIATED_IRP = 0x8,$/;"	e	enum:__anon27
IRP_BUFFERED_IO	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_BUFFERED_IO = 0x10,$/;"	e	enum:__anon27
IRP_CLOSE_OPERATION	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_CLOSE_OPERATION = 0x400,$/;"	e	enum:__anon27
IRP_CREATE_OPERATION	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_CREATE_OPERATION = 0x80,$/;"	e	enum:__anon27
IRP_DEALLOCATE_BUFFER	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_DEALLOCATE_BUFFER = 0x20,$/;"	e	enum:__anon27
IRP_DEFER_IO_COMPLETION	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_DEFER_IO_COMPLETION = 0x800,$/;"	e	enum:__anon27
IRP_HOLD_DEVICE_QUEUE	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_HOLD_DEVICE_QUEUE = 0x2000,$/;"	e	enum:__anon27
IRP_INPUT_OPERATION	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_INPUT_OPERATION = 0x40,$/;"	e	enum:__anon27
IRP_MJ_CLEANUP	.\SpinAPI\src\ddk_headers\winddk.h	338;"	d
IRP_MJ_CLOSE	.\SpinAPI\src\ddk_headers\winddk.h	321;"	d
IRP_MJ_CREATE	.\SpinAPI\src\ddk_headers\winddk.h	319;"	d
IRP_MJ_CREATE_MAILSLOT	.\SpinAPI\src\ddk_headers\winddk.h	339;"	d
IRP_MJ_CREATE_NAMED_PIPE	.\SpinAPI\src\ddk_headers\winddk.h	320;"	d
IRP_MJ_DEVICE_CHANGE	.\SpinAPI\src\ddk_headers\winddk.h	344;"	d
IRP_MJ_DEVICE_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	333;"	d
IRP_MJ_DIRECTORY_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	331;"	d
IRP_MJ_FILE_SYSTEM_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	332;"	d
IRP_MJ_FLUSH_BUFFERS	.\SpinAPI\src\ddk_headers\winddk.h	328;"	d
IRP_MJ_INTERNAL_DEVICE_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	334;"	d
IRP_MJ_LOCK_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	337;"	d
IRP_MJ_MAXIMUM_FUNCTION	.\SpinAPI\src\ddk_headers\winddk.h	349;"	d
IRP_MJ_PNP	.\SpinAPI\src\ddk_headers\winddk.h	347;"	d
IRP_MJ_PNP_POWER	.\SpinAPI\src\ddk_headers\winddk.h	348;"	d
IRP_MJ_POWER	.\SpinAPI\src\ddk_headers\winddk.h	342;"	d
IRP_MJ_QUERY_EA	.\SpinAPI\src\ddk_headers\winddk.h	326;"	d
IRP_MJ_QUERY_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	324;"	d
IRP_MJ_QUERY_QUOTA	.\SpinAPI\src\ddk_headers\winddk.h	345;"	d
IRP_MJ_QUERY_SECURITY	.\SpinAPI\src\ddk_headers\winddk.h	340;"	d
IRP_MJ_QUERY_VOLUME_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	329;"	d
IRP_MJ_READ	.\SpinAPI\src\ddk_headers\winddk.h	322;"	d
IRP_MJ_SCSI	.\SpinAPI\src\ddk_headers\winddk.h	335;"	d
IRP_MJ_SET_EA	.\SpinAPI\src\ddk_headers\winddk.h	327;"	d
IRP_MJ_SET_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	325;"	d
IRP_MJ_SET_QUOTA	.\SpinAPI\src\ddk_headers\winddk.h	346;"	d
IRP_MJ_SET_SECURITY	.\SpinAPI\src\ddk_headers\winddk.h	341;"	d
IRP_MJ_SET_VOLUME_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	330;"	d
IRP_MJ_SHUTDOWN	.\SpinAPI\src\ddk_headers\winddk.h	336;"	d
IRP_MJ_SYSTEM_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	343;"	d
IRP_MJ_WRITE	.\SpinAPI\src\ddk_headers\winddk.h	323;"	d
IRP_MN_CANCEL_REMOVE_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	381;"	d
IRP_MN_CANCEL_STOP_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	384;"	d
IRP_MN_CHANGE_SINGLE_INSTANCE	.\SpinAPI\src\ddk_headers\winddk.h	412;"	d
IRP_MN_CHANGE_SINGLE_ITEM	.\SpinAPI\src\ddk_headers\winddk.h	413;"	d
IRP_MN_COMPLETE	.\SpinAPI\src\ddk_headers\winddk.h	369;"	d
IRP_MN_COMPLETE_MDL	.\SpinAPI\src\ddk_headers\winddk.h	373;"	d
IRP_MN_COMPLETE_MDL_DPC	.\SpinAPI\src\ddk_headers\winddk.h	374;"	d
IRP_MN_COMPRESSED	.\SpinAPI\src\ddk_headers\winddk.h	370;"	d
IRP_MN_DEVICE_USAGE_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	401;"	d
IRP_MN_DISABLE_COLLECTION	.\SpinAPI\src\ddk_headers\winddk.h	417;"	d
IRP_MN_DISABLE_EVENTS	.\SpinAPI\src\ddk_headers\winddk.h	415;"	d
IRP_MN_DPC	.\SpinAPI\src\ddk_headers\winddk.h	367;"	d
IRP_MN_EJECT	.\SpinAPI\src\ddk_headers\winddk.h	396;"	d
IRP_MN_ENABLE_COLLECTION	.\SpinAPI\src\ddk_headers\winddk.h	416;"	d
IRP_MN_ENABLE_EVENTS	.\SpinAPI\src\ddk_headers\winddk.h	414;"	d
IRP_MN_EXECUTE_METHOD	.\SpinAPI\src\ddk_headers\winddk.h	419;"	d
IRP_MN_FILTER_RESOURCE_REQUIREMENTS	.\SpinAPI\src\ddk_headers\winddk.h	392;"	d
IRP_MN_KERNEL_CALL	.\SpinAPI\src\ddk_headers\winddk.h	359;"	d
IRP_MN_LOAD_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\winddk.h	357;"	d
IRP_MN_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	361;"	d
IRP_MN_MDL	.\SpinAPI\src\ddk_headers\winddk.h	368;"	d
IRP_MN_MDL_DPC	.\SpinAPI\src\ddk_headers\winddk.h	372;"	d
IRP_MN_MOUNT_VOLUME	.\SpinAPI\src\ddk_headers\winddk.h	355;"	d
IRP_MN_NORMAL	.\SpinAPI\src\ddk_headers\winddk.h	366;"	d
IRP_MN_NOTIFY_CHANGE_DIRECTORY	.\SpinAPI\src\ddk_headers\winddk.h	352;"	d
IRP_MN_POWER_SEQUENCE	.\SpinAPI\src\ddk_headers\winddk.h	406;"	d
IRP_MN_QUERY_ALL_DATA	.\SpinAPI\src\ddk_headers\winddk.h	410;"	d
IRP_MN_QUERY_BUS_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	400;"	d
IRP_MN_QUERY_CAPABILITIES	.\SpinAPI\src\ddk_headers\winddk.h	388;"	d
IRP_MN_QUERY_DEVICE_RELATIONS	.\SpinAPI\src\ddk_headers\winddk.h	386;"	d
IRP_MN_QUERY_DEVICE_TEXT	.\SpinAPI\src\ddk_headers\winddk.h	391;"	d
IRP_MN_QUERY_DIRECTORY	.\SpinAPI\src\ddk_headers\winddk.h	351;"	d
IRP_MN_QUERY_ID	.\SpinAPI\src\ddk_headers\winddk.h	398;"	d
IRP_MN_QUERY_INTERFACE	.\SpinAPI\src\ddk_headers\winddk.h	387;"	d
IRP_MN_QUERY_LEGACY_BUS_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	403;"	d
IRP_MN_QUERY_PNP_DEVICE_STATE	.\SpinAPI\src\ddk_headers\winddk.h	399;"	d
IRP_MN_QUERY_POWER	.\SpinAPI\src\ddk_headers\winddk.h	408;"	d
IRP_MN_QUERY_REMOVE_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	379;"	d
IRP_MN_QUERY_RESOURCES	.\SpinAPI\src\ddk_headers\winddk.h	389;"	d
IRP_MN_QUERY_RESOURCE_REQUIREMENTS	.\SpinAPI\src\ddk_headers\winddk.h	390;"	d
IRP_MN_QUERY_SINGLE_INSTANCE	.\SpinAPI\src\ddk_headers\winddk.h	411;"	d
IRP_MN_QUERY_STOP_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	383;"	d
IRP_MN_READ_CONFIG	.\SpinAPI\src\ddk_headers\winddk.h	394;"	d
IRP_MN_REGINFO	.\SpinAPI\src\ddk_headers\winddk.h	418;"	d
IRP_MN_REGINFO_EX	.\SpinAPI\src\ddk_headers\winddk.h	421;"	d
IRP_MN_REMOVE_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	380;"	d
IRP_MN_SCSI_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	376;"	d
IRP_MN_SET_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	397;"	d
IRP_MN_SET_POWER	.\SpinAPI\src\ddk_headers\winddk.h	407;"	d
IRP_MN_START_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	378;"	d
IRP_MN_STOP_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	382;"	d
IRP_MN_SURPRISE_REMOVAL	.\SpinAPI\src\ddk_headers\winddk.h	402;"	d
IRP_MN_TRACK_LINK	.\SpinAPI\src\ddk_headers\winddk.h	358;"	d
IRP_MN_UNLOCK_ALL	.\SpinAPI\src\ddk_headers\winddk.h	363;"	d
IRP_MN_UNLOCK_ALL_BY_KEY	.\SpinAPI\src\ddk_headers\winddk.h	364;"	d
IRP_MN_UNLOCK_SINGLE	.\SpinAPI\src\ddk_headers\winddk.h	362;"	d
IRP_MN_USER_FS_REQUEST	.\SpinAPI\src\ddk_headers\winddk.h	354;"	d
IRP_MN_VERIFY_VOLUME	.\SpinAPI\src\ddk_headers\winddk.h	356;"	d
IRP_MN_WAIT_WAKE	.\SpinAPI\src\ddk_headers\winddk.h	405;"	d
IRP_MN_WRITE_CONFIG	.\SpinAPI\src\ddk_headers\winddk.h	395;"	d
IRP_MOUNT_COMPLETION	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_MOUNT_COMPLETION = 0x2,$/;"	e	enum:__anon27
IRP_NOCACHE	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_NOCACHE = 0x1,$/;"	e	enum:__anon27
IRP_OB_QUERY_NAME	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_OB_QUERY_NAME = 0x1000,$/;"	e	enum:__anon27
IRP_PAGING_IO	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_PAGING_IO = 0x2,$/;"	e	enum:__anon27
IRP_READ_OPERATION	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_READ_OPERATION = 0x100,$/;"	e	enum:__anon27
IRP_RETRY_IO_COMPLETION	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_RETRY_IO_COMPLETION = 0x4000$/;"	e	enum:__anon27
IRP_SYNCHRONOUS_API	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_SYNCHRONOUS_API = 0x4,$/;"	e	enum:__anon27
IRP_SYNCHRONOUS_PAGING_IO	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_SYNCHRONOUS_PAGING_IO = 0x40,$/;"	e	enum:__anon27
IRP_WRITE_OPERATION	.\SpinAPI\src\ddk_headers\winddk.h	/^   IRP_WRITE_OPERATION = 0x200,$/;"	e	enum:__anon27
IRR	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  IRR;                   \/* 28 *\/$/;"	m	struct:_KPCR
ISA_BOARD	.\SpinAPI\src\spinapi.c	/^static int ISA_BOARD = 0;$/;"	v	file:
ISO_ADV_PARAMS	.\SpinAPI\src\cyioctl.h	/^} ISO_ADV_PARAMS, *PISO_ADV_PARAMS;$/;"	t	typeref:struct:_ISO_ADV_PARAMS
ISO_PACKET_INFO	.\SpinAPI\src\cyioctl.h	/^} ISO_PACKET_INFO, *PISO_PACKET_INFO;$/;"	t	typeref:struct:_ISO_PACKET_INFO
IdSlotFlags1	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  IdSlotFlags1;$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
IdSlotFlags2	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  IdSlotFlags2;$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
IdType	.\SpinAPI\src\ddk_headers\winddk.h	/^      BUS_QUERY_ID_TYPE  IdType;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon71
Identifier	.\SpinAPI\interpreter\src\interpreter.cpp	/^	enum TokenType { Identifier = 0, Numeric, Variable, Colon, Comma, Equal, EndOfLine, EndOfFile };$/;"	e	enum:tagToken::TokenType	file:
IgnoreCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  IgnoreCount;$/;"	m	struct:_DEVICE_DESCRIPTION
ImageAddressingMode	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  ImageAddressingMode  : 8;$/;"	m	struct:_IMAGE_INFO::__anon84::__anon85
ImageBase	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  ImageBase;$/;"	m	struct:_IMAGE_INFO
ImageMappedToAllPids	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  ImageMappedToAllPids : 1;$/;"	m	struct:_IMAGE_INFO::__anon84::__anon85
ImageSectionNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ImageSectionNumber;$/;"	m	struct:_IMAGE_INFO
ImageSectionObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  ImageSectionObject;$/;"	m	struct:_SECTION_OBJECT_POINTERS
ImageSelector	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ImageSelector;$/;"	m	struct:_IMAGE_INFO
ImageSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  SIZE_T  ImageSize;$/;"	m	struct:_IMAGE_INFO
ImpersonationLevel	.\SpinAPI\src\ddk_headers\winddk.h	/^  SECURITY_IMPERSONATION_LEVEL  ImpersonationLevel;$/;"	m	struct:_SECURITY_SUBJECT_CONTEXT
Importance	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Importance;$/;"	m	struct:_KDPC
InPath	.\SpinAPI\src\ddk_headers\winddk.h	/^      BOOLEAN  InPath;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon73
Information	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG_PTR  Information;$/;"	m	struct:_IO_STATUS_BLOCK
InitialPrivilegeSet	.\SpinAPI\src\ddk_headers\winddk.h	/^    INITIAL_PRIVILEGE_SET  InitialPrivilegeSet;$/;"	m	union:_ACCESS_STATE::__anon49
InitializationData	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  InitializationData[60];$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
InitializeListHead	.\SpinAPI\src\ddk_headers\winddk.h	4035;"	d
InitializeSListHead	.\SpinAPI\src\ddk_headers\winddk.h	5375;"	d
InputBufferLength	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG POINTER_ALIGNMENT  InputBufferLength;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon59
InsertHeadList	.\SpinAPI\src\ddk_headers\winddk.h	4047;"	d
InsertTailList	.\SpinAPI\src\ddk_headers\winddk.h	4064;"	d
Inserted	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Inserted;$/;"	m	struct:_KAPC
Inserted	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Inserted;$/;"	m	struct:_KDEVICE_QUEUE_ENTRY
Inserted	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Inserted;$/;"	m	struct:_DISPATCHER_HEADER
Inst	.\spinapi.py	/^Inst = enum($/;"	v
Interface	.\SpinAPI\src\ddk_headers\winddk.h	/^      PINTERFACE  Interface;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon66
InterfaceClassGuid	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  InterfaceClassGuid;$/;"	m	struct:_DEVICE_INTERFACE_CHANGE_NOTIFICATION
InterfaceDereference	.\SpinAPI\src\ddk_headers\winddk.h	/^  PINTERFACE_DEREFERENCE  InterfaceDereference;$/;"	m	struct:_BUS_INTERFACE_STANDARD
InterfaceDereference	.\SpinAPI\src\ddk_headers\winddk.h	/^  PINTERFACE_DEREFERENCE  InterfaceDereference;$/;"	m	struct:_INTERFACE
InterfaceReference	.\SpinAPI\src\ddk_headers\winddk.h	/^  PINTERFACE_REFERENCE  InterfaceReference;$/;"	m	struct:_BUS_INTERFACE_STANDARD
InterfaceReference	.\SpinAPI\src\ddk_headers\winddk.h	/^  PINTERFACE_REFERENCE  InterfaceReference;$/;"	m	struct:_INTERFACE
InterfaceSpecificData	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVOID  InterfaceSpecificData;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon66
InterfaceType	.\SpinAPI\src\ddk_headers\winddk.h	/^      CONST GUID  *InterfaceType;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon66
InterfaceType	.\SpinAPI\src\ddk_headers\winddk.h	/^  INTERFACE_TYPE  InterfaceType;$/;"	m	struct:_CM_FULL_RESOURCE_DESCRIPTOR
InterfaceType	.\SpinAPI\src\ddk_headers\winddk.h	/^  INTERFACE_TYPE  InterfaceType;$/;"	m	struct:_DEVICE_DESCRIPTION
InterfaceType	.\SpinAPI\src\ddk_headers\winddk.h	/^  INTERFACE_TYPE  InterfaceType;$/;"	m	struct:_IO_RESOURCE_REQUIREMENTS_LIST
InterfaceTypeUndefined	.\SpinAPI\src\ddk_headers\winddk.h	/^  InterfaceTypeUndefined = -1,$/;"	e	enum:_INTERFACE_TYPE
InterlockedCompareExchangePointer	.\SpinAPI\src\ddk_headers\winddk.h	3870;"	d
InterlockedExchangePointer	.\SpinAPI\src\ddk_headers\winddk.h	3860;"	d
InterlockedFlushSList	.\SpinAPI\src\ddk_headers\winddk.h	4181;"	d
Internal	.\SpinAPI\src\ddk_headers\winddk.h	/^  Internal,$/;"	e	enum:_INTERFACE_TYPE
InternalPowerBus	.\SpinAPI\src\ddk_headers\winddk.h	/^  InternalPowerBus,$/;"	e	enum:_INTERFACE_TYPE
Interpret	.\SpinAPI\interpreter\src\interpreter.cpp	/^int Interpret(double frequency, char *filename, std::ostream& outputStream, bool bDebug = false)$/;"	f
Interpreter	.\SpinAPI\interpreter\doc\index.html	/^      <a name="Interpreter"><\/a>$/;"	a
Interrupt	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Interrupt;$/;"	m	union:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28	typeref:struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon31
Interrupt	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Interrupt;$/;"	m	union:_IO_RESOURCE_DESCRIPTOR::__anon37	typeref:struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon40
Interrupt	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Interrupt : 4;$/;"	m	struct:_EISA_IRQ_DESCRIPTOR
InterruptLine	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  InterruptLine;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
InterruptLine	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  InterruptLine;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
InterruptLine	.\SpinAPI\src\ddk_headers\winddk.h	/^      UCHAR  InterruptLine;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
InterruptPin	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  InterruptPin;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
InterruptPin	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  InterruptPin;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
InterruptPin	.\SpinAPI\src\ddk_headers\winddk.h	/^      UCHAR  InterruptPin;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
InvertCTS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertCTS;			\/\/ non-zero if invert CTS$/;"	m	struct:ft_eeprom_232r
InvertCTS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertCTS;			\/\/ non-zero if invert CTS$/;"	m	struct:ft_eeprom_x_series
InvertCTS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertCTS;			\/\/ non-zero if invert CTS$/;"	m	struct:ft_program_data
InvertDCD	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertDCD;			\/\/ non-zero if invert DCD$/;"	m	struct:ft_eeprom_232r
InvertDCD	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertDCD;			\/\/ non-zero if invert DCD$/;"	m	struct:ft_eeprom_x_series
InvertDCD	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertDCD;			\/\/ non-zero if invert DCD$/;"	m	struct:ft_program_data
InvertDSR	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertDSR;			\/\/ non-zero if invert DSR$/;"	m	struct:ft_eeprom_232r
InvertDSR	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertDSR;			\/\/ non-zero if invert DSR$/;"	m	struct:ft_eeprom_x_series
InvertDSR	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertDSR;			\/\/ non-zero if invert DSR$/;"	m	struct:ft_program_data
InvertDTR	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertDTR;			\/\/ non-zero if invert DTR$/;"	m	struct:ft_eeprom_232r
InvertDTR	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertDTR;			\/\/ non-zero if invert DTR$/;"	m	struct:ft_eeprom_x_series
InvertDTR	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertDTR;			\/\/ non-zero if invert DTR$/;"	m	struct:ft_program_data
InvertRI	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertRI;				\/\/ non-zero if invert RI$/;"	m	struct:ft_eeprom_232r
InvertRI	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertRI;				\/\/ non-zero if invert RI$/;"	m	struct:ft_eeprom_x_series
InvertRI	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertRI;				\/\/ non-zero if invert RI$/;"	m	struct:ft_program_data
InvertRTS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertRTS;			\/\/ non-zero if invert RTS$/;"	m	struct:ft_eeprom_232r
InvertRTS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertRTS;			\/\/ non-zero if invert RTS$/;"	m	struct:ft_eeprom_x_series
InvertRTS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertRTS;			\/\/ non-zero if invert RTS$/;"	m	struct:ft_program_data
InvertRXD	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertRXD;			\/\/ non-zero if invert RXD$/;"	m	struct:ft_eeprom_232r
InvertRXD	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertRXD;			\/\/ non-zero if invert RXD$/;"	m	struct:ft_eeprom_x_series
InvertRXD	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertRXD;			\/\/ non-zero if invert RXD$/;"	m	struct:ft_program_data
InvertTXD	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertTXD;			\/\/ non-zero if invert TXD$/;"	m	struct:ft_eeprom_232r
InvertTXD	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertTXD;			\/\/ non-zero if invert TXD$/;"	m	struct:ft_eeprom_x_series
InvertTXD	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR InvertTXD;			\/\/ non-zero if invert TXD$/;"	m	struct:ft_program_data
IoAcquireRemoveLock	.\SpinAPI\src\ddk_headers\winddk.h	5923;"	d
IoAdjustPagingPathCount	.\SpinAPI\src\ddk_headers\winddk.h	5933;"	d
IoAssignArcName	.\SpinAPI\src\ddk_headers\winddk.h	6015;"	d
IoCallDriver	.\SpinAPI\src\ddk_headers\winddk.h	6092;"	d
IoCompleteRequest	.\SpinAPI\src\ddk_headers\winddk.h	6130;"	d
IoControlCode	.\SpinAPI\src\ddk_headers\winddk.h	/^	ULONG  IoControlCode; $/;"	m	struct:_IO_ERROR_LOG_PACKET
IoControlCode	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG POINTER_ALIGNMENT  IoControlCode;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon59
IoCopyCurrentIrpStackLocationToNext	.\SpinAPI\src\ddk_headers\winddk.h	6169;"	d
IoCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONG  IoCount;$/;"	m	struct:_IO_REMOVE_LOCK_COMMON_BLOCK
IoDeassignArcName	.\SpinAPI\src\ddk_headers\winddk.h	6309;"	d
IoForwardAndCatchIrp	.\SpinAPI\src\ddk_headers\winddk.h	6330;"	d
IoGetCurrentIrpStackLocation	.\SpinAPI\src\ddk_headers\winddk.h	6153;"	d
IoGetFunctionCodeFromCtlCode	.\SpinAPI\src\ddk_headers\winddk.h	6461;"	d
IoGetNextIrpStackLocation	.\SpinAPI\src\ddk_headers\winddk.h	6161;"	d
IoInitializeDpcRequest	.\SpinAPI\src\ddk_headers\winddk.h	6503;"	d
IoInitializeRemoveLock	.\SpinAPI\src\ddk_headers\winddk.h	6534;"	d
IoIsErrorUserInduced	.\SpinAPI\src\ddk_headers\winddk.h	6571;"	d
IoMarkIrpPending	.\SpinAPI\src\ddk_headers\winddk.h	6599;"	d
IoModifyAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  IoModifyAccess$/;"	e	enum:_LOCK_OPERATION
IoReadAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  IoReadAccess,$/;"	e	enum:_LOCK_OPERATION
IoReleaseRemoveLock	.\SpinAPI\src\ddk_headers\winddk.h	6761;"	d
IoReleaseRemoveLockAndWait	.\SpinAPI\src\ddk_headers\winddk.h	6743;"	d
IoRequestDpc	.\SpinAPI\src\ddk_headers\winddk.h	6840;"	d
IoResourceRequirementList	.\SpinAPI\src\ddk_headers\winddk.h	/^      PIO_RESOURCE_REQUIREMENTS_LIST  IoResourceRequirementList;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon68
IoSetCancelRoutine	.\SpinAPI\src\ddk_headers\winddk.h	6856;"	d
IoSetCompletionRoutine	.\SpinAPI\src\ddk_headers\winddk.h	6871;"	d
IoSetNextIrpStackLocation	.\SpinAPI\src\ddk_headers\winddk.h	6921;"	d
IoSizeOfIrp	.\SpinAPI\src\ddk_headers\winddk.h	6969;"	d
IoSkipCurrentIrpStackLocation	.\SpinAPI\src\ddk_headers\winddk.h	6977;"	d
IoStatus	.\SpinAPI\src\ddk_headers\winddk.h	/^  IO_STATUS_BLOCK  IoStatus;$/;"	m	struct:_IRP
IoWriteAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  IoWriteAccess,$/;"	e	enum:_LOCK_OPERATION
Irp	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _IRP  *Irp;$/;"	m	struct:_IO_CSQ_IRP_CONTEXT	typeref:struct:_IO_CSQ_IRP_CONTEXT::_IRP
IrpCount	.\SpinAPI\src\ddk_headers\winddk.h	/^    LONG  IrpCount;$/;"	m	union:_IRP::__anon18
Irql	.\SpinAPI\src\ddk_headers\winddk.h	/^  KIRQL  Irql;                  \/* 24 *\/$/;"	m	struct:_KPCR
IrrActive	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  IrrActive;             \/* 2C *\/$/;"	m	struct:_KPCR
IsFT1248	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsFT1248	;			\/\/ non-zero if interface is FT1248$/;"	m	struct:ft_eeprom_232h
IsFT1248H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsFT1248H;			\/\/ non-zero if interface is FT1248$/;"	m	struct:ft_program_data
IsFastSer	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsFastSer;			\/\/ non-zero if interface is Fast serial$/;"	m	struct:ft_eeprom_232h
IsFastSerH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsFastSerH;			\/\/ non-zero if interface is Fast serial$/;"	m	struct:ft_program_data
IsFifo	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsFifo;				\/\/ non-zero if interface is 245 FIFO$/;"	m	struct:ft_eeprom_232h
IsFifoH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsFifoH;				\/\/ non-zero if interface is 245 FIFO$/;"	m	struct:ft_program_data
IsFifoTar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsFifoTar;			\/\/ non-zero if interface is 245 FIFO CPU target$/;"	m	struct:ft_eeprom_232h
IsFifoTarH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsFifoTarH;			\/\/ non-zero if interface is 245 FIFO CPU target$/;"	m	struct:ft_program_data
IsHighCurrent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsHighCurrent;		\/\/ non-zero if interface is high current$/;"	m	struct:ft_eeprom_232r
IsListEmpty	.\SpinAPI\src\ddk_headers\winddk.h	4080;"	d
IsVCPH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsVCPH;				\/\/ non-zero if interface is to use VCP drivers$/;"	m	struct:ft_program_data
Isa	.\SpinAPI\src\ddk_headers\winddk.h	/^  Isa,$/;"	e	enum:_INTERFACE_TYPE
IsoIn	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsoIn;				\/\/ non-zero if in endpoint is isochronous$/;"	m	struct:ft_program_data
IsoInA	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsoInA;				\/\/ non-zero if in endpoint is isochronous$/;"	m	struct:ft_program_data
IsoInB	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsoInB;				\/\/ non-zero if in endpoint is isochronous$/;"	m	struct:ft_program_data
IsoOut	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsoOut;				\/\/ non-zero if out endpoint is isochronous$/;"	m	struct:ft_program_data
IsoOutA	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsoOutA;				\/\/ non-zero if out endpoint is isochronous$/;"	m	struct:ft_program_data
IsoOutB	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR IsoOutB;				\/\/ non-zero if out endpoint is isochronous$/;"	m	struct:ft_program_data
IsoPacketLength	.\SpinAPI\src\cyioctl.h	/^    ULONG IsoPacketLength;$/;"	m	struct:_SINGLE_TRANSFER
IsoPacketOffset	.\SpinAPI\src\cyioctl.h	/^    ULONG IsoPacketOffset;$/;"	m	struct:_SINGLE_TRANSFER
IsoParams	.\SpinAPI\src\cyioctl.h	/^        ISO_ADV_PARAMS IsoParams;$/;"	m	union:_SINGLE_TRANSFER::__anon15
JSR	.\SpinAPI\include\pulseblaster.h	27;"	d
JSR	.\SpinAPI\src\pulseblaster.h	27;"	d
JSR	.\mrispinapi.h	93;"	d
KAFFINITY	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG KAFFINITY, *PKAFFINITY;$/;"	t
KAPC	.\SpinAPI\src\ddk_headers\winddk.h	/^} KAPC, *PKAPC, *RESTRICTED_POINTER PRKAPC;$/;"	t	typeref:struct:_KAPC
KBUGCHECK_BUFFER_DUMP_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KBUGCHECK_BUFFER_DUMP_STATE;$/;"	t	typeref:enum:_KBUGCHECK_BUFFER_DUMP_STATE
KBUGCHECK_CALLBACK_RECORD	.\SpinAPI\src\ddk_headers\winddk.h	/^} KBUGCHECK_CALLBACK_RECORD, *PKBUGCHECK_CALLBACK_RECORD;$/;"	t	typeref:struct:_KBUGCHECK_CALLBACK_RECORD
KDEVICE_QUEUE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KDEVICE_QUEUE, *PKDEVICE_QUEUE, *RESTRICTED_POINTER PRKDEVICE_QUEUE;$/;"	t	typeref:struct:_KDEVICE_QUEUE
KDEVICE_QUEUE_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^} KDEVICE_QUEUE_ENTRY, *PKDEVICE_QUEUE_ENTRY,$/;"	t	typeref:struct:_KDEVICE_QUEUE_ENTRY
KDPC	.\SpinAPI\src\ddk_headers\winddk.h	/^} KDPC, *PKDPC, *RESTRICTED_POINTER PRKDPC;$/;"	t	typeref:struct:_KDPC
KDPC_IMPORTANCE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KDPC_IMPORTANCE;$/;"	t	typeref:enum:_KDPC_IMPORTANCE
KD_DEBUGGER_ENABLED	.\SpinAPI\src\ddk_headers\winddk.h	9221;"	d
KD_DEBUGGER_NOT_PRESENT	.\SpinAPI\src\ddk_headers\winddk.h	9222;"	d
KEVENT	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEVENT, *PKEVENT, *RESTRICTED_POINTER PRKEVENT;$/;"	t	typeref:struct:_KEVENT
KEYBOARD_ALT_KEY_DOWN	.\SpinAPI\src\ddk_headers\winddk.h	1393;"	d
KEYBOARD_CAPS_LOCK_ON	.\SpinAPI\src\ddk_headers\winddk.h	1390;"	d
KEYBOARD_CTRL_KEY_DOWN	.\SpinAPI\src\ddk_headers\winddk.h	1394;"	d
KEYBOARD_INSERT_ON	.\SpinAPI\src\ddk_headers\winddk.h	1389;"	d
KEYBOARD_LEFT_SHIFT_DOWN	.\SpinAPI\src\ddk_headers\winddk.h	1395;"	d
KEYBOARD_NUM_LOCK_ON	.\SpinAPI\src\ddk_headers\winddk.h	1391;"	d
KEYBOARD_RIGHT_SHIFT_DOWN	.\SpinAPI\src\ddk_headers\winddk.h	1396;"	d
KEYBOARD_SCROLL_LOCK_ON	.\SpinAPI\src\ddk_headers\winddk.h	1392;"	d
KEY_BASIC_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_BASIC_INFORMATION, *PKEY_BASIC_INFORMATION;$/;"	t	typeref:struct:_KEY_BASIC_INFORMATION
KEY_FULL_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_FULL_INFORMATION, *PKEY_FULL_INFORMATION;$/;"	t	typeref:struct:_KEY_FULL_INFORMATION
KEY_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_INFORMATION_CLASS;$/;"	t	typeref:enum:_KEY_INFORMATION_CLASS
KEY_NODE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_NODE_INFORMATION, *PKEY_NODE_INFORMATION;$/;"	t	typeref:struct:_KEY_NODE_INFORMATION
KEY_VALUE_BASIC_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_BASIC_INFORMATION, *PKEY_VALUE_BASIC_INFORMATION;$/;"	t	typeref:struct:_KEY_VALUE_BASIC_INFORMATION
KEY_VALUE_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_ENTRY, *PKEY_VALUE_ENTRY;$/;"	t	typeref:struct:_KEY_VALUE_ENTRY
KEY_VALUE_FULL_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION;$/;"	t	typeref:struct:_KEY_VALUE_FULL_INFORMATION
KEY_VALUE_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_INFORMATION_CLASS;$/;"	t	typeref:enum:_KEY_VALUE_INFORMATION_CLASS
KEY_VALUE_PARTIAL_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION;$/;"	t	typeref:struct:_KEY_VALUE_PARTIAL_INFORMATION
KEY_VALUE_PARTIAL_INFORMATION_ALIGN64	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_PARTIAL_INFORMATION_ALIGN64, *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64;$/;"	t	typeref:struct:_KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
KFLOATING_SAVE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KFLOATING_SAVE, *PKFLOATING_SAVE;$/;"	t	typeref:struct:_KFLOATING_SAVE
KINTERRUPT_MODE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KINTERRUPT_MODE;$/;"	t	typeref:enum:_KINTERRUPT_MODE
KIRQL	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef UCHAR KIRQL, *PKIRQL;$/;"	t
KI_USER_SHARED_DATA	.\SpinAPI\src\ddk_headers\winddk.h	3781;"	d
KLOCK_QUEUE_HANDLE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KLOCK_QUEUE_HANDLE, *PKLOCK_QUEUE_HANDLE;$/;"	t	typeref:struct:_KLOCK_QUEUE_HANDLE
KMUTANT	.\SpinAPI\src\ddk_headers\winddk.h	/^} KMUTANT, *PKMUTANT, *RESTRICTED_POINTER PRKMUTANT, KMUTEX, *PKMUTEX, *RESTRICTED_POINTER PRKMUTEX;$/;"	t	typeref:struct:_KMUTANT
KMUTEX	.\SpinAPI\src\ddk_headers\winddk.h	/^} KMUTANT, *PKMUTANT, *RESTRICTED_POINTER PRKMUTANT, KMUTEX, *PKMUTEX, *RESTRICTED_POINTER PRKMUTEX;$/;"	t	typeref:struct:_KMUTANT
KPCR	.\SpinAPI\src\ddk_headers\winddk.h	/^} KPCR, *PKPCR;                 \/* 54 *\/$/;"	t	typeref:struct:_KPCR
KPCR_TIB	.\SpinAPI\src\ddk_headers\winddk.h	/^} KPCR_TIB, *PKPCR_TIB;         \/* 1C *\/$/;"	t	typeref:struct:_KPCR_TIB
KPRIORITY	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef LONG KPRIORITY;$/;"	t
KPROCESSOR_MODE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef CCHAR KPROCESSOR_MODE;$/;"	t
KPROFILE_SOURCE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KPROFILE_SOURCE;$/;"	t	typeref:enum:_KPROFILE_SOURCE
KSEMAPHORE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KSEMAPHORE, *PKSEMAPHORE, *RESTRICTED_POINTER PRKSEMAPHORE;$/;"	t	typeref:struct:_KSEMAPHORE
KSPIN_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG_PTR KSPIN_LOCK, *PKSPIN_LOCK;$/;"	t
KSPIN_LOCK_QUEUE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KSPIN_LOCK_QUEUE, *PKSPIN_LOCK_QUEUE;$/;"	t	typeref:struct:_KSPIN_LOCK_QUEUE
KSPIN_LOCK_QUEUE_NUMBER	.\SpinAPI\src\ddk_headers\winddk.h	/^} KSPIN_LOCK_QUEUE_NUMBER, *PKSPIN_LOCK_QUEUE_NUMBER;$/;"	t	typeref:enum:_KSPIN_LOCK_QUEUE_NUMBER
KTIMER	.\SpinAPI\src\ddk_headers\winddk.h	/^} KTIMER, *PKTIMER, *RESTRICTED_POINTER PRKTIMER;$/;"	t	typeref:struct:_KTIMER
KWAIT_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^} KWAIT_BLOCK, *PKWAIT_BLOCK, *RESTRICTED_POINTER PRKWAIT_BLOCK;$/;"	t	typeref:struct:_KWAIT_BLOCK
KWAIT_REASON	.\SpinAPI\src\ddk_headers\winddk.h	/^} KWAIT_REASON;$/;"	t	typeref:enum:_KWAIT_REASON
KdBreakPoint	.\SpinAPI\src\ddk_headers\winddk.h	9207;"	d
KdBreakPoint	.\SpinAPI\src\ddk_headers\winddk.h	9214;"	d
KdBreakPointWithStatus	.\SpinAPI\src\ddk_headers\winddk.h	9208;"	d
KdBreakPointWithStatus	.\SpinAPI\src\ddk_headers\winddk.h	9215;"	d
KdPrint	.\SpinAPI\src\ddk_headers\winddk.h	9205;"	d
KdPrint	.\SpinAPI\src\ddk_headers\winddk.h	9212;"	d
KdPrintEx	.\SpinAPI\src\ddk_headers\winddk.h	9206;"	d
KdPrintEx	.\SpinAPI\src\ddk_headers\winddk.h	9213;"	d
KdVersionBlock	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  KdVersionBlock;        \/* 34 *\/$/;"	m	struct:_KPCR
KeAcquireSpinLockAtDpcLevel	.\SpinAPI\src\ddk_headers\winddk.h	3902;"	d
KeFlushIoBuffers	.\SpinAPI\src\ddk_headers\winddk.h	7329;"	d
KeGetCurrentKPCR	.\SpinAPI\src\ddk_headers\winddk.h	/^static __inline struct _KPCR * KeGetCurrentKPCR($/;"	f
KeGetCurrentProcessorNumber	.\SpinAPI\src\ddk_headers\winddk.h	3809;"	d
KeGetDcacheFillSize	.\SpinAPI\src\ddk_headers\winddk.h	3907;"	d
KeInitializeCallbackRecord	.\SpinAPI\src\ddk_headers\winddk.h	3366;"	d
KeLowerIrql	.\SpinAPI\src\ddk_headers\winddk.h	7715;"	d
KeRaiseIrql	.\SpinAPI\src\ddk_headers\winddk.h	7716;"	d
KeReleaseSpinLockFromDpcLevel	.\SpinAPI\src\ddk_headers\winddk.h	3903;"	d
KeepObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeepObject = 1,$/;"	e	enum:_IO_ALLOCATION_ACTION
KernelMode	.\SpinAPI\src\ddk_headers\winddk.h	/^  KernelMode,$/;"	e	enum:_MODE
KernelRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PKKERNEL_ROUTINE  KernelRoutine;$/;"	m	struct:_KAPC
Key	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG POINTER_ALIGNMENT  Key;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon52
Key	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG POINTER_ALIGNMENT  Key;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon53
Key	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Key;$/;"	m	struct:_IO_COMPLETION_CONTEXT
KeyBasicInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyBasicInformation,$/;"	e	enum:_KEY_INFORMATION_CLASS
KeyCachedInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyCachedInformation,$/;"	e	enum:_KEY_INFORMATION_CLASS
KeyFlagsInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyFlagsInformation$/;"	e	enum:_KEY_INFORMATION_CLASS
KeyFullInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyFullInformation,$/;"	e	enum:_KEY_INFORMATION_CLASS
KeyNameInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyNameInformation,$/;"	e	enum:_KEY_INFORMATION_CLASS
KeyNodeInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyNodeInformation,$/;"	e	enum:_KEY_INFORMATION_CLASS
KeyValueBasicInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyValueBasicInformation,$/;"	e	enum:_KEY_VALUE_INFORMATION_CLASS
KeyValueFullInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyValueFullInformation,$/;"	e	enum:_KEY_VALUE_INFORMATION_CLASS
KeyValueFullInformationAlign64	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyValueFullInformationAlign64,$/;"	e	enum:_KEY_VALUE_INFORMATION_CLASS
KeyValuePartialInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyValuePartialInformation,$/;"	e	enum:_KEY_VALUE_INFORMATION_CLASS
KeyValuePartialInformationAlign64	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyValuePartialInformationAlign64$/;"	e	enum:_KEY_VALUE_INFORMATION_CLASS
KeyboardController	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyboardController,$/;"	e	enum:_CONFIGURATION_TYPE
KeyboardFlags	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  KeyboardFlags;$/;"	m	struct:_CM_KEYBOARD_DEVICE_DATA
KeyboardPeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  KeyboardPeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
LINE_BROAD	.\SpinAPI\src\fid.h	5;"	d
LINKED_LIST	.\SpinAPI\src\util.h	10;"	d
LINKED_LIST_DESTROY	.\SpinAPI\src\util.h	52;"	d
LINKED_LIST_ENTRY	.\SpinAPI\src\util.h	7;"	d
LINKED_LIST_FOREACH	.\SpinAPI\src\util.h	49;"	d
LINKED_LIST_HEAD	.\SpinAPI\src\util.h	13;"	d
LINKED_LIST_INIT	.\SpinAPI\src\util.h	22;"	d
LINKED_LIST_INSERT_HEAD	.\SpinAPI\src\util.h	25;"	d
LINKED_LIST_INSERT_TAIL	.\SpinAPI\src\util.h	37;"	d
LINKED_LIST_NEXT	.\SpinAPI\src\util.h	19;"	d
LINKED_LIST_TAIL	.\SpinAPI\src\util.h	16;"	d
LLONG_MAX	.\swig\Hahn_echo\Hahn_echo_wrap.c	3094;"	d	file:
LLONG_MAX	.\swig\example\example_wrap.c	3074;"	d	file:
LLONG_MAX	.\swig\example\get_rand_array\get_rand_array_wrap.c	3510;"	d	file:
LLONG_MAX	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3079;"	d	file:
LLONG_MAX	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3079;"	d	file:
LLONG_MIN	.\swig\Hahn_echo\Hahn_echo_wrap.c	3095;"	d	file:
LLONG_MIN	.\swig\example\example_wrap.c	3075;"	d	file:
LLONG_MIN	.\swig\example\get_rand_array\get_rand_array_wrap.c	3511;"	d	file:
LLONG_MIN	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3080;"	d	file:
LLONG_MIN	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3080;"	d	file:
LOCK_OPERATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} LOCK_OPERATION;$/;"	t	typeref:enum:_LOCK_OPERATION
LOCK_QUEUE_OWNER	.\SpinAPI\src\ddk_headers\winddk.h	827;"	d
LOCK_QUEUE_WAIT	.\SpinAPI\src\ddk_headers\winddk.h	826;"	d
LOGICAL	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG LOGICAL;$/;"	t
LONG_DELAY	.\SpinAPI\include\pulseblaster.h	30;"	d
LONG_DELAY	.\SpinAPI\src\pulseblaster.h	30;"	d
LONG_DELAY	.\mrispinapi.h	96;"	d
LOOP	.\SpinAPI\include\pulseblaster.h	25;"	d
LOOP	.\SpinAPI\src\pulseblaster.h	25;"	d
LOOP	.\mrispinapi.h	91;"	d
LOW_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3710;"	d
LOW_PRIORITY	.\SpinAPI\src\ddk_headers\winddk.h	169;"	d
LOW_REALTIME_PRIORITY	.\SpinAPI\src\ddk_headers\winddk.h	170;"	d
LPFTCOMSTAT	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FTCOMSTAT, *LPFTCOMSTAT;$/;"	t	typeref:struct:_FTCOMSTAT
LPFTDCB	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FTDCB, *LPFTDCB;$/;"	t	typeref:struct:_FTDCB
LPFTTIMEOUTS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FTTIMEOUTS,*LPFTTIMEOUTS;$/;"	t	typeref:struct:_FTTIMEOUTS
Label	.\SpinAPI\interpreter\src\interpreter.cpp	/^} Label;$/;"	t	typeref:struct:tagLabel	file:
Language	.\SpinAPI\interpreter\doc\index.html	/^      <a name="Language"><\/a>$/;"	a
LastAccessTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  LastAccessTime;                               $/;"	m	struct:_FILE_NETWORK_OPEN_INFORMATION
LastAccessTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  LastAccessTime;$/;"	m	struct:_FILE_BASIC_INFORMATION
LastLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  LastLock;$/;"	m	struct:_FILE_OBJECT
LastWriteTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  LastWriteTime;                                $/;"	m	struct:_FILE_NETWORK_OPEN_INFORMATION
LastWriteTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  LastWriteTime;$/;"	m	struct:_FILE_BASIC_INFORMATION
LastWriteTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  LastWriteTime;$/;"	m	struct:_KEY_BASIC_INFORMATION
LastWriteTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  LastWriteTime;$/;"	m	struct:_KEY_FULL_INFORMATION
LastWriteTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  LastWriteTime;$/;"	m	struct:_KEY_NODE_INFORMATION
Latched	.\SpinAPI\src\ddk_headers\winddk.h	/^  Latched$/;"	e	enum:_KINTERRUPT_MODE
LatencyTimer	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  LatencyTimer;$/;"	m	struct:_PCI_COMMON_CONFIG
LegacyBusType	.\SpinAPI\src\ddk_headers\winddk.h	/^  INTERFACE_TYPE  LegacyBusType;$/;"	m	struct:_PNP_BUS_INFORMATION
Legal	.\SpinAPI\interpreter\doc\index.html	/^      <a name="Legal"><\/a><br>$/;"	a
Length	.\SpinAPI\src\cyioctl.h	/^    ULONG Length;$/;"	m	struct:_ISO_PACKET_INFO
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Length;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon38
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Length;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon39
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Length;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon42
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Length;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon44
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Length;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon52
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Length;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon53
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Length;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon54
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Length;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon55
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Length;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon58
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Length;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon29
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Length;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon30
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Length;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon32
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Length;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon35
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG POINTER_ALIGNMENT  Length;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon60
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG POINTER_ALIGNMENT  Length;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon69
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Length;          $/;"	m	struct:_SCATTER_GATHER_ELEMENT
Length	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Length;$/;"	m	struct:_KBUGCHECK_CALLBACK_RECORD
Level	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Level;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon31
LevelSensitive	.\SpinAPI\src\ddk_headers\winddk.h	/^  LevelSensitive,$/;"	e	enum:_KINTERRUPT_MODE
LevelTriggered	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  LevelTriggered : 1;$/;"	m	struct:_EISA_IRQ_DESCRIPTOR
Limit	.\SpinAPI\src\ddk_headers\winddk.h	/^          ULONG  Limit;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2::__anon81
Limit	.\SpinAPI\src\ddk_headers\winddk.h	/^    LONG Limit;$/;"	m	struct:_KSEMAPHORE
LinePeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  LinePeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
List	.\SpinAPI\src\ddk_headers\winddk.h	/^  CM_FULL_RESOURCE_DESCRIPTOR  List[1];$/;"	m	struct:_CM_RESOURCE_LIST
List	.\SpinAPI\src\ddk_headers\winddk.h	/^  IO_RESOURCE_LIST  List[1];$/;"	m	struct:_IO_RESOURCE_REQUIREMENTS_LIST
List	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  List;$/;"	m	struct:_WORK_QUEUE_ITEM
ListEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^        LIST_ENTRY  ListEntry;$/;"	m	struct:_IRP::__anon21::__anon22::__anon25
ListEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^    LIST_ENTRY  ListEntry;$/;"	m	union:_DEVICE_OBJECT::__anon46
ListHead	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  ListHead;$/;"	m	struct:_RTL_RANGE_LIST
ListSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ListSize;$/;"	m	struct:_IO_RESOURCE_REQUIREMENTS_LIST
LocId	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD LocId;$/;"	m	struct:_ft_device_list_info_node
LocaleId	.\SpinAPI\src\ddk_headers\winddk.h	/^      LCID POINTER_ALIGNMENT  LocaleId;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon72
Lock	.\SpinAPI\src\ddk_headers\winddk.h	/^      BOOLEAN  Lock;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon70
Lock	.\SpinAPI\src\ddk_headers\winddk.h	/^  KEVENT  Lock;$/;"	m	struct:_FILE_OBJECT
Lock	.\SpinAPI\src\ddk_headers\winddk.h	/^  KSPIN_LOCK  Lock;$/;"	m	struct:_KDEVICE_QUEUE
Lock	.\SpinAPI\src\ddk_headers\winddk.h	/^  PKSPIN_LOCK VOLATILE  Lock;$/;"	m	struct:_KSPIN_LOCK_QUEUE
Lock	.\SpinAPI\src\ddk_headers\winddk.h	/^  PULONG_PTR  Lock;$/;"	m	struct:_KDPC
LockList	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  LockList;$/;"	m	struct:_IO_REMOVE_LOCK_DBG_BLOCK
LockOperation	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  LockOperation;$/;"	m	struct:_FILE_OBJECT
LockQueue	.\SpinAPI\src\ddk_headers\winddk.h	/^  KSPIN_LOCK_QUEUE  LockQueue;$/;"	m	struct:_KLOCK_QUEUE_HANDLE
LockQueueAfdWorkQueueLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueAfdWorkQueueLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueBcbLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueBcbLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueContextSwapLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueContextSwapLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueDispatcherLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueDispatcherLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueIoCancelLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueIoCancelLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueIoCompletionLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueIoCompletionLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueIoDatabaseLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueIoDatabaseLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueIoVpbLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueIoVpbLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueMasterLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueMasterLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueMaximumLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueMaximumLock$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueNonPagedPoolLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueNonPagedPoolLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueNtfsStructLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueNtfsStructLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueuePfnLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueuePfnLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueSystemSpaceLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueSystemSpaceLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueVacbLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueVacbLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockQueueWorkQueueLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  LockQueueWorkQueueLock,$/;"	e	enum:_KSPIN_LOCK_QUEUE_NUMBER
LockSupported	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  LockSupported : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
LowImportance	.\SpinAPI\src\ddk_headers\winddk.h	/^  LowImportance,$/;"	e	enum:_KDPC_IMPORTANCE
LowMemoryCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONG  LowMemoryCount;$/;"	m	struct:_IO_REMOVE_LOCK_DBG_BLOCK
LowPagePriority	.\SpinAPI\src\ddk_headers\winddk.h	/^  LowPagePriority,$/;"	e	enum:_MM_PAGE_PRIORITY
LowPoolPriority	.\SpinAPI\src\ddk_headers\winddk.h	/^  LowPoolPriority,$/;"	e	enum:_EX_POOL_PRIORITY
LowPoolPrioritySpecialPoolOverrun	.\SpinAPI\src\ddk_headers\winddk.h	/^  LowPoolPrioritySpecialPoolOverrun = 8,$/;"	e	enum:_EX_POOL_PRIORITY
LowPoolPrioritySpecialPoolUnderrun	.\SpinAPI\src\ddk_headers\winddk.h	/^  LowPoolPrioritySpecialPoolUnderrun = 9,$/;"	e	enum:_EX_POOL_PRIORITY
MAX	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	45;"	d	file:
MAXIMUM_PRIORITY	.\SpinAPI\src\ddk_headers\winddk.h	172;"	d
MAXIMUM_PROCESSORS	.\SpinAPI\src\ddk_headers\winddk.h	160;"	d
MAXIMUM_USB_STRING_LENGTH	.\SpinAPI\src\ddk_headers\usb100.h	36;"	d
MAXIMUM_VOLUME_LABEL_LENGTH	.\SpinAPI\src\ddk_headers\winddk.h	1569;"	d
MAXIMUM_WAIT_OBJECTS	.\SpinAPI\src\ddk_headers\winddk.h	162;"	d
MAX_FFT	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	33;"	d
MAX_FFT	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	35;"	d
MAX_FLAG_BITS	.\SpinAPI\src\spinapi.c	/^static int MAX_FLAG_BITS = 0xFFFFFF;$/;"	v	file:
MAX_IO_ATTEMPTS	.\SpinAPI\src\driver-usb-windows.c	18;"	d	file:
MAX_IO_WAIT_TIME	.\SpinAPI\src\driver-linux-usb.c	10;"	d	file:
MAX_IO_WAIT_TIME	.\SpinAPI\src\driver-usb-windows.c	17;"	d	file:
MAX_NUM_BOARDS	.\SpinAPI\include\spinapi.h	28;"	d
MAX_NUM_BOARDS	.\SpinAPI\src\driver-linux-direct.c	15;"	d	file:
MAX_NUM_BOARDS	.\SpinAPI\src\spinapi.h	28;"	d
MAX_NUM_BOARDS	.\mrispinapi.h	83;"	d
MAX_USB	.\SpinAPI\src\driver-usb-windows.c	16;"	d	file:
MDL	.\SpinAPI\src\ddk_headers\winddk.h	/^} MDL, *PMDL;$/;"	t	typeref:struct:_MDL
MDL_ALLOCATED_FIXED_SIZE	.\SpinAPI\src\ddk_headers\winddk.h	1761;"	d
MDL_ALLOCATED_MUST_SUCCEED	.\SpinAPI\src\ddk_headers\winddk.h	1771;"	d
MDL_FREE_EXTRA_PTES	.\SpinAPI\src\ddk_headers\winddk.h	1767;"	d
MDL_IO_PAGE_READ	.\SpinAPI\src\ddk_headers\winddk.h	1764;"	d
MDL_IO_SPACE	.\SpinAPI\src\ddk_headers\winddk.h	1768;"	d
MDL_MAPPED_TO_SYSTEM_VA	.\SpinAPI\src\ddk_headers\winddk.h	1758;"	d
MDL_MAPPING_CAN_FAIL	.\SpinAPI\src\ddk_headers\winddk.h	1770;"	d
MDL_MAPPING_FLAGS	.\SpinAPI\src\ddk_headers\winddk.h	1773;"	d
MDL_NETWORK_HEADER	.\SpinAPI\src\ddk_headers\winddk.h	1769;"	d
MDL_PAGES_LOCKED	.\SpinAPI\src\ddk_headers\winddk.h	1759;"	d
MDL_PARENT_MAPPED_SYSTEM_VA	.\SpinAPI\src\ddk_headers\winddk.h	1766;"	d
MDL_PARTIAL	.\SpinAPI\src\ddk_headers\winddk.h	1762;"	d
MDL_PARTIAL_HAS_BEEN_MAPPED	.\SpinAPI\src\ddk_headers\winddk.h	1763;"	d
MDL_SOURCE_IS_NONPAGED_POOL	.\SpinAPI\src\ddk_headers\winddk.h	1760;"	d
MDL_WRITE_OPERATION	.\SpinAPI\src\ddk_headers\winddk.h	1765;"	d
MEMORY_CACHING_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} MEMORY_CACHING_TYPE;$/;"	t	typeref:enum:_MEMORY_CACHING_TYPE
MEMORY_CACHING_TYPE_ORIG	.\SpinAPI\src\ddk_headers\winddk.h	/^} MEMORY_CACHING_TYPE_ORIG;$/;"	t	typeref:enum:_MEMORY_CACHING_TYPE_ORIG
MEM_ADDRESS	.\SpinAPI\src\if.h	6;"	d
MEM_DATA	.\SpinAPI\src\if.h	7;"	d
METHOD_BUFFERED	.\SpinAPI\src\ddk_headers\devioctl.h	121;"	d
METHOD_BUFFERED	.\SpinAPI\src\ddk_headers\winddk.h	164;"	d
METHOD_DIRECT_FROM_HARDWARE	.\SpinAPI\src\ddk_headers\devioctl.h	133;"	d
METHOD_DIRECT_TO_HARDWARE	.\SpinAPI\src\ddk_headers\devioctl.h	132;"	d
METHOD_FROM_CTL_CODE	.\SpinAPI\src\ddk_headers\devioctl.h	115;"	d
METHOD_IN_DIRECT	.\SpinAPI\src\ddk_headers\devioctl.h	122;"	d
METHOD_IN_DIRECT	.\SpinAPI\src\ddk_headers\winddk.h	165;"	d
METHOD_NEITHER	.\SpinAPI\src\ddk_headers\devioctl.h	124;"	d
METHOD_NEITHER	.\SpinAPI\src\ddk_headers\winddk.h	167;"	d
METHOD_OUT_DIRECT	.\SpinAPI\src\ddk_headers\devioctl.h	123;"	d
METHOD_OUT_DIRECT	.\SpinAPI\src\ddk_headers\winddk.h	166;"	d
MHz	.\SpinAPI\include\radioprocessor.h	36;"	d
MHz	.\SpinAPI\src\radioprocessor.h	36;"	d
MHz	.\spinapi.py	/^MHz = 1.0$/;"	v
MIN	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	44;"	d	file:
MINIMUM_PULSE_LENGTH	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	30;"	d	file:
MMFLUSH_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} MMFLUSH_TYPE;$/;"	t	typeref:enum:_MMFLUSH_TYPE
MM_HIGHEST_USER_ADDRESS	.\SpinAPI\src\ddk_headers\winddk.h	3775;"	d
MM_LOWEST_SYSTEM_ADDRESS	.\SpinAPI\src\ddk_headers\winddk.h	3779;"	d
MM_LOWEST_USER_ADDRESS	.\SpinAPI\src\ddk_headers\winddk.h	3778;"	d
MM_PAGE_PRIORITY	.\SpinAPI\src\ddk_headers\winddk.h	/^} MM_PAGE_PRIORITY;$/;"	t	typeref:enum:_MM_PAGE_PRIORITY
MM_SYSTEM_RANGE_START	.\SpinAPI\src\ddk_headers\winddk.h	3776;"	d
MM_SYSTEM_SIZE	.\SpinAPI\src\ddk_headers\winddk.h	/^} MM_SYSTEM_SIZE;$/;"	t	typeref:enum:_MM_SYSTEM_SIZE
MM_USER_PROBE_ADDRESS	.\SpinAPI\src\ddk_headers\winddk.h	3777;"	d
MODE	.\SpinAPI\src\ddk_headers\winddk.h	/^} MODE;$/;"	t	typeref:enum:_MODE
MPIBus	.\SpinAPI\src\ddk_headers\winddk.h	/^  MPIBus,$/;"	e	enum:_INTERFACE_TYPE
MPIConfiguration	.\SpinAPI\src\ddk_headers\win2k.h	/^  MPIConfiguration,$/;"	e	enum:_BUS_DATA_TYPE
MPSABus	.\SpinAPI\src\ddk_headers\winddk.h	/^  MPSABus,$/;"	e	enum:_INTERFACE_TYPE
MPSAConfiguration	.\SpinAPI\src\ddk_headers\win2k.h	/^  MPSAConfiguration,$/;"	e	enum:_BUS_DATA_TYPE
MRISPINAPI_H	.\mrispinapi.h	25;"	d
MajorFunction	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDRIVER_DISPATCH  MajorFunction[IRP_MJ_MAXIMUM_FUNCTION + 1];$/;"	m	struct:_DRIVER_OBJECT
MajorFunction	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MajorFunction;$/;"	m	struct:_IO_STACK_LOCATION
MajorFunctionCode	.\SpinAPI\src\ddk_headers\winddk.h	/^	UCHAR  MajorFunctionCode; $/;"	m	struct:_IO_ERROR_LOG_PACKET
MajorRevision	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MajorRevision;$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
MajorRevision	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MajorRevision;$/;"	m	struct:_CM_EISA_SLOT_INFORMATION
MajorVersion	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  MajorVersion;         \/* 44 *\/$/;"	m	struct:_KPCR
Manufacturer	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char *Manufacturer;			\/\/ "FTDI"$/;"	m	struct:ft_program_data
ManufacturerId	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char *ManufacturerId;		\/\/ "FT"$/;"	m	struct:ft_program_data
MapTransfer	.\SpinAPI\src\ddk_headers\winddk.h	/^  PMAP_TRANSFER  MapTransfer;$/;"	m	struct:_DMA_OPERATIONS
MappedSystemVa	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  MappedSystemVa;$/;"	m	struct:_MDL
Master	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Master;$/;"	m	struct:_DEVICE_DESCRIPTION
MasterIrp	.\SpinAPI\src\ddk_headers\winddk.h	/^    struct _IRP  *MasterIrp;$/;"	m	union:_IRP::__anon18	typeref:struct:_IRP::__anon18::_IRP
MaxBusNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  MaxBusNumber;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon44
MaxClassLen	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MaxClassLen;$/;"	m	struct:_KEY_FULL_INFORMATION
MaxCylinders	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MaxCylinders;$/;"	m	struct:_CM_INT13_DRIVE_PARAMETER
MaxDensity	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MaxDensity;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
MaxHeads	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  MaxHeads;$/;"	m	struct:_CM_INT13_DRIVE_PARAMETER
MaxLockedTicks	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONGLONG  MaxLockedTicks;$/;"	m	struct:_IO_REMOVE_LOCK_DBG_BLOCK
MaxNameLen	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MaxNameLen;$/;"	m	struct:_KEY_FULL_INFORMATION
MaxPartitionCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MaxPartitionCount;$/;"	m	struct:_CREATE_DISK_GPT
MaxPartitionCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MaxPartitionCount;$/;"	m	struct:_DRIVE_LAYOUT_INFORMATION_GPT
MaxPoolType	.\SpinAPI\src\ddk_headers\winddk.h	/^	MaxPoolType,$/;"	e	enum:_POOL_TYPE
MaxPower	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  MaxPower;$/;"	m	struct:_USB_CONFIGURATION_DESCRIPTOR
MaxPower	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD MaxPower;				\/\/ 0 < MaxPower <= 500$/;"	m	struct:ft_eeprom_header
MaxPower	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD MaxPower;				\/\/ 0 < MaxPower <= 500$/;"	m	struct:ft_program_data
MaxProcessInfoClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  MaxProcessInfoClass$/;"	e	enum:_PROCESSINFOCLASS
MaxSuiteType	.\SpinAPI\src\ddk_headers\winddk.h	/^  MaxSuiteType$/;"	e	enum:_SUITE_TYPE
MaxThreadInfoClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  MaxThreadInfoClass$/;"	e	enum:_THREADINFOCLASS
MaxValueDataLen	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MaxValueDataLen;$/;"	m	struct:_KEY_FULL_INFORMATION
MaxValueNameLen	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MaxValueNameLen;$/;"	m	struct:_KEY_FULL_INFORMATION
MaximumAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^      PHYSICAL_ADDRESS  MaximumAddress;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon38
MaximumAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^      PHYSICAL_ADDRESS  MaximumAddress;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon39
MaximumAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^      PHYSICAL_ADDRESS  MaximumAddress;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon42
MaximumBusDataType	.\SpinAPI\src\ddk_headers\win2k.h	/^  MaximumBusDataType$/;"	e	enum:_BUS_DATA_TYPE
MaximumChannel	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  MaximumChannel;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon41
MaximumDmaSpeed	.\SpinAPI\src\ddk_headers\winddk.h	/^  MaximumDmaSpeed$/;"	e	enum:_DMA_SPEED
MaximumDmaWidth	.\SpinAPI\src\ddk_headers\winddk.h	/^  MaximumDmaWidth$/;"	e	enum:_DMA_WIDTH
MaximumInterfaceType	.\SpinAPI\src\ddk_headers\winddk.h	/^  MaximumInterfaceType$/;"	e	enum:_INTERFACE_TYPE
MaximumLatency	.\SpinAPI\src\ddk_headers\winddk.h	/^      UCHAR  MaximumLatency;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
MaximumLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MaximumLength;$/;"	m	struct:_DEVICE_DESCRIPTION
MaximumMode	.\SpinAPI\src\ddk_headers\winddk.h	/^  MaximumMode$/;"	e	enum:_MODE
MaximumTrackValue	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MaximumTrackValue;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
MaximumType	.\SpinAPI\src\ddk_headers\winddk.h	/^  MaximumType$/;"	e	enum:_CONFIGURATION_TYPE
MaximumVector	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  MaximumVector;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon40
MaximumWaitReason	.\SpinAPI\src\ddk_headers\winddk.h	/^  MaximumWaitReason$/;"	e	enum:_KWAIT_REASON
MaximumWorkQueue	.\SpinAPI\src\ddk_headers\winddk.h	/^  MaximumWorkQueue$/;"	e	enum:_WORK_QUEUE_TYPE
Mbr	.\SpinAPI\src\ddk_headers\winddk.h	/^    CREATE_DISK_MBR  Mbr;$/;"	m	union:_CREATE_DISK::__anon86
Mbr	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Mbr;$/;"	m	union:_DISK_SIGNATURE::__anon87	typeref:struct:_DISK_SIGNATURE::__anon87::__anon88
MdlAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _MDL  *MdlAddress;$/;"	m	struct:_IRP	typeref:struct:_IRP::_MDL
MdlFlags	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  MdlFlags;$/;"	m	struct:_MDL
MdlRead	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_MDL_READ  MdlRead;$/;"	m	struct:_FAST_IO_DISPATCH
MdlReadComplete	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_MDL_READ_COMPLETE  MdlReadComplete;$/;"	m	struct:_FAST_IO_DISPATCH
MdlReadCompleteCompressed	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_MDL_READ_COMPLETE_COMPRESSED  MdlReadCompleteCompressed;$/;"	m	struct:_FAST_IO_DISPATCH
MdlWriteComplete	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_MDL_WRITE_COMPLETE  MdlWriteComplete;$/;"	m	struct:_FAST_IO_DISPATCH
MdlWriteCompleteCompressed	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_MDL_WRITE_COMPLETE_COMPRESSED  MdlWriteCompleteCompressed;$/;"	m	struct:_FAST_IO_DISPATCH
MediumChangerCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MediumChangerCount;$/;"	m	struct:_CONFIGURATION_INFORMATION
MediumImportance	.\SpinAPI\src\ddk_headers\winddk.h	/^  MediumImportance,$/;"	e	enum:_KDPC_IMPORTANCE
Memory	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Memory;$/;"	m	union:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28	typeref:struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon32
Memory	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Memory;$/;"	m	union:_IO_RESOURCE_DESCRIPTOR::__anon37	typeref:struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon39
MemoryBase	.\SpinAPI\src\ddk_headers\winddk.h	/^        USHORT  MemoryBase;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
MemoryLimit	.\SpinAPI\src\ddk_headers\winddk.h	/^        USHORT  MemoryLimit;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
MemorySize	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  MemorySize;$/;"	m	struct:_EISA_MEMORY_CONFIGURATION
MergedHead	.\SpinAPI\src\ddk_headers\winddk.h	/^  PLIST_ENTRY  MergedHead;$/;"	m	struct:_RANGE_LIST_ITERATOR
MicroChannel	.\SpinAPI\src\ddk_headers\winddk.h	/^  MicroChannel,$/;"	e	enum:_INTERFACE_TYPE
Milliseconds	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Milliseconds;$/;"	m	struct:_TIME_FIELDS
MinBusNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  MinBusNumber;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon44
MinimumAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^      PHYSICAL_ADDRESS  MinimumAddress;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon38
MinimumAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^      PHYSICAL_ADDRESS  MinimumAddress;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon39
MinimumAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^      PHYSICAL_ADDRESS  MinimumAddress;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon42
MinimumChannel	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  MinimumChannel;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon41
MinimumGrant	.\SpinAPI\src\ddk_headers\winddk.h	/^      UCHAR  MinimumGrant;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
MinimumVector	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  MinimumVector;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon40
MinorFunction	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MinorFunction;$/;"	m	struct:_IO_STACK_LOCATION
MinorRevision	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MinorRevision;$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
MinorRevision	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MinorRevision;$/;"	m	struct:_CM_EISA_SLOT_INFORMATION
MinorVersion	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  MinorVersion;         \/* 46 *\/$/;"	m	struct:_KPCR
Minute	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Minute;$/;"	m	struct:_TIME_FIELDS
MmCached	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmCached = TRUE,$/;"	e	enum:_MEMORY_CACHING_TYPE
MmFlushForDelete	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmFlushForDelete,$/;"	e	enum:_MMFLUSH_TYPE
MmFlushForWrite	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmFlushForWrite$/;"	e	enum:_MMFLUSH_TYPE
MmFrameBufferCached	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmFrameBufferCached = 2$/;"	e	enum:_MEMORY_CACHING_TYPE_ORIG
MmGetMdlByteCount	.\SpinAPI\src\ddk_headers\winddk.h	7858;"	d
MmGetMdlByteOffset	.\SpinAPI\src\ddk_headers\winddk.h	7866;"	d
MmGetMdlPfnArray	.\SpinAPI\src\ddk_headers\winddk.h	7874;"	d
MmGetMdlVirtualAddress	.\SpinAPI\src\ddk_headers\winddk.h	7882;"	d
MmGetSystemAddressForMdl	.\SpinAPI\src\ddk_headers\win2k.h	94;"	d
MmGetSystemAddressForMdlSafe	.\SpinAPI\src\ddk_headers\winddk.h	7975;"	d
MmHardwareCoherentCached	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmHardwareCoherentCached,$/;"	e	enum:_MEMORY_CACHING_TYPE
MmInitializeMdl	.\SpinAPI\src\ddk_headers\winddk.h	8006;"	d
MmLargeSystem	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmLargeSystem$/;"	e	enum:_MM_SYSTEM_SIZE
MmLockPagableCodeSection	.\SpinAPI\src\ddk_headers\winddk.h	8060;"	d
MmMaximumCacheType	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmMaximumCacheType$/;"	e	enum:_MEMORY_CACHING_TYPE
MmMediumSystem	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmMediumSystem,$/;"	e	enum:_MM_SYSTEM_SIZE
MmNonCached	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmNonCached = FALSE,$/;"	e	enum:_MEMORY_CACHING_TYPE
MmNonCachedUnordered	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmNonCachedUnordered,$/;"	e	enum:_MEMORY_CACHING_TYPE
MmPrepareMdlForReuse	.\SpinAPI\src\ddk_headers\winddk.h	8135;"	d
MmSmallSystem	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmSmallSystem,$/;"	e	enum:_MM_SYSTEM_SIZE
MmUSWCCached	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmUSWCCached,$/;"	e	enum:_MEMORY_CACHING_TYPE
MmWriteCombined	.\SpinAPI\src\ddk_headers\winddk.h	/^  MmWriteCombined = MmFrameBufferCached,$/;"	e	enum:_MEMORY_CACHING_TYPE
ModemPeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  ModemPeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
MonitorPeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  MonitorPeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
Month	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Month;$/;"	m	struct:_TIME_FIELDS
MoreEntries	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MoreEntries : 1;$/;"	m	struct:_EISA_IRQ_DESCRIPTOR
MoreEntries	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MoreEntries : 1;$/;"	m	struct:_EISA_MEMORY_TYPE
MoreEntries	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MoreEntries : 1;$/;"	m	struct:_EISA_PORT_DESCRIPTOR
MoreEntries	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR MoreEntries : 1;$/;"	m	struct:_DMA_CONFIGURATION_BYTE0
MotorOffTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MotorOffTime;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
MotorSettleTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  MotorSettleTime;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
MountDensity	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  MountDensity;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
MountVolume	.\SpinAPI\src\ddk_headers\winddk.h	/^    } MountVolume;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon62
MultiFunctionAdapter	.\SpinAPI\src\ddk_headers\winddk.h	/^  MultiFunctionAdapter,$/;"	e	enum:_CONFIGURATION_TYPE
MutantListEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  MutantListEntry;$/;"	m	struct:_KMUTANT
My_variable	.\swig\example\example.c	/^double My_variable = 3.0;$/;"	v
NARROW_BW	.\SpinAPI\include\radioprocessor.h	464;"	d
NARROW_BW	.\SpinAPI\src\radioprocessor.h	464;"	d
NARROW_BW	.\mrispinapi.h	119;"	d
NO_BOARDS_FOUND	.\mrispinapi.h	50;"	d
NO_DEVICE_FOUND	.\SpinAPI\include\spinpts.h	29;"	d
NO_DEVICE_FOUND	.\SpinAPI\src\spinpts.h	29;"	d
NO_IMPORT_ARRAY	.\swig\Hahn_echo\Hahn_echo_wrap.c	3317;"	d	file:
NO_IMPORT_ARRAY	.\swig\example\get_rand_array\get_rand_array_wrap.c	3022;"	d	file:
NO_PHASE_RESET	.\Sleator_apps\CPMG\cpmg.h	55;"	d
NO_PHASE_RESET	.\Sleator_apps\Hahn_echo\Hahn_echo.h	63;"	d
NO_PHASE_RESET	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	60;"	d
NO_PHASE_RESET	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	63;"	d
NO_PHASE_RESET	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	60;"	d
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	46;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	43;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	41;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	44;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	39;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	41;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	34;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	36;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_cont.c	39;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_excite_test.c	40;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	40;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_phase_test.c	39;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	48;"	d
NO_PHASE_RESET	.\SpinAPI\examples\RadioProcessor\awg.c	40;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\RadioProcessor\excite_test.c	40;"	d	file:
NO_PHASE_RESET	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	51;"	d
NO_SHAPE	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	52;"	d	file:
NO_SHAPE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	45;"	d	file:
NO_SHAPE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	38;"	d	file:
NO_SHAPE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	40;"	d	file:
NO_SHAPE	.\SpinAPI\examples\RadioProcessor\awg.c	44;"	d	file:
NO_SWAP	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	56;"	d
NO_TRIGGER	.\Sleator_apps\CPMG\cpmg.h	57;"	d
NO_TRIGGER	.\Sleator_apps\Hahn_echo\Hahn_echo.h	65;"	d
NO_TRIGGER	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	62;"	d
NO_TRIGGER	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	65;"	d
NO_TRIGGER	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	62;"	d
NO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	48;"	d	file:
NO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	45;"	d	file:
NO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	43;"	d	file:
NO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	46;"	d	file:
NO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	43;"	d	file:
NO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	36;"	d	file:
NO_TRIGGER	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	38;"	d	file:
NO_TRIGGER	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	50;"	d
NO_TRIGGER	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	40;"	d	file:
NO_TRIGGER	.\SpinAPI\examples\RadioProcessor\awg.c	42;"	d	file:
NO_TRIGGER	.\SpinAPI\examples\RadioProcessor\excite_test.c	42;"	d	file:
NO_TRIGGER	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	53;"	d
NPAGED_LOOKASIDE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} NPAGED_LOOKASIDE_LIST, *PNPAGED_LOOKASIDE_LIST;$/;"	t	typeref:struct:_NPAGED_LOOKASIDE_LIST
NPY_ARRAY_DEFAULT	.\swig\Hahn_echo\Hahn_echo_wrap.c	3325;"	d	file:
NPY_ARRAY_DEFAULT	.\swig\example\get_rand_array\get_rand_array_wrap.c	3030;"	d	file:
NPY_ARRAY_FARRAY	.\swig\Hahn_echo\Hahn_echo_wrap.c	3326;"	d	file:
NPY_ARRAY_FARRAY	.\swig\example\get_rand_array\get_rand_array_wrap.c	3031;"	d	file:
NPY_FORTRANORDER	.\swig\Hahn_echo\Hahn_echo_wrap.c	3327;"	d	file:
NPY_FORTRANORDER	.\swig\example\get_rand_array\get_rand_array_wrap.c	3032;"	d	file:
NPY_NO_DEPRECATED_API	.\swig\Hahn_echo\Hahn_echo_wrap.c	3320;"	d	file:
NPY_NO_DEPRECATED_API	.\swig\example\get_rand_array\get_rand_array_wrap.c	3025;"	d	file:
NTOSAPI	.\SpinAPI\src\ddk_headers\winddk.h	43;"	d
NTOSAPI	.\SpinAPI\src\ddk_headers\winddk.h	49;"	d
NULL_CURRENT_BOARD	.\controls.h	34;"	d
NUMBER_OF_ADAPT_IOCTLS	.\SpinAPI\src\cyioctl.h	218;"	d
NUMBER_OF_SCANS	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set NUMBER_OF_SCANS=8$/;"	v
NUMBER_OF_SCANS	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set NUMBER_OF_SCANS=4$/;"	v
NUMBER_OF_SCANS	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set NUMBER_OF_SCANS=8$/;"	v
NUMBER_OF_SCANS	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set NUMBER_OF_SCANS=4$/;"	v
NUMBER_POINTS	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	45;"	d	file:
NUMBER_SCANS	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	49;"	d	file:
NUM_AMPLITUDE_REGISTERS	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	42;"	d	file:
NUM_ARGUMENTS	.\GradientEcho.c	28;"	d	file:
NUM_ARGUMENTS	.\Sleator_apps\CPMG\cpmg.h	39;"	d
NUM_ARGUMENTS	.\Sleator_apps\Hahn_echo\Hahn_echo.h	47;"	d
NUM_ARGUMENTS	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	44;"	d
NUM_ARGUMENTS	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	47;"	d
NUM_ARGUMENTS	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	44;"	d
NUM_ARGUMENTS	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	31;"	d
NUM_ARGUMENTS	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	34;"	d
NUM_FREQUENCY_REGISTERS	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	42;"	d	file:
NUM_LOOPS	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_loop_test.c	45;"	d	file:
NUM_LOOPS	.\SpinAPI\examples\PulseBlasterESR\pbesr_loop_test.c	44;"	d	file:
NUM_POINTS	.\adc_offset.c	7;"	d	file:
N_TAU	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set N_TAU=4$/;"	v
N_TAU	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set N_TAU=20$/;"	v
Name	.\SpinAPI\src\ddk_headers\winddk.h	/^  PWSTR  Name;$/;"	m	struct:_RTL_QUERY_REGISTRY_TABLE
Name	.\SpinAPI\src\ddk_headers\winddk.h	/^  UNICODE_STRING  Name;                                $/;"	m	struct:_OBJECT_NAME_INFORMATION
Name	.\SpinAPI\src\ddk_headers\winddk.h	/^  WCHAR  Name[1];$/;"	m	struct:_KEY_BASIC_INFORMATION
Name	.\SpinAPI\src\ddk_headers\winddk.h	/^  WCHAR  Name[1];$/;"	m	struct:_KEY_NODE_INFORMATION
Name	.\SpinAPI\src\ddk_headers\winddk.h	/^  WCHAR  Name[1];$/;"	m	struct:_KEY_VALUE_BASIC_INFORMATION
Name	.\SpinAPI\src\ddk_headers\winddk.h	/^  WCHAR  Name[1];$/;"	m	struct:_KEY_VALUE_FULL_INFORMATION
NameBufferOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONG  NameBufferOffset;$/;"	m	struct:_TARGET_DEVICE_CUSTOM_NOTIFICATION
NameLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  NameLength;$/;"	m	struct:_KEY_BASIC_INFORMATION
NameLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  NameLength;$/;"	m	struct:_KEY_NODE_INFORMATION
NameLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  NameLength;$/;"	m	struct:_KEY_VALUE_BASIC_INFORMATION
NameLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  NameLength;$/;"	m	struct:_KEY_VALUE_FULL_INFORMATION
NaturalLanguage	.\SpinAPI\interpreter\src\interpreter.cpp	/^int NaturalLanguage(const char *input, int *output)$/;"	f
NetworkController	.\SpinAPI\src\ddk_headers\winddk.h	/^  NetworkController,$/;"	e	enum:_CONFIGURATION_TYPE
NetworkPeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  NetworkPeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
NewRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDRIVER_VERIFIER_THUNK_ROUTINE  NewRoutine;$/;"	m	struct:_DRIVER_VERIFIER_THUNK_PAIRS
Next	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _KSPIN_LOCK_QUEUE  *VOLATILE Next;$/;"	m	struct:_KSPIN_LOCK_QUEUE	typeref:struct:_KSPIN_LOCK_QUEUE::VOLATILE
Next	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _MDL  *Next;$/;"	m	struct:_MDL	typeref:struct:_MDL::_MDL
NextDevice	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _DEVICE_OBJECT  *NextDevice;$/;"	m	struct:_DEVICE_OBJECT	typeref:struct:_DEVICE_OBJECT::_DEVICE_OBJECT
NextEntryOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  NextEntryOffset;$/;"	m	struct:_FILE_FULL_EA_INFORMATION
NextWaitBlock	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _KWAIT_BLOCK * RESTRICTED_POINTER  NextWaitBlock;$/;"	m	struct:_KWAIT_BLOCK	typeref:struct:_KWAIT_BLOCK::RESTRICTED_POINTER
NoDisplayInUI	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  NoDisplayInUI : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
NonDynamic	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  NonDynamic : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
NonPagedPool	.\SpinAPI\src\ddk_headers\winddk.h	/^  NonPagedPool,$/;"	e	enum:_POOL_TYPE
NonPagedPoolCacheAligned	.\SpinAPI\src\ddk_headers\winddk.h	/^  NonPagedPoolCacheAligned,$/;"	e	enum:_POOL_TYPE
NonPagedPoolCacheAlignedMustS	.\SpinAPI\src\ddk_headers\winddk.h	/^  NonPagedPoolCacheAlignedMustS,$/;"	e	enum:_POOL_TYPE
NonPagedPoolCacheAlignedMustSSession	.\SpinAPI\src\ddk_headers\winddk.h	/^	NonPagedPoolCacheAlignedMustSSession$/;"	e	enum:_POOL_TYPE
NonPagedPoolCacheAlignedSession	.\SpinAPI\src\ddk_headers\winddk.h	/^	NonPagedPoolCacheAlignedSession,$/;"	e	enum:_POOL_TYPE
NonPagedPoolMustSucceed	.\SpinAPI\src\ddk_headers\winddk.h	/^  NonPagedPoolMustSucceed,$/;"	e	enum:_POOL_TYPE
NonPagedPoolMustSucceedSession	.\SpinAPI\src\ddk_headers\winddk.h	/^	NonPagedPoolMustSucceedSession,$/;"	e	enum:_POOL_TYPE
NonPagedPoolSession	.\SpinAPI\src\ddk_headers\winddk.h	/^	NonPagedPoolSession = 32,$/;"	e	enum:_POOL_TYPE
NormalContext	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  NormalContext;$/;"	m	struct:_KAPC
NormalPagePriority	.\SpinAPI\src\ddk_headers\winddk.h	/^  NormalPagePriority = 16,$/;"	e	enum:_MM_PAGE_PRIORITY
NormalPoolPriority	.\SpinAPI\src\ddk_headers\winddk.h	/^  NormalPoolPriority = 16,$/;"	e	enum:_EX_POOL_PRIORITY
NormalPoolPrioritySpecialPoolOverrun	.\SpinAPI\src\ddk_headers\winddk.h	/^  NormalPoolPrioritySpecialPoolOverrun = 24,$/;"	e	enum:_EX_POOL_PRIORITY
NormalPoolPrioritySpecialPoolUnderrun	.\SpinAPI\src\ddk_headers\winddk.h	/^  NormalPoolPrioritySpecialPoolUnderrun = 25,$/;"	e	enum:_EX_POOL_PRIORITY
NormalRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PKNORMAL_ROUTINE  NormalRoutine;$/;"	m	struct:_KAPC
NotificationEvent	.\SpinAPI\src\ddk_headers\winddk.h	/^  NotificationEvent,$/;"	e	enum:_EVENT_TYPE
NotificationTimer	.\SpinAPI\src\ddk_headers\winddk.h	/^  NotificationTimer,$/;"	e	enum:_TIMER_TYPE
NtStatus	.\SpinAPI\src\cyioctl.h	/^    ULONG NtStatus;$/;"	m	struct:_SINGLE_TRANSFER
NuBus	.\SpinAPI\src\ddk_headers\winddk.h	/^  NuBus,$/;"	e	enum:_INTERFACE_TYPE
NuBusConfiguration	.\SpinAPI\src\ddk_headers\win2k.h	/^  NuBusConfiguration,$/;"	e	enum:_BUS_DATA_TYPE
Number	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Number;                \/* 51 *\/$/;"	m	struct:_KPCR
Number	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Number;$/;"	m	struct:_KDPC
NumberDrives	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  NumberDrives;$/;"	m	struct:_CM_INT13_DRIVE_PARAMETER
NumberFunctions	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  NumberFunctions;$/;"	m	struct:_CM_EISA_SLOT_INFORMATION
NumberOfBits	.\SpinAPI\src\ddk_headers\winddk.h	/^    ULONG  NumberOfBits;$/;"	m	struct:_RTL_BITMAP_RUN
NumberOfBytes	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  NumberOfBytes;$/;"	m	struct:_PHYSICAL_MEMORY_RANGE
NumberOfElements	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  NumberOfElements;$/;"	m	struct:_SCATTER_GATHER_LIST
NumberOfExclusiveWaiters	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  NumberOfExclusiveWaiters;$/;"	m	struct:_ERESOURCE
NumberOfLinks	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  NumberOfLinks;$/;"	m	struct:_FILE_STANDARD_INFORMATION
NumberOfMapRegisters	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  NumberOfMapRegisters;$/;"	m	struct:_WAIT_CONTEXT_BLOCK
NumberOfServices	.\SpinAPI\src\ddk_headers\winddk.h	/^	ULONG  NumberOfServices;$/;"	m	struct:_SSDT_ENTRY
NumberOfSharedWaiters	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  NumberOfSharedWaiters;$/;"	m	struct:_ERESOURCE
NumberOfStrings	.\SpinAPI\src\ddk_headers\winddk.h	/^	USHORT  NumberOfStrings; $/;"	m	struct:_IO_ERROR_LOG_PACKET
NumberPorts	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  NumberPorts : 5;$/;"	m	struct:_EISA_PORT_DESCRIPTOR
Numeric	.\SpinAPI\interpreter\src\interpreter.cpp	/^	enum TokenType { Identifier = 0, Numeric, Variable, Colon, Comma, Equal, EndOfLine, EndOfFile };$/;"	e	enum:tagToken::TokenType	file:
OBJECT_HANDLE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} OBJECT_HANDLE_INFORMATION, *POBJECT_HANDLE_INFORMATION;$/;"	t	typeref:struct:_OBJECT_HANDLE_INFORMATION
OBJECT_NAME_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION;   $/;"	t	typeref:struct:_OBJECT_NAME_INFORMATION
ON	.\SpinAPI\include\pulseblaster.h	57;"	d
ON	.\SpinAPI\src\pulseblaster.h	57;"	d
ONE_PERIOD	.\SpinAPI\include\pulseblaster.h	51;"	d
ONE_PERIOD	.\SpinAPI\src\pulseblaster.h	51;"	d
OPTIONAL	.\SpinAPI\src\ddk_headers\winddk.h	58;"	d
OS	.\SpinAPI\drivers\_install.bat	/^if "%version%" == "10.0" set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_install.bat	/^if "%version%" == "5.0" set OS=w2k$/;"	v
OS	.\SpinAPI\drivers\_install.bat	/^if "%version%" == "5.1" set OS=wxp$/;"	v
OS	.\SpinAPI\drivers\_install.bat	/^if "%version%" == "5.2" set OS=wxp$/;"	v
OS	.\SpinAPI\drivers\_install.bat	/^if "%version%" == "6.0" set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_install.bat	/^if "%version%" == "6.1" set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_install.bat	/^if "%version%" == "6.2" set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_install.bat	/^if "%version%" == "6.3" set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_install.bat	/^set OS=unknown$/;"	v
OS	.\SpinAPI\drivers\_uninstall.bat	/^set OS=w2k$/;"	v
OS	.\SpinAPI\drivers\_uninstall.bat	/^set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_uninstall.bat	/^set OS=wxp$/;"	v
OS	.\SpinAPI\drivers\_windriver.bat	/^if "%version%" == "10.0" set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_windriver.bat	/^if "%version%" == "5.0" set OS=w2k$/;"	v
OS	.\SpinAPI\drivers\_windriver.bat	/^if "%version%" == "5.1" set OS=wxp$/;"	v
OS	.\SpinAPI\drivers\_windriver.bat	/^if "%version%" == "5.2" set OS=wxp$/;"	v
OS	.\SpinAPI\drivers\_windriver.bat	/^if "%version%" == "6.0" set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_windriver.bat	/^if "%version%" == "6.1" set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_windriver.bat	/^if "%version%" == "6.2" set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_windriver.bat	/^if "%version%" == "6.3" set OS=wlh$/;"	v
OS	.\SpinAPI\drivers\_windriver.bat	/^set OS=unknown$/;"	v
OUT	.\SpinAPI\src\ddk_headers\winddk.h	57;"	d
OUT_OF_MEMORY	.\mrispinapi.h	56;"	d
OVERFLOW_RESET	.\SpinAPI\include\radioprocessor.h	475;"	d
OVERFLOW_RESET	.\SpinAPI\src\radioprocessor.h	475;"	d
OWNER_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^} OWNER_ENTRY, *POWNER_ENTRY;$/;"	t	typeref:struct:_OWNER_ENTRY
ObDereferenceObject	.\SpinAPI\src\ddk_headers\winddk.h	8252;"	d
ObReferenceObject	.\SpinAPI\src\ddk_headers\winddk.h	8291;"	d
Object	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Object;$/;"	m	struct:_KWAIT_BLOCK
ObjectName	.\SpinAPI\src\ddk_headers\winddk.h	/^  UNICODE_STRING  ObjectName;$/;"	m	struct:_ACCESS_STATE
ObjectTypeName	.\SpinAPI\src\ddk_headers\winddk.h	/^  UNICODE_STRING  ObjectTypeName;$/;"	m	struct:_ACCESS_STATE
Objects	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDEVICE_OBJECT Objects[1];$/;"	m	struct:_DEVICE_RELATIONS
Obsoleted	.\SpinAPI\src\ddk_headers\winddk.h	/^  FAST_MUTEX  Obsoleted;$/;"	m	struct:_PAGED_LOOKASIDE_LIST
Obsoleted	.\SpinAPI\src\ddk_headers\winddk.h	/^  KSPIN_LOCK  Obsoleted;$/;"	m	struct:_NPAGED_LOOKASIDE_LIST
Offset	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Offset;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon69
OldEditWndProc	.\SpinAPI\interpreter\src\gui.cpp	/^WNDPROC OldEditWndProc; $/;"	v
OldIrql	.\SpinAPI\src\ddk_headers\winddk.h	/^  KIRQL  OldIrql;$/;"	m	struct:_KLOCK_QUEUE_HANDLE
OldIrql	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  OldIrql;$/;"	m	struct:_FAST_MUTEX
Open	.\SpinAPI\interpreter\src\gui.cpp	/^int Open()$/;"	f
OpenCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  OpenCount;$/;"	m	struct:_SHARE_ACCESS
OpenFileName	.\SpinAPI\interpreter\src\gui.cpp	/^string OpenFileName; \/\/ Name of the currently open file.$/;"	v
OperationID	.\SpinAPI\src\ddk_headers\winddk.h	/^  LUID  OperationID;$/;"	m	struct:_ACCESS_STATE
Option	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Option;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR
Options	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Options;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon51
OriginalDesiredAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  ACCESS_MASK  OriginalDesiredAccess;$/;"	m	struct:_ACCESS_STATE
OriginalFileObject	.\SpinAPI\src\ddk_headers\winddk.h	/^      struct _FILE_OBJECT  *OriginalFileObject;$/;"	m	struct:_IRP::__anon21::__anon22	typeref:struct:_IRP::__anon21::__anon22::_FILE_OBJECT
OtherController	.\SpinAPI\src\ddk_headers\winddk.h	/^  OtherController,$/;"	e	enum:_CONFIGURATION_TYPE
OtherPeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  OtherPeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
Others	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Others;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon79
Output	.\SpinAPI\interpreter\src\gui.cpp	/^void Output(string output)$/;"	f
OutputBufferLength	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  OutputBufferLength;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon59
Overlay	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Overlay;$/;"	m	union:_IRP::__anon21	typeref:struct:_IRP::__anon21::__anon22
Overlay	.\SpinAPI\src\ddk_headers\winddk.h	/^  } Overlay;$/;"	m	struct:_IRP	typeref:union:_IRP::__anon19
Owner	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Owner;$/;"	m	struct:_RTL_RANGE
Owner	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _KTHREAD  *Owner;$/;"	m	struct:_FAST_MUTEX	typeref:struct:_FAST_MUTEX::_KTHREAD
OwnerCount	.\SpinAPI\src\ddk_headers\winddk.h	/^      LONG  OwnerCount;$/;"	m	union:_OWNER_ENTRY::__anon47
OwnerTable	.\SpinAPI\src\ddk_headers\winddk.h	/^  POWNER_ENTRY  OwnerTable;$/;"	m	struct:_ERESOURCE
OwnerThread	.\SpinAPI\src\ddk_headers\winddk.h	/^  ERESOURCE_THREAD  OwnerThread;$/;"	m	struct:_OWNER_ENTRY
OwnerThread	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _KTHREAD  *RESTRICTED_POINTER OwnerThread;$/;"	m	struct:_KMUTANT	typeref:struct:_KMUTANT::RESTRICTED_POINTER
OwnerThreads	.\SpinAPI\src\ddk_headers\winddk.h	/^  OWNER_ENTRY  OwnerThreads[2];$/;"	m	struct:_ERESOURCE
P1_PHASE	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set P1_PHASE=15.0$/;"	v
P1_PHASE	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set P1_PHASE=15.0$/;"	v
P1_PHASE	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set P1_PHASE=15.0$/;"	v
P1_PHASE	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set P1_PHASE=15.0$/;"	v
P1_TIME	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set P1_TIME=4.2$/;"	v
P1_TIME	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set P1_TIME=4.2$/;"	v
P1_TIME	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set P1_TIME=4.2$/;"	v
P1_TIME	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set P1_TIME=8.4$/;"	v
P2_PHASE	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set P2_PHASE=15.0$/;"	v
P2_PHASE	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set P2_PHASE=15.0$/;"	v
P2_PHASE	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set P2_PHASE=15.0$/;"	v
P2_PHASE	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set P2_PHASE=15.0$/;"	v
P2_TIME	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set P2_TIME=8.4$/;"	v
P2_TIME	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set P2_TIME=8.4$/;"	v
P2_TIME	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set P2_TIME=4.2$/;"	v
P2_TIME	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set P2_TIME=4.2$/;"	v
P3_PHASE	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set P3_PHASE=15.0$/;"	v
P3_TIME	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set P3_TIME=4.2$/;"	v
PACCESS_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^} ACCESS_STATE, *PACCESS_STATE;$/;"	t	typeref:struct:_ACCESS_STATE
PAGED_CODE	.\SpinAPI\src\ddk_headers\winddk.h	5655;"	d
PAGED_CODE	.\SpinAPI\src\ddk_headers\winddk.h	5664;"	d
PAGED_LOOKASIDE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} PAGED_LOOKASIDE_LIST, *PPAGED_LOOKASIDE_LIST;$/;"	t	typeref:struct:_PAGED_LOOKASIDE_LIST
PAGE_ALIGN	.\SpinAPI\src\ddk_headers\winddk.h	3963;"	d
PAGE_SHIFT	.\SpinAPI\src\ddk_headers\winddk.h	3769;"	d
PAGE_SIZE	.\SpinAPI\src\ddk_headers\winddk.h	3768;"	d
PALLOCATE_ADAPTER_CHANNEL	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PALLOCATE_ADAPTER_CHANNEL)($/;"	t
PALLOCATE_COMMON_BUFFER	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PALLOCATE_COMMON_BUFFER)($/;"	t
PALLOCATE_FUNCTION	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PALLOCATE_FUNCTION)($/;"	t
PARAM_ERROR	.\SpinAPI\include\spinapi.h	29;"	d
PARAM_ERROR	.\SpinAPI\src\spinapi.h	29;"	d
PARTITION_INFORMATION_MBR	.\SpinAPI\src\ddk_headers\winddk.h	/^} PARTITION_INFORMATION_MBR, *PPARTITION_INFORMATION_MBR;$/;"	t	typeref:struct:_PARTITION_INFORMATION_MBR
PARTITION_STYLE	.\SpinAPI\src\ddk_headers\winddk.h	/^} PARTITION_STYLE;$/;"	t	typeref:enum:_PARTITION_STYLE
PARTITION_STYLE_GPT	.\SpinAPI\src\ddk_headers\winddk.h	/^  PARTITION_STYLE_GPT$/;"	e	enum:_PARTITION_STYLE
PARTITION_STYLE_MBR	.\SpinAPI\src\ddk_headers\winddk.h	/^  PARTITION_STYLE_MBR,$/;"	e	enum:_PARTITION_STYLE
PASSIVE_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3709;"	d
PB24	.\SpinAPI\examples\PulseBlaster24\pb24_ex1.c	33;"	d	file:
PB24	.\SpinAPI\examples\PulseBlaster24\pb24_ex2.c	38;"	d	file:
PB24	.\SpinAPI\examples\PulseBlaster24\pb24_ex3.c	35;"	d	file:
PB24	.\SpinAPI\examples\PulseBlaster24\pb24_ex4.c	36;"	d	file:
PB24	.\SpinAPI\examples\PulseBlaster24\pb24_mem_depth_test.c	33;"	d	file:
PB24	.\SpinAPI\examples\PulseBlaster24\pb24_programmable_clock.c	37;"	d	file:
PB24	.\SpinAPI\examples\PulseBlaster24\pb24_two_boards.c	42;"	d	file:
PB24	.\SpinAPI\interpreter\src\commandline.cpp	31;"	d	file:
PB24	.\SpinAPI\interpreter\src\gui.cpp	34;"	d	file:
PB24	.\SpinAPI\interpreter\src\interpreter.cpp	34;"	d	file:
PBDDS	.\SpinAPI\examples\PBDDS-III\pbdds3_ex1.c	35;"	d	file:
PBDDS	.\SpinAPI\examples\PBDDS-III\pbdds3_ex2.c	43;"	d	file:
PBESR	.\SpinAPI\examples\PulseBlasterESR\pbesr_long_delay_test.c	40;"	d	file:
PBESR	.\SpinAPI\examples\PulseBlasterESR\pbesr_loop_test.c	41;"	d	file:
PBESR	.\SpinAPI\examples\PulseBlasterESR\pbesr_manual_example.c	36;"	d	file:
PBESR	.\SpinAPI\examples\PulseBlasterESR\pbesr_sub_test.c	32;"	d	file:
PBESRPRO	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_example1.c	44;"	d	file:
PBESRPRO	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_long_delay_test.c	45;"	d	file:
PBESRPRO	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_loop_test.c	41;"	d	file:
PBESRPRO	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_shortpulse_disable.c	25;"	d	file:
PBESRPRO	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_start_address.c	25;"	d	file:
PBESRPRO	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_subtest.c	32;"	d	file:
PBESR_PRO_DEVID	.\SpinAPI\src\caps.h	5;"	d
PBM_REQ_TYPE	.\SpinAPI\src\cyioctl.h	/^} BM_REQ_TYPE, *PBM_REQ_TYPE;$/;"	t	typeref:struct:_BM_REQ_TYPE
PBOOTDISK_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} BOOTDISK_INFORMATION, *PBOOTDISK_INFORMATION;$/;"	t	typeref:struct:_BOOTDISK_INFORMATION
PBOOTDISK_INFORMATION_EX	.\SpinAPI\src\ddk_headers\winddk.h	/^} BOOTDISK_INFORMATION_EX, *PBOOTDISK_INFORMATION_EX;$/;"	t	typeref:struct:_BOOTDISK_INFORMATION_EX
PBUILD_MDL_FROM_SCATTER_GATHER_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PBUILD_MDL_FROM_SCATTER_GATHER_LIST)($/;"	t
PBUILD_SCATTER_GATHER_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PBUILD_SCATTER_GATHER_LIST)($/;"	t
PBUS_DATA_TYPE	.\SpinAPI\src\ddk_headers\win2k.h	/^} BUS_DATA_TYPE, *PBUS_DATA_TYPE;$/;"	t	typeref:enum:_BUS_DATA_TYPE
PBUS_INTERFACE_STANDARD	.\SpinAPI\src\ddk_headers\winddk.h	/^} BUS_INTERFACE_STANDARD, *PBUS_INTERFACE_STANDARD;$/;"	t	typeref:struct:_BUS_INTERFACE_STANDARD
PBUS_QUERY_ID_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} BUS_QUERY_ID_TYPE, *PBUS_QUERY_ID_TYPE;$/;"	t	typeref:enum:_BUS_QUERY_ID_TYPE
PB_OVERFLOW_STRUCT	.\SpinAPI\include\radioprocessor.h	/^} PB_OVERFLOW_STRUCT;$/;"	t	typeref:struct:__anon9
PB_OVERFLOW_STRUCT	.\SpinAPI\src\radioprocessor.h	/^} PB_OVERFLOW_STRUCT;$/;"	t	typeref:struct:__anon94
PCALCULATE_SCATTER_GATHER_LIST_SIZE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PCALCULATE_SCATTER_GATHER_LIST_SIZE)($/;"	t
PCALLBACK_FUNCTION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef VOID DDKAPI (*PCALLBACK_FUNCTION)($/;"	t
PCALLBACK_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CALLBACK_OBJECT *PCALLBACK_OBJECT;$/;"	t	typeref:struct:_CALLBACK_OBJECT
PCIBus	.\SpinAPI\src\ddk_headers\winddk.h	/^  PCIBus,$/;"	e	enum:_INTERFACE_TYPE
PCIConfiguration	.\SpinAPI\src\ddk_headers\win2k.h	/^  PCIConfiguration,$/;"	e	enum:_BUS_DATA_TYPE
PCI_BRIDGE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	2889;"	d
PCI_CARDBUS_BRIDGE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	2890;"	d
PCI_COMMON_CONFIG	.\SpinAPI\src\ddk_headers\winddk.h	/^} PCI_COMMON_CONFIG, *PPCI_COMMON_CONFIG;$/;"	t	typeref:struct:_PCI_COMMON_CONFIG
PCI_CONFIGURATION_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	2892;"	d
PCI_DEVICE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	2888;"	d
PCI_ENABLE_BUS_MASTER	.\SpinAPI\src\ddk_headers\winddk.h	2862;"	d
PCI_ENABLE_FAST_BACK_TO_BACK	.\SpinAPI\src\ddk_headers\winddk.h	2869;"	d
PCI_ENABLE_IO_SPACE	.\SpinAPI\src\ddk_headers\winddk.h	2860;"	d
PCI_ENABLE_MEMORY_SPACE	.\SpinAPI\src\ddk_headers\winddk.h	2861;"	d
PCI_ENABLE_PARITY	.\SpinAPI\src\ddk_headers\winddk.h	2866;"	d
PCI_ENABLE_SERR	.\SpinAPI\src\ddk_headers\winddk.h	2868;"	d
PCI_ENABLE_SPECIAL_CYCLES	.\SpinAPI\src\ddk_headers\winddk.h	2863;"	d
PCI_ENABLE_VGA_COMPATIBLE_PALETTE	.\SpinAPI\src\ddk_headers\winddk.h	2865;"	d
PCI_ENABLE_WAIT_CYCLE	.\SpinAPI\src\ddk_headers\winddk.h	2867;"	d
PCI_ENABLE_WRITE_AND_INVALIDATE	.\SpinAPI\src\ddk_headers\winddk.h	2864;"	d
PCI_H	.\pci.h	20;"	d
PCI_MULTIFUNCTION	.\SpinAPI\src\ddk_headers\winddk.h	2887;"	d
PCI_MULTIFUNCTION_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	2895;"	d
PCI_READ	.\SpinAPI\include\radioprocessor.h	462;"	d
PCI_READ	.\SpinAPI\src\radioprocessor.h	462;"	d
PCI_SLOT_NUMBER	.\SpinAPI\src\ddk_headers\winddk.h	/^} PCI_SLOT_NUMBER, *PPCI_SLOT_NUMBER;$/;"	t	typeref:struct:_PCI_SLOT_NUMBER
PCI_STATUS_66MHZ_CAPABLE	.\SpinAPI\src\ddk_headers\winddk.h	2874;"	d
PCI_STATUS_CAPABILITIES_LIST	.\SpinAPI\src\ddk_headers\winddk.h	2873;"	d
PCI_STATUS_DATA_PARITY_DETECTED	.\SpinAPI\src\ddk_headers\winddk.h	2877;"	d
PCI_STATUS_DETECTED_PARITY_ERROR	.\SpinAPI\src\ddk_headers\winddk.h	2883;"	d
PCI_STATUS_DEVSEL	.\SpinAPI\src\ddk_headers\winddk.h	2878;"	d
PCI_STATUS_FAST_BACK_TO_BACK	.\SpinAPI\src\ddk_headers\winddk.h	2876;"	d
PCI_STATUS_RECEIVED_MASTER_ABORT	.\SpinAPI\src\ddk_headers\winddk.h	2881;"	d
PCI_STATUS_RECEIVED_TARGET_ABORT	.\SpinAPI\src\ddk_headers\winddk.h	2880;"	d
PCI_STATUS_SIGNALED_SYSTEM_ERROR	.\SpinAPI\src\ddk_headers\winddk.h	2882;"	d
PCI_STATUS_SIGNALED_TARGET_ABORT	.\SpinAPI\src\ddk_headers\winddk.h	2879;"	d
PCI_STATUS_UDF_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	2875;"	d
PCI_TYPE0_ADDRESSES	.\SpinAPI\src\ddk_headers\winddk.h	2781;"	d
PCI_TYPE1_ADDRESSES	.\SpinAPI\src\ddk_headers\winddk.h	2782;"	d
PCI_TYPE2_ADDRESSES	.\SpinAPI\src\ddk_headers\winddk.h	2783;"	d
PCLIENT_ID	.\SpinAPI\src\ddk_headers\winddk.h	/^} CLIENT_ID, *PCLIENT_ID;$/;"	t	typeref:struct:_CLIENT_ID
PCMCIABus	.\SpinAPI\src\ddk_headers\winddk.h	/^  PCMCIABus,$/;"	e	enum:_INTERFACE_TYPE
PCMCIAConfiguration	.\SpinAPI\src\ddk_headers\win2k.h	/^  PCMCIAConfiguration,$/;"	e	enum:_BUS_DATA_TYPE
PCM_EISA_FUNCTION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_EISA_FUNCTION_INFORMATION, *PCM_EISA_FUNCTION_INFORMATION;$/;"	t	typeref:struct:_CM_EISA_FUNCTION_INFORMATION
PCM_EISA_SLOT_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_EISA_SLOT_INFORMATION, *PCM_EISA_SLOT_INFORMATION;$/;"	t	typeref:struct:_CM_EISA_SLOT_INFORMATION
PCM_FLOPPY_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_FLOPPY_DEVICE_DATA, *PCM_FLOPPY_DEVICE_DATA;$/;"	t	typeref:struct:_CM_FLOPPY_DEVICE_DATA
PCM_FULL_RESOURCE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_FULL_RESOURCE_DESCRIPTOR, *PCM_FULL_RESOURCE_DESCRIPTOR;$/;"	t	typeref:struct:_CM_FULL_RESOURCE_DESCRIPTOR
PCM_INT13_DRIVE_PARAMETER	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_INT13_DRIVE_PARAMETER, *PCM_INT13_DRIVE_PARAMETER;$/;"	t	typeref:struct:_CM_INT13_DRIVE_PARAMETER
PCM_KEYBOARD_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_KEYBOARD_DEVICE_DATA, *PCM_KEYBOARD_DEVICE_DATA;$/;"	t	typeref:struct:_CM_KEYBOARD_DEVICE_DATA
PCM_MCA_POS_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_MCA_POS_DATA, *PCM_MCA_POS_DATA;$/;"	t	typeref:struct:_CM_MCA_POS_DATA
PCM_PARTIAL_RESOURCE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_PARTIAL_RESOURCE_DESCRIPTOR, *PCM_PARTIAL_RESOURCE_DESCRIPTOR;$/;"	t	typeref:struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR
PCM_PARTIAL_RESOURCE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_PARTIAL_RESOURCE_LIST, *PCM_PARTIAL_RESOURCE_LIST;$/;"	t	typeref:struct:_CM_PARTIAL_RESOURCE_LIST
PCM_POWER_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_POWER_DATA, *PCM_POWER_DATA;$/;"	t	typeref:struct:CM_Power_Data_s
PCM_RESOURCE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_RESOURCE_LIST, *PCM_RESOURCE_LIST;$/;"	t	typeref:struct:_CM_RESOURCE_LIST
PCM_SCSI_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_SCSI_DEVICE_DATA, *PCM_SCSI_DEVICE_DATA;$/;"	t	typeref:struct:_CM_SCSI_DEVICE_DATA
PCM_SERIAL_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^} CM_SERIAL_DEVICE_DATA, *PCM_SERIAL_DEVICE_DATA;$/;"	t	typeref:struct:_CM_SERIAL_DEVICE_DATA
PCOMPRESSED_DATA_INFO	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _COMPRESSED_DATA_INFO *PCOMPRESSED_DATA_INFO;$/;"	t	typeref:struct:_COMPRESSED_DATA_INFO
PCONFIGURATION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} CONFIGURATION_INFORMATION, *PCONFIGURATION_INFORMATION;$/;"	t	typeref:struct:_CONFIGURATION_INFORMATION
PCONFIGURATION_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} CONFIGURATION_TYPE, *PCONFIGURATION_TYPE;$/;"	t	typeref:enum:_CONFIGURATION_TYPE
PCONTROLLER_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^} CONTROLLER_OBJECT, *PCONTROLLER_OBJECT;$/;"	t	typeref:struct:_CONTROLLER_OBJECT
PCRCB	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _KPRCB  *PCRCB;        \/* 20 *\/$/;"	m	struct:_KPCR	typeref:struct:_KPCR::_KPRCB
PCREATE_DISK	.\SpinAPI\src\ddk_headers\winddk.h	/^} CREATE_DISK, *PCREATE_DISK;$/;"	t	typeref:struct:_CREATE_DISK
PCREATE_DISK_GPT	.\SpinAPI\src\ddk_headers\winddk.h	/^} CREATE_DISK_GPT, *PCREATE_DISK_GPT;$/;"	t	typeref:struct:_CREATE_DISK_GPT
PCREATE_DISK_MBR	.\SpinAPI\src\ddk_headers\winddk.h	/^} CREATE_DISK_MBR, *PCREATE_DISK_MBR;$/;"	t	typeref:struct:_CREATE_DISK_MBR
PCREATE_PROCESS_NOTIFY_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PCREATE_PROCESS_NOTIFY_ROUTINE)($/;"	t
PCREATE_THREAD_NOTIFY_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PCREATE_THREAD_NOTIFY_ROUTINE)($/;"	t
PCR_MAJOR_VERSION	.\SpinAPI\src\ddk_headers\winddk.h	3735;"	d
PCR_MINOR_VERSION	.\SpinAPI\src\ddk_headers\winddk.h	3734;"	d
PCSZ	.\SpinAPI\src\ddk_headers\ntddk.h	/^typedef CONST char *PCSZ;$/;"	t
PDCAP_D0_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	1416;"	d
PDCAP_D1_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	1417;"	d
PDCAP_D2_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	1418;"	d
PDCAP_D3_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	1419;"	d
PDCAP_WAKE_FROM_D0_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	1420;"	d
PDCAP_WAKE_FROM_D1_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	1421;"	d
PDCAP_WAKE_FROM_D2_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	1422;"	d
PDCAP_WAKE_FROM_D3_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	1423;"	d
PDCAP_WARM_EJECT_SUPPORTED	.\SpinAPI\src\ddk_headers\winddk.h	1424;"	d
PDEVICE_CAPABILITIES	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_CAPABILITIES, *PDEVICE_CAPABILITIES;$/;"	t	typeref:struct:_DEVICE_CAPABILITIES
PDEVICE_CHANGE_COMPLETE_CALLBACK	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PDEVICE_CHANGE_COMPLETE_CALLBACK)($/;"	t
PDEVICE_DESCRIPTION	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_DESCRIPTION, *PDEVICE_DESCRIPTION;$/;"	t	typeref:struct:_DEVICE_DESCRIPTION
PDEVICE_INTERFACE_CHANGE_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_INTERFACE_CHANGE_NOTIFICATION, *PDEVICE_INTERFACE_CHANGE_NOTIFICATION;$/;"	t	typeref:struct:_DEVICE_INTERFACE_CHANGE_NOTIFICATION
PDEVICE_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DEVICE_OBJECT *PDEVICE_OBJECT;$/;"	t	typeref:struct:_DEVICE_OBJECT
PDEVICE_RELATIONS	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_RELATIONS, *PDEVICE_RELATIONS;$/;"	t	typeref:struct:_DEVICE_RELATIONS
PDEVICE_RELATION_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_RELATION_TYPE, *PDEVICE_RELATION_TYPE;$/;"	t	typeref:enum:_DEVICE_RELATION_TYPE
PDEVICE_TEXT_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} DEVICE_TEXT_TYPE, *PDEVICE_TEXT_TYPE;$/;"	t	typeref:enum:_DEVICE_TEXT_TYPE
PDISK_SIGNATURE	.\SpinAPI\src\ddk_headers\winddk.h	/^} DISK_SIGNATURE, *PDISK_SIGNATURE;$/;"	t	typeref:struct:_DISK_SIGNATURE
PDISPATCHER_HEADER	.\SpinAPI\src\ddk_headers\winddk.h	/^} DISPATCHER_HEADER, *PDISPATCHER_HEADER;$/;"	t	typeref:struct:_DISPATCHER_HEADER
PDMA_OPERATIONS	.\SpinAPI\src\ddk_headers\winddk.h	/^} DMA_OPERATIONS, *PDMA_OPERATIONS;$/;"	t	typeref:struct:_DMA_OPERATIONS
PDMA_SPEED	.\SpinAPI\src\ddk_headers\winddk.h	/^} DMA_SPEED, *PDMA_SPEED;$/;"	t	typeref:enum:_DMA_SPEED
PDMA_WIDTH	.\SpinAPI\src\ddk_headers\winddk.h	/^} DMA_WIDTH, *PDMA_WIDTH;$/;"	t	typeref:enum:_DMA_WIDTH
PDRIVER_ADD_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PDRIVER_ADD_DEVICE)($/;"	t
PDRIVER_CANCEL	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PDRIVER_CANCEL)($/;"	t
PDRIVER_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PDRIVER_CONTROL)($/;"	t
PDRIVER_DISPATCH	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PDRIVER_DISPATCH)($/;"	t
PDRIVER_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PDRIVER_ENTRY)( $/;"	t
PDRIVER_EXTENSION	.\SpinAPI\src\ddk_headers\winddk.h	/^} DRIVER_EXTENSION, *PDRIVER_EXTENSION;$/;"	t	typeref:struct:_DRIVER_EXTENSION
PDRIVER_INITIALIZE	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PDRIVER_INITIALIZE)($/;"	t
PDRIVER_LIST_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PDRIVER_LIST_CONTROL)($/;"	t
PDRIVER_NOTIFICATION_CALLBACK_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PDRIVER_NOTIFICATION_CALLBACK_ROUTINE)($/;"	t
PDRIVER_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DRIVER_OBJECT *PDRIVER_OBJECT;$/;"	t	typeref:struct:_DRIVER_OBJECT
PDRIVER_REINITIALIZE	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PDRIVER_REINITIALIZE)( $/;"	t
PDRIVER_STARTIO	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PDRIVER_STARTIO)($/;"	t
PDRIVER_UNLOAD	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PDRIVER_UNLOAD)( $/;"	t
PDRIVER_VERIFIER_THUNK_PAIRS	.\SpinAPI\src\ddk_headers\winddk.h	/^} DRIVER_VERIFIER_THUNK_PAIRS, *PDRIVER_VERIFIER_THUNK_PAIRS;$/;"	t	typeref:struct:_DRIVER_VERIFIER_THUNK_PAIRS
PDRIVER_VERIFIER_THUNK_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PDRIVER_VERIFIER_THUNK_ROUTINE)($/;"	t
PDRIVE_LAYOUT_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DRIVE_LAYOUT_INFORMATION *PDRIVE_LAYOUT_INFORMATION;$/;"	t	typeref:struct:_DRIVE_LAYOUT_INFORMATION
PDRIVE_LAYOUT_INFORMATION_EX	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DRIVE_LAYOUT_INFORMATION_EX *PDRIVE_LAYOUT_INFORMATION_EX;$/;"	t	typeref:struct:_DRIVE_LAYOUT_INFORMATION_EX
PDRIVE_LAYOUT_INFORMATION_GPT	.\SpinAPI\src\ddk_headers\winddk.h	/^} DRIVE_LAYOUT_INFORMATION_GPT, *PDRIVE_LAYOUT_INFORMATION_GPT;$/;"	t	typeref:struct:_DRIVE_LAYOUT_INFORMATION_GPT
PDRIVE_LAYOUT_INFORMATION_MBR	.\SpinAPI\src\ddk_headers\winddk.h	/^} DRIVE_LAYOUT_INFORMATION_MBR, *PDRIVE_LAYOUT_INFORMATION_MBR;$/;"	t	typeref:struct:_DRIVE_LAYOUT_INFORMATION_MBR
PD_Capabilities	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  PD_Capabilities;$/;"	m	struct:CM_Power_Data_s
PD_D1Latency	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  PD_D1Latency;$/;"	m	struct:CM_Power_Data_s
PD_D2Latency	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  PD_D2Latency;$/;"	m	struct:CM_Power_Data_s
PD_D3Latency	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  PD_D3Latency;$/;"	m	struct:CM_Power_Data_s
PD_MostRecentPowerState	.\SpinAPI\src\ddk_headers\winddk.h	/^  DEVICE_POWER_STATE  PD_MostRecentPowerState;$/;"	m	struct:CM_Power_Data_s
PD_PowerStateMapping	.\SpinAPI\src\ddk_headers\winddk.h	/^  DEVICE_POWER_STATE  PD_PowerStateMapping[PowerSystemMaximum];$/;"	m	struct:CM_Power_Data_s
PD_Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  PD_Size;$/;"	m	struct:CM_Power_Data_s
PEISA_DMA_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_DMA_CONFIGURATION, *PEISA_DMA_CONFIGURATION;$/;"	t	typeref:struct:_EISA_DMA_CONFIGURATION
PEISA_IRQ_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_IRQ_CONFIGURATION, *PEISA_IRQ_CONFIGURATION;$/;"	t	typeref:struct:_EISA_IRQ_CONFIGURATION
PEISA_IRQ_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_IRQ_DESCRIPTOR, *PEISA_IRQ_DESCRIPTOR;$/;"	t	typeref:struct:_EISA_IRQ_DESCRIPTOR
PEISA_MEMORY_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_MEMORY_CONFIGURATION, *PEISA_MEMORY_CONFIGURATION;$/;"	t	typeref:struct:_EISA_MEMORY_CONFIGURATION
PEISA_MEMORY_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_MEMORY_TYPE, *PEISA_MEMORY_TYPE;$/;"	t	typeref:struct:_EISA_MEMORY_TYPE
PEISA_PORT_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_PORT_CONFIGURATION, *PEISA_PORT_CONFIGURATION;$/;"	t	typeref:struct:_EISA_PORT_CONFIGURATION
PEISA_PORT_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} EISA_PORT_DESCRIPTOR, *PEISA_PORT_DESCRIPTOR;$/;"	t	typeref:struct:_EISA_PORT_DESCRIPTOR
PEPROCESS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _EPROCESS *PEPROCESS;$/;"	t	typeref:struct:_EPROCESS
PERESOURCE	.\SpinAPI\src\ddk_headers\winddk.h	/^} ERESOURCE, *PERESOURCE;$/;"	t	typeref:struct:_ERESOURCE
PERESOURCE_THREAD	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ERESOURCE_THREAD *PERESOURCE_THREAD;$/;"	t
PETHREAD	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _ETHREAD *PETHREAD;$/;"	t	typeref:struct:_ETHREAD
PEX_CALLBACK_FUNCTION	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PEX_CALLBACK_FUNCTION)($/;"	t
PFAST_IO_ACQUIRE_FILE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_ACQUIRE_FILE)($/;"	t
PFAST_IO_ACQUIRE_FOR_CCFLUSH	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_ACQUIRE_FOR_CCFLUSH)($/;"	t
PFAST_IO_ACQUIRE_FOR_MOD_WRITE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_ACQUIRE_FOR_MOD_WRITE)($/;"	t
PFAST_IO_CHECK_IF_POSSIBLE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_CHECK_IF_POSSIBLE)($/;"	t
PFAST_IO_DETACH_DEVICE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_DETACH_DEVICE)($/;"	t
PFAST_IO_DEVICE_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_DEVICE_CONTROL)($/;"	t
PFAST_IO_DISPATCH	.\SpinAPI\src\ddk_headers\winddk.h	/^} FAST_IO_DISPATCH, *PFAST_IO_DISPATCH;$/;"	t	typeref:struct:_FAST_IO_DISPATCH
PFAST_IO_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_LOCK)($/;"	t
PFAST_IO_MDL_READ	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_MDL_READ)($/;"	t
PFAST_IO_MDL_READ_COMPLETE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_MDL_READ_COMPLETE)($/;"	t
PFAST_IO_MDL_READ_COMPLETE_COMPRESSED	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_MDL_READ_COMPLETE_COMPRESSED)($/;"	t
PFAST_IO_MDL_WRITE_COMPLETE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_MDL_WRITE_COMPLETE)($/;"	t
PFAST_IO_MDL_WRITE_COMPLETE_COMPRESSED	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_MDL_WRITE_COMPLETE_COMPRESSED)($/;"	t
PFAST_IO_PREPARE_MDL_WRITE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_PREPARE_MDL_WRITE)($/;"	t
PFAST_IO_QUERY_BASIC_INFO	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_QUERY_BASIC_INFO)($/;"	t
PFAST_IO_QUERY_NETWORK_OPEN_INFO	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_QUERY_NETWORK_OPEN_INFO)($/;"	t
PFAST_IO_QUERY_OPEN	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_QUERY_OPEN)($/;"	t
PFAST_IO_QUERY_STANDARD_INFO	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_QUERY_STANDARD_INFO)($/;"	t
PFAST_IO_READ	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_READ)($/;"	t
PFAST_IO_READ_COMPRESSED	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_READ_COMPRESSED)($/;"	t
PFAST_IO_RELEASE_FILE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_RELEASE_FILE)($/;"	t
PFAST_IO_RELEASE_FOR_CCFLUSH	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_RELEASE_FOR_CCFLUSH) ($/;"	t
PFAST_IO_RELEASE_FOR_MOD_WRITE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_RELEASE_FOR_MOD_WRITE)($/;"	t
PFAST_IO_UNLOCK_ALL	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_UNLOCK_ALL)($/;"	t
PFAST_IO_UNLOCK_ALL_BY_KEY	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_UNLOCK_ALL_BY_KEY)($/;"	t
PFAST_IO_UNLOCK_SINGLE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_UNLOCK_SINGLE)($/;"	t
PFAST_IO_WRITE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_WRITE)($/;"	t
PFAST_IO_WRITE_COMPRESSED	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFAST_IO_WRITE_COMPRESSED)($/;"	t
PFAST_MUTEX	.\SpinAPI\src\ddk_headers\winddk.h	/^} FAST_MUTEX, *PFAST_MUTEX;$/;"	t	typeref:struct:_FAST_MUTEX
PFILE_ATTRIBUTE_TAG_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION;$/;"	t	typeref:struct:_FILE_ATTRIBUTE_TAG_INFORMATION
PFILE_BASIC_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION;$/;"	t	typeref:struct:_FILE_BASIC_INFORMATION
PFILE_DISPOSITION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION; $/;"	t	typeref:struct:_FILE_DISPOSITION_INFORMATION
PFILE_END_OF_FILE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION; $/;"	t	typeref:struct:_FILE_END_OF_FILE_INFORMATION
PFILE_FS_DEVICE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION;$/;"	t	typeref:struct:_FILE_FS_DEVICE_INFORMATION
PFILE_FULL_EA_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_FULL_EA_INFORMATION, *PFILE_FULL_EA_INFORMATION;$/;"	t	typeref:struct:_FILE_FULL_EA_INFORMATION
PFILE_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;$/;"	t	typeref:enum:_FILE_INFORMATION_CLASS
PFILE_NAME_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION;           $/;"	t	typeref:struct:_FILE_NAME_INFORMATION
PFILE_NETWORK_OPEN_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION;   $/;"	t	typeref:struct:_FILE_NETWORK_OPEN_INFORMATION
PFILE_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_OBJECT *PFILE_OBJECT;$/;"	t	typeref:struct:_FILE_OBJECT
PFILE_POSITION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION;   $/;"	t	typeref:struct:_FILE_POSITION_INFORMATION
PFILE_STANDARD_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION;$/;"	t	typeref:struct:_FILE_STANDARD_INFORMATION
PFILE_VALID_DATA_LENGTH_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION;             $/;"	t	typeref:struct:_FILE_VALID_DATA_LENGTH_INFORMATION
PFLUSH_ADAPTER_BUFFERS	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFLUSH_ADAPTER_BUFFERS)($/;"	t
PFN_NUMBER	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG PFN_NUMBER, *PPFN_NUMBER;$/;"	t
PFREE_ADAPTER_CHANNEL	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFREE_ADAPTER_CHANNEL)($/;"	t
PFREE_COMMON_BUFFER	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFREE_COMMON_BUFFER)($/;"	t
PFREE_FUNCTION	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFREE_FUNCTION)($/;"	t
PFREE_MAP_REGISTERS	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PFREE_MAP_REGISTERS)($/;"	t
PFS_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^} FS_INFORMATION_CLASS, *PFS_INFORMATION_CLASS;$/;"	t	typeref:enum:_FSINFOCLASS
PFT_EEPROM_2232	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_2232, *PFT_EEPROM_2232;$/;"	t	typeref:struct:ft_eeprom_2232
PFT_EEPROM_2232H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_2232H, *PFT_EEPROM_2232H;$/;"	t	typeref:struct:ft_eeprom_2232h
PFT_EEPROM_232B	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_232B, *PFT_EEPROM_232B;$/;"	t	typeref:struct:ft_eeprom_232b
PFT_EEPROM_232H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_232H, *PFT_EEPROM_232H;$/;"	t	typeref:struct:ft_eeprom_232h
PFT_EEPROM_232R	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_232R, *PFT_EEPROM_232R;$/;"	t	typeref:struct:ft_eeprom_232r
PFT_EEPROM_4232H	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_4232H, *PFT_EEPROM_4232H;$/;"	t	typeref:struct:ft_eeprom_4232h
PFT_EEPROM_HEADER	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_HEADER, *PFT_EEPROM_HEADER;$/;"	t	typeref:struct:ft_eeprom_header
PFT_EEPROM_X_SERIES	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_EEPROM_X_SERIES, *PFT_EEPROM_X_SERIES;$/;"	t	typeref:struct:ft_eeprom_x_series
PFT_EVENT_HANDLER	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^typedef void (*PFT_EVENT_HANDLER)(DWORD,DWORD);$/;"	t
PFT_PROGRAM_DATA	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	} FT_PROGRAM_DATA, *PFT_PROGRAM_DATA;$/;"	t	typeref:struct:ft_program_data
PGENERAL_LOOKASIDE	.\SpinAPI\src\ddk_headers\winddk.h	/^} GENERAL_LOOKASIDE, *PGENERAL_LOOKASIDE;$/;"	t	typeref:struct:_GENERAL_LOOKASIDE
PGET_DMA_ADAPTER	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PGET_DMA_ADAPTER)($/;"	t	typeref:struct:PGET_DMA_ADAPTER
PGET_DMA_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PGET_DMA_ALIGNMENT)($/;"	t
PGET_SCATTER_GATHER_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PGET_SCATTER_GATHER_LIST)($/;"	t
PGET_SET_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PGET_SET_DEVICE_DATA)($/;"	t
PH0	.\SpinAPI\src\fid.h	10;"	d
PH1	.\SpinAPI\src\fid.h	11;"	d
PHAL_DISPATCH_TABLE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _HAL_DISPATCH_TABLE *PHAL_DISPATCH_TABLE;$/;"	t	typeref:struct:_HAL_DISPATCH_TABLE
PHAL_PRIVATE_DISPATCH_TABLE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _HAL_PRIVATE_DISPATCH_TABLE *PHAL_PRIVATE_DISPATCH_TABLE;$/;"	t	typeref:struct:_HAL_PRIVATE_DISPATCH_TABLE
PHASE0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	56;"	d	file:
PHASE0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	49;"	d	file:
PHASE0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	47;"	d	file:
PHASE0	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	53;"	d	file:
PHASE000	.\Sleator_apps\CPMG\cpmg.h	46;"	d
PHASE000	.\Sleator_apps\Hahn_echo\Hahn_echo.h	54;"	d
PHASE000	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	51;"	d
PHASE000	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	54;"	d
PHASE000	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	51;"	d
PHASE000	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	39;"	d
PHASE000	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	42;"	d
PHASE090	.\Sleator_apps\CPMG\cpmg.h	47;"	d
PHASE090	.\Sleator_apps\Hahn_echo\Hahn_echo.h	55;"	d
PHASE090	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	52;"	d
PHASE090	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	55;"	d
PHASE090	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	52;"	d
PHASE090	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	40;"	d
PHASE090	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	43;"	d
PHASE1	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	50;"	d	file:
PHASE1	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	48;"	d	file:
PHASE1	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	54;"	d	file:
PHASE180	.\Sleator_apps\CPMG\cpmg.h	48;"	d
PHASE180	.\Sleator_apps\Hahn_echo\Hahn_echo.h	56;"	d
PHASE180	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	53;"	d
PHASE180	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	56;"	d
PHASE180	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	53;"	d
PHASE180	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	41;"	d
PHASE180	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	44;"	d
PHASE2	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	51;"	d	file:
PHASE2	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	49;"	d	file:
PHASE2	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	55;"	d	file:
PHASE270	.\Sleator_apps\CPMG\cpmg.h	49;"	d
PHASE270	.\Sleator_apps\Hahn_echo\Hahn_echo.h	57;"	d
PHASE270	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	54;"	d
PHASE270	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	57;"	d
PHASE270	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	54;"	d
PHASE270	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	42;"	d
PHASE270	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	45;"	d
PHASE_DAC	.\mrispinapi.h	107;"	d
PHASE_INVALID	.\SpinAPI\include\spinpts.h	24;"	d
PHASE_INVALID	.\SpinAPI\src\spinpts.h	24;"	d
PHASE_REGS	.\SpinAPI\include\radioprocessor.h	12;"	d
PHASE_REGS	.\SpinAPI\src\radioprocessor.h	12;"	d
PHASE_REGS_0	.\SpinAPI\include\radioprocessor.h	17;"	d
PHASE_REGS_0	.\SpinAPI\src\radioprocessor.h	17;"	d
PHASE_REGS_1	.\SpinAPI\include\radioprocessor.h	14;"	d
PHASE_REGS_1	.\SpinAPI\src\radioprocessor.h	14;"	d
PHASE_RESET	.\Sleator_apps\CPMG\cpmg.h	54;"	d
PHASE_RESET	.\Sleator_apps\Hahn_echo\Hahn_echo.h	62;"	d
PHASE_RESET	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	59;"	d
PHASE_RESET	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	62;"	d
PHASE_RESET	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	59;"	d
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	45;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	42;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	40;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	43;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	38;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	40;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	33;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	35;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_cont.c	38;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_excite_test.c	39;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	39;"	d	file:
PHASE_RESET	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_phase_test.c	38;"	d	file:
PHASE_RESET	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	47;"	d
PHASE_RESET	.\SpinAPI\examples\RadioProcessor\awg.c	39;"	d	file:
PHASE_RESET	.\SpinAPI\examples\RadioProcessor\excite_test.c	39;"	d	file:
PHASE_RESET	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	50;"	d
PHASE_RESET	.\SpinAPI\include\dds.h	10;"	d
PHASE_RESET	.\SpinAPI\src\dds.h	10;"	d
PHWPROFILE_CHANGE_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} HWPROFILE_CHANGE_NOTIFICATION, *PHWPROFILE_CHANGE_NOTIFICATION;$/;"	t	typeref:struct:_HWPROFILE_CHANGE_NOTIFICATION
PHYSICAL_MEMORY_RANGE	.\SpinAPI\src\ddk_headers\winddk.h	/^} PHYSICAL_MEMORY_RANGE, *PPHYSICAL_MEMORY_RANGE;$/;"	t	typeref:struct:_PHYSICAL_MEMORY_RANGE
PIMAGE_INFO	.\SpinAPI\src\ddk_headers\winddk.h	/^} IMAGE_INFO, *PIMAGE_INFO;$/;"	t	typeref:struct:_IMAGE_INFO
PINITIAL_PRIVILEGE_SET	.\SpinAPI\src\ddk_headers\winddk.h	/^} INITIAL_PRIVILEGE_SET, * PINITIAL_PRIVILEGE_SET;$/;"	t	typeref:struct:_INITIAL_PRIVILEGE_SET
PINTERFACE	.\SpinAPI\src\ddk_headers\winddk.h	/^} INTERFACE, *PINTERFACE; $/;"	t	typeref:struct:_INTERFACE
PINTERFACE_DEREFERENCE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PINTERFACE_DEREFERENCE)($/;"	t
PINTERFACE_REFERENCE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PINTERFACE_REFERENCE)($/;"	t
PINTERFACE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} INTERFACE_TYPE, *PINTERFACE_TYPE;$/;"	t	typeref:enum:_INTERFACE_TYPE
PIO_ALLOCATION_ACTION	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_ALLOCATION_ACTION, *PIO_ALLOCATION_ACTION;$/;"	t	typeref:enum:_IO_ALLOCATION_ACTION
PIO_APC_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PIO_APC_ROUTINE)($/;"	t
PIO_COMPLETION_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_COMPLETION_CONTEXT, *PIO_COMPLETION_CONTEXT;$/;"	t	typeref:struct:_IO_COMPLETION_CONTEXT
PIO_COMPLETION_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PIO_COMPLETION_ROUTINE)($/;"	t
PIO_CSQ	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_CSQ, *PIO_CSQ;$/;"	t	typeref:struct:_IO_CSQ
PIO_CSQ_ACQUIRE_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PIO_CSQ_ACQUIRE_LOCK)($/;"	t
PIO_CSQ_COMPLETE_CANCELED_IRP	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PIO_CSQ_COMPLETE_CANCELED_IRP)($/;"	t
PIO_CSQ_INSERT_IRP	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PIO_CSQ_INSERT_IRP)($/;"	t
PIO_CSQ_IRP_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_CSQ_IRP_CONTEXT, *PIO_CSQ_IRP_CONTEXT;$/;"	t	typeref:struct:_IO_CSQ_IRP_CONTEXT
PIO_CSQ_PEEK_NEXT_IRP	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PIO_CSQ_PEEK_NEXT_IRP)($/;"	t
PIO_CSQ_RELEASE_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PIO_CSQ_RELEASE_LOCK)($/;"	t
PIO_CSQ_REMOVE_IRP	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PIO_CSQ_REMOVE_IRP)($/;"	t
PIO_DPC_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PIO_DPC_ROUTINE)($/;"	t
PIO_ERROR_LOG_PACKET	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_ERROR_LOG_PACKET, *PIO_ERROR_LOG_PACKET; $/;"	t	typeref:struct:_IO_ERROR_LOG_PACKET
PIO_QUERY_DEVICE_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef NTSTATUS (*PIO_QUERY_DEVICE_ROUTINE)($/;"	t
PIO_REMOVE_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_REMOVE_LOCK, *PIO_REMOVE_LOCK;$/;"	t	typeref:struct:_IO_REMOVE_LOCK
PIO_REMOVE_LOCK_TRACKING_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_REMOVE_LOCK_TRACKING_BLOCK * PIO_REMOVE_LOCK_TRACKING_BLOCK;$/;"	t	typeref:struct:_IO_REMOVE_LOCK_TRACKING_BLOCK
PIO_RESOURCE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_RESOURCE_DESCRIPTOR, *PIO_RESOURCE_DESCRIPTOR;$/;"	t	typeref:struct:_IO_RESOURCE_DESCRIPTOR
PIO_RESOURCE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_RESOURCE_LIST, *PIO_RESOURCE_LIST;$/;"	t	typeref:struct:_IO_RESOURCE_LIST
PIO_RESOURCE_REQUIREMENTS_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_RESOURCE_REQUIREMENTS_LIST, *PIO_RESOURCE_REQUIREMENTS_LIST;$/;"	t	typeref:struct:_IO_RESOURCE_REQUIREMENTS_LIST
PIO_SECURITY_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_SECURITY_CONTEXT, *PIO_SECURITY_CONTEXT;$/;"	t	typeref:struct:_IO_SECURITY_CONTEXT
PIO_STACK_LOCATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} IO_STACK_LOCATION, *PIO_STACK_LOCATION;$/;"	t	typeref:struct:_IO_STACK_LOCATION
PIO_TIMER	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_TIMER *PIO_TIMER;$/;"	t	typeref:struct:_IO_TIMER
PIO_TIMER_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PIO_TIMER_ROUTINE)($/;"	t
PIO_WORKITEM	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_WORKITEM *PIO_WORKITEM;$/;"	t	typeref:struct:_IO_WORKITEM
PIO_WORKITEM_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PIO_WORKITEM_ROUTINE)($/;"	t
PIRP	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IRP *PIRP;$/;"	t	typeref:struct:_IRP
PISO_ADV_PARAMS	.\SpinAPI\src\cyioctl.h	/^} ISO_ADV_PARAMS, *PISO_ADV_PARAMS;$/;"	t	typeref:struct:_ISO_ADV_PARAMS
PISO_PACKET_INFO	.\SpinAPI\src\cyioctl.h	/^} ISO_PACKET_INFO, *PISO_PACKET_INFO;$/;"	t	typeref:struct:_ISO_PACKET_INFO
PIXELCOLOR	.\bitmap.h	/^} PIXELCOLOR;$/;"	t	typeref:struct:tagPIXELCOLOR
PKAFFINITY	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG KAFFINITY, *PKAFFINITY;$/;"	t
PKAPC	.\SpinAPI\src\ddk_headers\winddk.h	/^} KAPC, *PKAPC, *RESTRICTED_POINTER PRKAPC;$/;"	t	typeref:struct:_KAPC
PKBUGCHECK_CALLBACK_RECORD	.\SpinAPI\src\ddk_headers\winddk.h	/^} KBUGCHECK_CALLBACK_RECORD, *PKBUGCHECK_CALLBACK_RECORD;$/;"	t	typeref:struct:_KBUGCHECK_CALLBACK_RECORD
PKBUGCHECK_CALLBACK_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PKBUGCHECK_CALLBACK_ROUTINE)($/;"	t
PKDEFERRED_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PKDEFERRED_ROUTINE)($/;"	t
PKDEVICE_QUEUE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KDEVICE_QUEUE, *PKDEVICE_QUEUE, *RESTRICTED_POINTER PRKDEVICE_QUEUE;$/;"	t	typeref:struct:_KDEVICE_QUEUE
PKDEVICE_QUEUE_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^} KDEVICE_QUEUE_ENTRY, *PKDEVICE_QUEUE_ENTRY,$/;"	t	typeref:struct:_KDEVICE_QUEUE_ENTRY
PKDPC	.\SpinAPI\src\ddk_headers\winddk.h	/^} KDPC, *PKDPC, *RESTRICTED_POINTER PRKDPC;$/;"	t	typeref:struct:_KDPC
PKEVENT	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEVENT, *PKEVENT, *RESTRICTED_POINTER PRKEVENT;$/;"	t	typeref:struct:_KEVENT
PKEY_BASIC_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_BASIC_INFORMATION, *PKEY_BASIC_INFORMATION;$/;"	t	typeref:struct:_KEY_BASIC_INFORMATION
PKEY_FULL_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_FULL_INFORMATION, *PKEY_FULL_INFORMATION;$/;"	t	typeref:struct:_KEY_FULL_INFORMATION
PKEY_NODE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_NODE_INFORMATION, *PKEY_NODE_INFORMATION;$/;"	t	typeref:struct:_KEY_NODE_INFORMATION
PKEY_VALUE_BASIC_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_BASIC_INFORMATION, *PKEY_VALUE_BASIC_INFORMATION;$/;"	t	typeref:struct:_KEY_VALUE_BASIC_INFORMATION
PKEY_VALUE_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_ENTRY, *PKEY_VALUE_ENTRY;$/;"	t	typeref:struct:_KEY_VALUE_ENTRY
PKEY_VALUE_FULL_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION;$/;"	t	typeref:struct:_KEY_VALUE_FULL_INFORMATION
PKEY_VALUE_PARTIAL_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION;$/;"	t	typeref:struct:_KEY_VALUE_PARTIAL_INFORMATION
PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEY_VALUE_PARTIAL_INFORMATION_ALIGN64, *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64;$/;"	t	typeref:struct:_KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
PKFLOATING_SAVE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KFLOATING_SAVE, *PKFLOATING_SAVE;$/;"	t	typeref:struct:_KFLOATING_SAVE
PKINTERRUPT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KINTERRUPT *PKINTERRUPT;$/;"	t	typeref:struct:_KINTERRUPT
PKINTERRUPT_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PKINTERRUPT_ROUTINE)($/;"	t
PKIRQL	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef UCHAR KIRQL, *PKIRQL;$/;"	t
PKKERNEL_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PKKERNEL_ROUTINE)($/;"	t
PKLOCK_QUEUE_HANDLE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KLOCK_QUEUE_HANDLE, *PKLOCK_QUEUE_HANDLE;$/;"	t	typeref:struct:_KLOCK_QUEUE_HANDLE
PKMUTANT	.\SpinAPI\src\ddk_headers\winddk.h	/^} KMUTANT, *PKMUTANT, *RESTRICTED_POINTER PRKMUTANT, KMUTEX, *PKMUTEX, *RESTRICTED_POINTER PRKMUTEX;$/;"	t	typeref:struct:_KMUTANT
PKMUTEX	.\SpinAPI\src\ddk_headers\winddk.h	/^} KMUTANT, *PKMUTANT, *RESTRICTED_POINTER PRKMUTANT, KMUTEX, *PKMUTEX, *RESTRICTED_POINTER PRKMUTEX;$/;"	t	typeref:struct:_KMUTANT
PKNORMAL_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PKNORMAL_ROUTINE)($/;"	t
PKPCR	.\SpinAPI\src\ddk_headers\winddk.h	/^} KPCR, *PKPCR;                 \/* 54 *\/$/;"	t	typeref:struct:_KPCR
PKPCR_TIB	.\SpinAPI\src\ddk_headers\winddk.h	/^} KPCR_TIB, *PKPCR_TIB;         \/* 1C *\/$/;"	t	typeref:struct:_KPCR_TIB
PKRUNDOWN_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PKRUNDOWN_ROUTINE)($/;"	t
PKSEMAPHORE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KSEMAPHORE, *PKSEMAPHORE, *RESTRICTED_POINTER PRKSEMAPHORE;$/;"	t	typeref:struct:_KSEMAPHORE
PKSERVICE_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PKSERVICE_ROUTINE)($/;"	t
PKSPIN_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG_PTR KSPIN_LOCK, *PKSPIN_LOCK;$/;"	t
PKSPIN_LOCK_QUEUE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KSPIN_LOCK_QUEUE, *PKSPIN_LOCK_QUEUE;$/;"	t	typeref:struct:_KSPIN_LOCK_QUEUE
PKSPIN_LOCK_QUEUE_NUMBER	.\SpinAPI\src\ddk_headers\winddk.h	/^} KSPIN_LOCK_QUEUE_NUMBER, *PKSPIN_LOCK_QUEUE_NUMBER;$/;"	t	typeref:enum:_KSPIN_LOCK_QUEUE_NUMBER
PKSTART_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PKSTART_ROUTINE)($/;"	t
PKSYNCHRONIZE_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PKSYNCHRONIZE_ROUTINE)($/;"	t
PKTHREAD	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KTHREAD *PKTHREAD, *PRKTHREAD;$/;"	t	typeref:struct:_KTHREAD
PKTIMER	.\SpinAPI\src\ddk_headers\winddk.h	/^} KTIMER, *PKTIMER, *RESTRICTED_POINTER PRKTIMER;$/;"	t	typeref:struct:_KTIMER
PKTRANSFER_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PKTRANSFER_ROUTINE)($/;"	t
PKWAIT_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^} KWAIT_BLOCK, *PKWAIT_BLOCK, *RESTRICTED_POINTER PRKWAIT_BLOCK;$/;"	t	typeref:struct:_KWAIT_BLOCK
PLOAD_IMAGE_NOTIFY_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PLOAD_IMAGE_NOTIFY_ROUTINE)($/;"	t
PLUGPLAY_NOTIFICATION_HEADER	.\SpinAPI\src\ddk_headers\winddk.h	/^} PLUGPLAY_NOTIFICATION_HEADER, *PPLUGPLAY_NOTIFICATION_HEADER;$/;"	t	typeref:struct:_PLUGPLAY_NOTIFICATION_HEADER
PMAP_TRANSFER	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PMAP_TRANSFER)($/;"	t
PMDL	.\SpinAPI\src\ddk_headers\winddk.h	/^} MDL, *PMDL;$/;"	t	typeref:struct:_MDL
PMM_DLL_INITIALIZE	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PMM_DLL_INITIALIZE)($/;"	t
PMM_DLL_UNLOAD	.\SpinAPI\src\ddk_headers\winddk.h	/^(DDKAPI *PMM_DLL_UNLOAD)($/;"	t
PNPAGED_LOOKASIDE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} NPAGED_LOOKASIDE_LIST, *PNPAGED_LOOKASIDE_LIST;$/;"	t	typeref:struct:_NPAGED_LOOKASIDE_LIST
PNPBus	.\SpinAPI\src\ddk_headers\winddk.h	/^  PNPBus,$/;"	e	enum:_INTERFACE_TYPE
PNPISABus	.\SpinAPI\src\ddk_headers\winddk.h	/^  PNPISABus,$/;"	e	enum:_INTERFACE_TYPE
PNPISAConfiguration	.\SpinAPI\src\ddk_headers\win2k.h	/^  PNPISAConfiguration,$/;"	e	enum:_BUS_DATA_TYPE
PNPNOTIFY_DEVICE_INTERFACE_INCLUDE_EXISTING_INTERFACES	.\SpinAPI\src\ddk_headers\winddk.h	728;"	d
PNP_BUS_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} PNP_BUS_INFORMATION, *PPNP_BUS_INFORMATION;$/;"	t	typeref:struct:_PNP_BUS_INFORMATION
PNP_DEVICE_DISABLED	.\SpinAPI\src\ddk_headers\winddk.h	649;"	d
PNP_DEVICE_DONT_DISPLAY_IN_UI	.\SpinAPI\src\ddk_headers\winddk.h	650;"	d
PNP_DEVICE_FAILED	.\SpinAPI\src\ddk_headers\winddk.h	651;"	d
PNP_DEVICE_NOT_DISABLEABLE	.\SpinAPI\src\ddk_headers\winddk.h	654;"	d
PNP_DEVICE_REMOVED	.\SpinAPI\src\ddk_headers\winddk.h	652;"	d
PNP_DEVICE_RESOURCE_REQUIREMENTS_CHANGED	.\SpinAPI\src\ddk_headers\winddk.h	653;"	d
PNP_DEVICE_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG PNP_DEVICE_STATE, *PPNP_DEVICE_STATE;$/;"	t
POBJECT_HANDLE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} OBJECT_HANDLE_INFORMATION, *POBJECT_HANDLE_INFORMATION;$/;"	t	typeref:struct:_OBJECT_HANDLE_INFORMATION
POBJECT_NAME_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION;   $/;"	t	typeref:struct:_OBJECT_NAME_INFORMATION
POBJECT_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _OBJECT_TYPE *POBJECT_TYPE;$/;"	t	typeref:struct:_OBJECT_TYPE
POINTER_ALIGNMENT	.\SpinAPI\src\ddk_headers\winddk.h	65;"	d
POOL_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} POOL_TYPE;$/;"	t	typeref:enum:_POOL_TYPE
POWER_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3718;"	d
POWER_SEQUENCE	.\SpinAPI\src\ddk_headers\winddk.h	/^} POWER_SEQUENCE, *PPOWER_SEQUENCE;$/;"	t	typeref:struct:_POWER_SEQUENCE
POWER_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^} POWER_STATE, *PPOWER_STATE;$/;"	t	typeref:union:_POWER_STATE
POWER_STATE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} POWER_STATE_TYPE, *PPOWER_STATE_TYPE;$/;"	t	typeref:enum:_POWER_STATE_TYPE
POWNER_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^} OWNER_ENTRY, *POWNER_ENTRY;$/;"	t	typeref:struct:_OWNER_ENTRY
PPAGED_LOOKASIDE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} PAGED_LOOKASIDE_LIST, *PPAGED_LOOKASIDE_LIST;$/;"	t	typeref:struct:_PAGED_LOOKASIDE_LIST
PPARTITION_INFORMATION_MBR	.\SpinAPI\src\ddk_headers\winddk.h	/^} PARTITION_INFORMATION_MBR, *PPARTITION_INFORMATION_MBR;$/;"	t	typeref:struct:_PARTITION_INFORMATION_MBR
PPCI_COMMON_CONFIG	.\SpinAPI\src\ddk_headers\winddk.h	/^} PCI_COMMON_CONFIG, *PPCI_COMMON_CONFIG;$/;"	t	typeref:struct:_PCI_COMMON_CONFIG
PPCI_SLOT_NUMBER	.\SpinAPI\src\ddk_headers\winddk.h	/^} PCI_SLOT_NUMBER, *PPCI_SLOT_NUMBER;$/;"	t	typeref:struct:_PCI_SLOT_NUMBER
PPFN_NUMBER	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG PFN_NUMBER, *PPFN_NUMBER;$/;"	t
PPHYSICAL_MEMORY_RANGE	.\SpinAPI\src\ddk_headers\winddk.h	/^} PHYSICAL_MEMORY_RANGE, *PPHYSICAL_MEMORY_RANGE;$/;"	t	typeref:struct:_PHYSICAL_MEMORY_RANGE
PPLUGPLAY_NOTIFICATION_HEADER	.\SpinAPI\src\ddk_headers\winddk.h	/^} PLUGPLAY_NOTIFICATION_HEADER, *PPLUGPLAY_NOTIFICATION_HEADER;$/;"	t	typeref:struct:_PLUGPLAY_NOTIFICATION_HEADER
PPNP_BUS_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} PNP_BUS_INFORMATION, *PPNP_BUS_INFORMATION;$/;"	t	typeref:struct:_PNP_BUS_INFORMATION
PPNP_DEVICE_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG PNP_DEVICE_STATE, *PPNP_DEVICE_STATE;$/;"	t
PPOWER_SEQUENCE	.\SpinAPI\src\ddk_headers\winddk.h	/^} POWER_SEQUENCE, *PPOWER_SEQUENCE;$/;"	t	typeref:struct:_POWER_SEQUENCE
PPOWER_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^} POWER_STATE, *PPOWER_STATE;$/;"	t	typeref:union:_POWER_STATE
PPOWER_STATE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} POWER_STATE_TYPE, *PPOWER_STATE_TYPE;$/;"	t	typeref:enum:_POWER_STATE_TYPE
PPUT_DMA_ADAPTER	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PPUT_DMA_ADAPTER)($/;"	t
PPUT_SCATTER_GATHER_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PPUT_SCATTER_GATHER_LIST)($/;"	t
PREAD_DMA_COUNTER	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PREAD_DMA_COUNTER)($/;"	t
PREQUEST_POWER_COMPLETE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PREQUEST_POWER_COMPLETE)($/;"	t
PRIVILEGE_SET_ALL_NECESSARY	.\SpinAPI\src\ddk_headers\winddk.h	2941;"	d
PRKAPC	.\SpinAPI\src\ddk_headers\winddk.h	/^} KAPC, *PKAPC, *RESTRICTED_POINTER PRKAPC;$/;"	t	typeref:struct:_KAPC
PRKDEVICE_QUEUE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KDEVICE_QUEUE, *PKDEVICE_QUEUE, *RESTRICTED_POINTER PRKDEVICE_QUEUE;$/;"	t	typeref:struct:_KDEVICE_QUEUE
PRKDEVICE_QUEUE_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^*RESTRICTED_POINTER PRKDEVICE_QUEUE_ENTRY;$/;"	t	typeref:struct:_KDEVICE_QUEUE_ENTRY
PRKDPC	.\SpinAPI\src\ddk_headers\winddk.h	/^} KDPC, *PKDPC, *RESTRICTED_POINTER PRKDPC;$/;"	t	typeref:struct:_KDPC
PRKEVENT	.\SpinAPI\src\ddk_headers\winddk.h	/^} KEVENT, *PKEVENT, *RESTRICTED_POINTER PRKEVENT;$/;"	t	typeref:struct:_KEVENT
PRKMUTANT	.\SpinAPI\src\ddk_headers\winddk.h	/^} KMUTANT, *PKMUTANT, *RESTRICTED_POINTER PRKMUTANT, KMUTEX, *PKMUTEX, *RESTRICTED_POINTER PRKMUTEX;$/;"	t	typeref:struct:_KMUTANT
PRKMUTEX	.\SpinAPI\src\ddk_headers\winddk.h	/^} KMUTANT, *PKMUTANT, *RESTRICTED_POINTER PRKMUTANT, KMUTEX, *PKMUTEX, *RESTRICTED_POINTER PRKMUTEX;$/;"	t	typeref:struct:_KMUTANT
PRKSEMAPHORE	.\SpinAPI\src\ddk_headers\winddk.h	/^} KSEMAPHORE, *PKSEMAPHORE, *RESTRICTED_POINTER PRKSEMAPHORE;$/;"	t	typeref:struct:_KSEMAPHORE
PRKTHREAD	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KTHREAD *PKTHREAD, *PRKTHREAD;$/;"	t	typeref:struct:
PRKTIMER	.\SpinAPI\src\ddk_headers\winddk.h	/^} KTIMER, *PKTIMER, *RESTRICTED_POINTER PRKTIMER;$/;"	t	typeref:struct:_KTIMER
PRKWAIT_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^} KWAIT_BLOCK, *PKWAIT_BLOCK, *RESTRICTED_POINTER PRKWAIT_BLOCK;$/;"	t	typeref:struct:_KWAIT_BLOCK
PROCESSINFOCLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^} PROCESSINFOCLASS;$/;"	t	typeref:enum:_PROCESSINFOCLASS
PROFILE_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3714;"	d
PROGRAMMING_FAILED	.\Sleator_apps\CPMG\cpmg.h	67;"	d
PROGRAMMING_FAILED	.\Sleator_apps\Hahn_echo\Hahn_echo.h	74;"	d
PROGRAMMING_FAILED	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	71;"	d
PROGRAMMING_FAILED	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	74;"	d
PROGRAMMING_FAILED	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	71;"	d
PROGRAMMING_FAILED	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	64;"	d
PROGRAMMING_FAILED	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	63;"	d
PROTECTED_POOL	.\SpinAPI\src\ddk_headers\winddk.h	5281;"	d
PRTL_BITMAP	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_BITMAP, *PRTL_BITMAP;$/;"	t	typeref:struct:_RTL_BITMAP
PRTL_BITMAP_RUN	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_BITMAP_RUN, *PRTL_BITMAP_RUN;$/;"	t	typeref:struct:_RTL_BITMAP_RUN
PRTL_CONFLICT_RANGE_CALLBACK	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PRTL_CONFLICT_RANGE_CALLBACK)($/;"	t
PRTL_OSVERSIONINFOEXW	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_OSVERSIONINFOEXW, *PRTL_OSVERSIONINFOEXW;$/;"	t	typeref:struct:_RTL_OSVERSIONINFOEXW
PRTL_OSVERSIONINFOW	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_OSVERSIONINFOW, *PRTL_OSVERSIONINFOW;$/;"	t	typeref:struct:_RTL_OSVERSIONINFOW
PRTL_QUERY_REGISTRY_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PRTL_QUERY_REGISTRY_ROUTINE)($/;"	t
PRTL_QUERY_REGISTRY_TABLE	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_QUERY_REGISTRY_TABLE, *PRTL_QUERY_REGISTRY_TABLE;$/;"	t	typeref:struct:_RTL_QUERY_REGISTRY_TABLE
PRTL_RANGE	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_RANGE, *PRTL_RANGE;$/;"	t	typeref:struct:_RTL_RANGE
PRTL_RANGE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_RANGE_LIST, *PRTL_RANGE_LIST;$/;"	t	typeref:struct:_RTL_RANGE_LIST
PRTL_RANGE_LIST_ITERATOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_RANGE_LIST_ITERATOR, *PRTL_RANGE_LIST_ITERATOR;$/;"	t	typeref:struct:_RANGE_LIST_ITERATOR
PSCATTER_GATHER_ELEMENT	.\SpinAPI\src\ddk_headers\winddk.h	/^} SCATTER_GATHER_ELEMENT, *PSCATTER_GATHER_ELEMENT;$/;"	t	typeref:struct:_SCATTER_GATHER_ELEMENT
PSCATTER_GATHER_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} SCATTER_GATHER_LIST, *PSCATTER_GATHER_LIST;$/;"	t	typeref:struct:_SCATTER_GATHER_LIST
PSECTION_OBJECT_POINTERS	.\SpinAPI\src\ddk_headers\winddk.h	/^} SECTION_OBJECT_POINTERS, *PSECTION_OBJECT_POINTERS;$/;"	t	typeref:struct:_SECTION_OBJECT_POINTERS
PSECURITY_OPERATION_CODE	.\SpinAPI\src\ddk_headers\winddk.h	/^} SECURITY_OPERATION_CODE, *PSECURITY_OPERATION_CODE;$/;"	t	typeref:enum:_SECURITY_OPERATION_CODE
PSECURITY_SUBJECT_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^} SECURITY_SUBJECT_CONTEXT, *PSECURITY_SUBJECT_CONTEXT;$/;"	t	typeref:struct:_SECURITY_SUBJECT_CONTEXT
PSETUP_PACKET	.\SpinAPI\src\cyioctl.h	/^} SETUP_PACKET, *PSETUP_PACKET;$/;"	t	typeref:struct:_SETUP_PACKET
PSET_TRANSFER_SIZE_INFO	.\SpinAPI\src\cyioctl.h	/^} SET_TRANSFER_SIZE_INFO, *PSET_TRANSFER_SIZE_INFO;$/;"	t	typeref:struct:_SET_TRANSFER_SIZE_INFO
PSHARE_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	/^} SHARE_ACCESS, *PSHARE_ACCESS;$/;"	t	typeref:struct:_SHARE_ACCESS
PSINGLE_TRANSFER	.\SpinAPI\src\cyioctl.h	/^} SINGLE_TRANSFER, *PSINGLE_TRANSFER;$/;"	t	typeref:struct:_SINGLE_TRANSFER
PSSDT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef SSDT * PSSDT;$/;"	t
PSSDT_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^} SSDT_ENTRY, *PSSDT_ENTRY;$/;"	t	typeref:struct:_SSDT_ENTRY
PSSPT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef UCHAR SSPT, * PSSPT;$/;"	t
PSYSCTL_IRP_DISPOSITION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef PVOID PSYSCTL_IRP_DISPOSITION;$/;"	t
PTARGET_DEVICE_CUSTOM_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} TARGET_DEVICE_CUSTOM_NOTIFICATION, *PTARGET_DEVICE_CUSTOM_NOTIFICATION;$/;"	t	typeref:struct:_TARGET_DEVICE_CUSTOM_NOTIFICATION
PTARGET_DEVICE_REMOVAL_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} TARGET_DEVICE_REMOVAL_NOTIFICATION, *PTARGET_DEVICE_REMOVAL_NOTIFICATION;$/;"	t	typeref:struct:_TARGET_DEVICE_REMOVAL_NOTIFICATION
PTIMER_APC_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PTIMER_APC_ROUTINE)($/;"	t
PTIME_FIELDS	.\SpinAPI\src\ddk_headers\winddk.h	/^} TIME_FIELDS, *PTIME_FIELDS;$/;"	t	typeref:struct:_TIME_FIELDS
PTIME_UPDATE_NOTIFY_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PTIME_UPDATE_NOTIFY_ROUTINE)($/;"	t
PTRANSLATE_BUS_ADDRESS	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PTRANSLATE_BUS_ADDRESS)($/;"	t
PTS160	.\SpinAPI\examples\USB-PTS\usb-pts_ex_160.c	59;"	d	file:
PULSE_PROGRAM	.\SpinAPI\include\pulseblaster.h	9;"	d
PULSE_PROGRAM	.\SpinAPI\src\pulseblaster.h	9;"	d
PULSE_PROGRAM	.\spinapi.py	/^PULSE_PROGRAM = 0$/;"	v
PUSB_COMMON_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_COMMON_DESCRIPTOR, *PUSB_COMMON_DESCRIPTOR;$/;"	t	typeref:struct:_USB_COMMON_DESCRIPTOR
PUSB_CONFIGURATION_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_CONFIGURATION_DESCRIPTOR, *PUSB_CONFIGURATION_DESCRIPTOR;$/;"	t	typeref:struct:_USB_CONFIGURATION_DESCRIPTOR
PUSB_CONFIGURATION_POWER_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_CONFIGURATION_POWER_DESCRIPTOR, *PUSB_CONFIGURATION_POWER_DESCRIPTOR;$/;"	t	typeref:struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
PUSB_DEVICE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_DEVICE_DESCRIPTOR, *PUSB_DEVICE_DESCRIPTOR;$/;"	t	typeref:struct:_USB_DEVICE_DESCRIPTOR
PUSB_ENDPOINT_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_ENDPOINT_DESCRIPTOR, *PUSB_ENDPOINT_DESCRIPTOR;$/;"	t	typeref:struct:_USB_ENDPOINT_DESCRIPTOR
PUSB_HUB_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_HUB_DESCRIPTOR, *PUSB_HUB_DESCRIPTOR;$/;"	t	typeref:struct:_USB_HUB_DESCRIPTOR
PUSB_INTERFACE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_INTERFACE_DESCRIPTOR, *PUSB_INTERFACE_DESCRIPTOR;$/;"	t	typeref:struct:_USB_INTERFACE_DESCRIPTOR
PUSB_INTERFACE_POWER_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_INTERFACE_POWER_DESCRIPTOR, *PUSB_INTERFACE_POWER_DESCRIPTOR;$/;"	t	typeref:struct:_USB_INTERFACE_POWER_DESCRIPTOR
PUSB_STRING_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_STRING_DESCRIPTOR, *PUSB_STRING_DESCRIPTOR;$/;"	t	typeref:struct:_USB_STRING_DESCRIPTOR
PVPB	.\SpinAPI\src\ddk_headers\winddk.h	/^} VPB, *PVPB;$/;"	t	typeref:struct:_VPB
PWAIT_CONTEXT_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^} WAIT_CONTEXT_BLOCK, *PWAIT_CONTEXT_BLOCK;$/;"	t	typeref:struct:_WAIT_CONTEXT_BLOCK
PWMILIB_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef PVOID PWMILIB_CONTEXT;$/;"	t
PWORD_SPLIT	.\SpinAPI\src\cyioctl.h	/^} WORD_SPLIT, *PWORD_SPLIT;$/;"	t	typeref:struct:_WORD_SPLIT
PWORKER_THREAD_ROUTINE	.\SpinAPI\src\ddk_headers\winddk.h	/^(*PWORKER_THREAD_ROUTINE)($/;"	t
PWORK_QUEUE_ITEM	.\SpinAPI\src\ddk_headers\winddk.h	/^} WORK_QUEUE_ITEM, *PWORK_QUEUE_ITEM;$/;"	t	typeref:struct:_WORK_QUEUE_ITEM
PW_axis	.\proc_quick.py	/^        PW_axis = []$/;"	v
PW_axis	.\swig\Hahn_echo\proc_echo.py	/^        PW_axis = []$/;"	v
PY_SSIZE_T_MAX	.\ppg_wrap.c	892;"	d	file:
PY_SSIZE_T_MAX	.\swig\Hahn_echo\.c	892;"	d	file:
PY_SSIZE_T_MAX	.\swig\Hahn_echo\Hahn_echo_wrap.c	892;"	d	file:
PY_SSIZE_T_MAX	.\swig\example\example_wrap.c	892;"	d	file:
PY_SSIZE_T_MAX	.\swig\example\get_rand_array\get_rand_array_wrap.c	892;"	d	file:
PY_SSIZE_T_MAX	.\swig\ppg_lang\ppg_lang_wrap.c	892;"	d	file:
PY_SSIZE_T_MAX	.\swig\ppg_lang\temp\ppg_temp_wrap.c	892;"	d	file:
PY_SSIZE_T_MAX	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	892;"	d	file:
PY_SSIZE_T_MIN	.\ppg_wrap.c	893;"	d	file:
PY_SSIZE_T_MIN	.\swig\Hahn_echo\.c	893;"	d	file:
PY_SSIZE_T_MIN	.\swig\Hahn_echo\Hahn_echo_wrap.c	893;"	d	file:
PY_SSIZE_T_MIN	.\swig\example\example_wrap.c	893;"	d	file:
PY_SSIZE_T_MIN	.\swig\example\get_rand_array\get_rand_array_wrap.c	893;"	d	file:
PY_SSIZE_T_MIN	.\swig\ppg_lang\ppg_lang_wrap.c	893;"	d	file:
PY_SSIZE_T_MIN	.\swig\ppg_lang\temp\ppg_temp_wrap.c	893;"	d	file:
PY_SSIZE_T_MIN	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	893;"	d	file:
PZONE_HEADER	.\SpinAPI\src\ddk_headers\winnt4.h	/^} ZONE_HEADER, *PZONE_HEADER;$/;"	t	typeref:struct:_ZONE_HEADER
PZONE_SEGMENT_HEADER	.\SpinAPI\src\ddk_headers\winnt4.h	/^} ZONE_SEGMENT_HEADER, *PZONE_SEGMENT_HEADER;$/;"	t	typeref:struct:_ZONE_SEGMENT_HEADER
PacketType	.\SpinAPI\src\ddk_headers\winddk.h	/^          ULONG  PacketType;$/;"	m	union:_IRP::__anon21::__anon22::__anon25::__anon26
PageIn	.\SpinAPI\src\ddk_headers\winddk.h	/^  PageIn,$/;"	e	enum:_KWAIT_REASON
PagedPool	.\SpinAPI\src\ddk_headers\winddk.h	/^  PagedPool,$/;"	e	enum:_POOL_TYPE
PagedPoolCacheAligned	.\SpinAPI\src\ddk_headers\winddk.h	/^  PagedPoolCacheAligned,$/;"	e	enum:_POOL_TYPE
PagedPoolCacheAlignedSession	.\SpinAPI\src\ddk_headers\winddk.h	/^	PagedPoolCacheAlignedSession,$/;"	e	enum:_POOL_TYPE
PagedPoolSession	.\SpinAPI\src\ddk_headers\winddk.h	/^	PagedPoolSession,$/;"	e	enum:_POOL_TYPE
ParallelController	.\SpinAPI\src\ddk_headers\winddk.h	/^  ParallelController,$/;"	e	enum:_CONFIGURATION_TYPE
ParallelCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ParallelCount;$/;"	m	struct:_CONFIGURATION_INFORMATION
Parameter	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Parameter;$/;"	m	struct:_WORK_QUEUE_ITEM
Parameters	.\SpinAPI\src\ddk_headers\winddk.h	/^  } Parameters;$/;"	m	struct:_IO_STACK_LOCATION	typeref:union:_IO_STACK_LOCATION::__anon50
Parity	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		BYTE Parity;				\/* 0-4=None,Odd,Even,Mark,Space			*\/$/;"	m	struct:_FTDCB
PartialDescriptors	.\SpinAPI\src\ddk_headers\winddk.h	/^  CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];$/;"	m	struct:_CM_PARTIAL_RESOURCE_LIST
PartialResourceList	.\SpinAPI\src\ddk_headers\winddk.h	/^  CM_PARTIAL_RESOURCE_LIST  PartialResourceList;$/;"	m	struct:_CM_FULL_RESOURCE_DESCRIPTOR
PartitionStyle	.\SpinAPI\src\ddk_headers\winddk.h	/^  PARTITION_STYLE  PartitionStyle;$/;"	m	struct:_CREATE_DISK
PartitionStyle	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  PartitionStyle;$/;"	m	struct:_DISK_SIGNATURE
PartitionType	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  PartitionType;$/;"	m	struct:_PARTITION_INFORMATION_MBR
PendingReturned	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  PendingReturned;$/;"	m	struct:_IRP
Period	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONG  Period;$/;"	m	struct:_KTIMER
Personal	.\SpinAPI\src\ddk_headers\winddk.h	/^  Personal,$/;"	e	enum:_SUITE_TYPE
PnP	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD PnP;					\/\/ 0 = disabled, 1 = enabled$/;"	m	struct:ft_program_data
Pointer	.\SpinAPI\src\ddk_headers\winddk.h	/^    PVOID  Pointer;$/;"	m	union:_IO_STATUS_BLOCK::__anon17
PointerController	.\SpinAPI\src\ddk_headers\winddk.h	/^  PointerController,$/;"	e	enum:_CONFIGURATION_TYPE
PointerPeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  PointerPeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
PoolAllocation	.\SpinAPI\src\ddk_headers\winddk.h	/^  PoolAllocation,$/;"	e	enum:_KWAIT_REASON
PopEntryList	.\SpinAPI\src\ddk_headers\winddk.h	/^PopEntryList($/;"	f
Port	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Port;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon33
Port	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Port;$/;"	m	union:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28	typeref:struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon30
Port	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Port;$/;"	m	union:_IO_RESOURCE_DESCRIPTOR::__anon37	typeref:struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon38
Port	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Port;$/;"	m	struct:_IO_COMPLETION_CONTEXT
PortAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  PortAddress;$/;"	m	struct:_EISA_PORT_CONFIGURATION
Pos	.\SpinAPI\src\ddk_headers\win2k.h	/^  Pos,$/;"	e	enum:_BUS_DATA_TYPE
PosData1	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  PosData1;$/;"	m	struct:_CM_MCA_POS_DATA
PosData2	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  PosData2;$/;"	m	struct:_CM_MCA_POS_DATA
PosData3	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  PosData3;$/;"	m	struct:_CM_MCA_POS_DATA
PosData4	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  PosData4;$/;"	m	struct:_CM_MCA_POS_DATA
Power	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Power;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon76
PowerRelations	.\SpinAPI\src\ddk_headers\winddk.h	/^  PowerRelations,$/;"	e	enum:_DEVICE_RELATION_TYPE
PowerSaveEnable	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PowerSaveEnable;		\/\/ $/;"	m	struct:ft_eeprom_232h
PowerSaveEnable	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PowerSaveEnable;		\/\/ $/;"	m	struct:ft_eeprom_x_series
PowerSaveEnable	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PowerSaveEnable;		\/\/ non-zero if using BCBUS7 to save power for self-powered designs$/;"	m	struct:ft_eeprom_2232h
PowerSaveEnable	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PowerSaveEnable;		\/\/ non-zero if using BCBUS7 to save power for self-powered designs$/;"	m	struct:ft_program_data
PowerSaveEnableH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PowerSaveEnableH;		\/\/ non-zero if using ACBUS7 to save power for self-powered designs$/;"	m	struct:ft_program_data
PowerSequence	.\SpinAPI\src\ddk_headers\winddk.h	/^      PPOWER_SEQUENCE  PowerSequence;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon75
PowerSequence	.\SpinAPI\src\ddk_headers\winddk.h	/^    } PowerSequence;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon75
PowerState	.\SpinAPI\src\ddk_headers\winddk.h	/^      SYSTEM_POWER_STATE  PowerState;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon74
PrefetchBase	.\SpinAPI\src\ddk_headers\winddk.h	/^        USHORT  PrefetchBase;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
PrefetchBaseUpper32	.\SpinAPI\src\ddk_headers\winddk.h	/^        ULONG  PrefetchBaseUpper32;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
PrefetchLimit	.\SpinAPI\src\ddk_headers\winddk.h	/^        USHORT  PrefetchLimit;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
PrefetchLimitUpper32	.\SpinAPI\src\ddk_headers\winddk.h	/^        ULONG  PrefetchLimitUpper32;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
PrepareMdlWrite	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_PREPARE_MDL_WRITE  PrepareMdlWrite;$/;"	m	struct:_FAST_IO_DISPATCH
PreviouslyGrantedAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  ACCESS_MASK  PreviouslyGrantedAccess;$/;"	m	struct:_ACCESS_STATE
PrimaryBus	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  PrimaryBus;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
PrimaryBus	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  PrimaryBus;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
PrimaryDcache	.\SpinAPI\src\ddk_headers\winddk.h	/^  PrimaryDcache,$/;"	e	enum:_CONFIGURATION_TYPE
PrimaryIcache	.\SpinAPI\src\ddk_headers\winddk.h	/^  PrimaryIcache,$/;"	e	enum:_CONFIGURATION_TYPE
PrimaryToken	.\SpinAPI\src\ddk_headers\winddk.h	/^  PACCESS_TOKEN  PrimaryToken;$/;"	m	struct:_SECURITY_SUBJECT_CONTEXT
PrinterPeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  PrinterPeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
Priority	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Priority;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon45
PristineRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PDRIVER_VERIFIER_THUNK_ROUTINE  PristineRoutine;$/;"	m	struct:_DRIVER_VERIFIER_THUNK_PAIRS
PrivateCacheMap	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  PrivateCacheMap;$/;"	m	struct:_FILE_OBJECT
Privilege	.\SpinAPI\src\ddk_headers\winddk.h	/^  LUID_AND_ATTRIBUTES  Privilege[INITIAL_PRIVILEGE_COUNT];$/;"	m	struct:_INITIAL_PRIVILEGE_SET
PrivilegeCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  PrivilegeCount;$/;"	m	struct:_INITIAL_PRIVILEGE_SET
PrivilegeSet	.\SpinAPI\src\ddk_headers\winddk.h	/^    PRIVILEGE_SET  PrivilegeSet;$/;"	m	union:_ACCESS_STATE::__anon49
Privileges	.\SpinAPI\src\ddk_headers\winddk.h	/^  } Privileges;$/;"	m	struct:_ACCESS_STATE	typeref:union:_ACCESS_STATE::__anon49
PrivilegesAllocated	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  PrivilegesAllocated;$/;"	m	struct:_ACCESS_STATE
Process	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _EPROCESS  *Process;$/;"	m	struct:_MDL	typeref:struct:_MDL::_EPROCESS
ProcessAccessToken	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessAccessToken,$/;"	e	enum:_PROCESSINFOCLASS
ProcessAffinityMask	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessAffinityMask,$/;"	e	enum:_PROCESSINFOCLASS
ProcessAuditId	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  ProcessAuditId;$/;"	m	struct:_SECURITY_SUBJECT_CONTEXT
ProcessBasePriority	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessBasePriority,$/;"	e	enum:_PROCESSINFOCLASS
ProcessBasicInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessBasicInformation,$/;"	e	enum:_PROCESSINFOCLASS
ProcessBreakOnTermination	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessBreakOnTermination,$/;"	e	enum:_PROCESSINFOCLASS
ProcessDebugFlags	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessDebugFlags,$/;"	e	enum:_PROCESSINFOCLASS
ProcessDebugObjectHandle	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessDebugObjectHandle,$/;"	e	enum:_PROCESSINFOCLASS
ProcessDebugPort	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessDebugPort,$/;"	e	enum:_PROCESSINFOCLASS
ProcessDefaultHardErrorMode	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessDefaultHardErrorMode,$/;"	e	enum:_PROCESSINFOCLASS
ProcessDeviceMap	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessDeviceMap,$/;"	e	enum:_PROCESSINFOCLASS
ProcessEnableAlignmentFaultFixup	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessEnableAlignmentFaultFixup,$/;"	e	enum:_PROCESSINFOCLASS
ProcessExceptionPort	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessExceptionPort,$/;"	e	enum:_PROCESSINFOCLASS
ProcessForegroundInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessForegroundInformation,$/;"	e	enum:_PROCESSINFOCLASS
ProcessHandleCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessHandleCount,$/;"	e	enum:_PROCESSINFOCLASS
ProcessHandleTracing	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessHandleTracing,$/;"	e	enum:_PROCESSINFOCLASS
ProcessImageFileName	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessImageFileName,$/;"	e	enum:_PROCESSINFOCLASS
ProcessIoCounters	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessIoCounters,$/;"	e	enum:_PROCESSINFOCLASS
ProcessIoPortHandlers	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessIoPortHandlers,$/;"	e	enum:_PROCESSINFOCLASS
ProcessLUIDDeviceMapsEnabled	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessLUIDDeviceMapsEnabled,$/;"	e	enum:_PROCESSINFOCLASS
ProcessLdtInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessLdtInformation,$/;"	e	enum:_PROCESSINFOCLASS
ProcessLdtSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessLdtSize,$/;"	e	enum:_PROCESSINFOCLASS
ProcessPooledUsageAndLimits	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessPooledUsageAndLimits,$/;"	e	enum:_PROCESSINFOCLASS
ProcessPriorityBoost	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessPriorityBoost,$/;"	e	enum:_PROCESSINFOCLASS
ProcessPriorityClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessPriorityClass,$/;"	e	enum:_PROCESSINFOCLASS
ProcessQuotaLimits	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessQuotaLimits,$/;"	e	enum:_PROCESSINFOCLASS
ProcessRaisePriority	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessRaisePriority,$/;"	e	enum:_PROCESSINFOCLASS
ProcessSessionInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessSessionInformation,$/;"	e	enum:_PROCESSINFOCLASS
ProcessTimes	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessTimes,$/;"	e	enum:_PROCESSINFOCLASS
ProcessUserModeIOPL	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessUserModeIOPL,$/;"	e	enum:_PROCESSINFOCLASS
ProcessVmCounters	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessVmCounters,$/;"	e	enum:_PROCESSINFOCLASS
ProcessWorkingSetWatch	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessWorkingSetWatch,$/;"	e	enum:_PROCESSINFOCLASS
ProcessWow64Information	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessWow64Information,$/;"	e	enum:_PROCESSINFOCLASS
ProcessWx86Information	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessWx86Information,$/;"	e	enum:_PROCESSINFOCLASS
ProcessorInternal	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProcessorInternal,$/;"	e	enum:_INTERFACE_TYPE
ProductId	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD ProductId;				\/\/ 0x6001$/;"	m	struct:ft_eeprom_header
ProductId	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD ProductId;				\/\/ 0x6001$/;"	m	struct:ft_program_data
Profile2Issue	.\SpinAPI\src\ddk_headers\winddk.h	/^  Profile2Issue,$/;"	e	enum:_KPROFILE_SOURCE
Profile3Issue	.\SpinAPI\src\ddk_headers\winddk.h	/^  Profile3Issue,$/;"	e	enum:_KPROFILE_SOURCE
Profile4Issue	.\SpinAPI\src\ddk_headers\winddk.h	/^  Profile4Issue,$/;"	e	enum:_KPROFILE_SOURCE
ProfileAlignmentFixup	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileAlignmentFixup,$/;"	e	enum:_KPROFILE_SOURCE
ProfileBranchInstructions	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileBranchInstructions,$/;"	e	enum:_KPROFILE_SOURCE
ProfileBranchMispredictions	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileBranchMispredictions,$/;"	e	enum:_KPROFILE_SOURCE
ProfileCacheMisses	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileCacheMisses,$/;"	e	enum:_KPROFILE_SOURCE
ProfileDcacheAccesses	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileDcacheAccesses,$/;"	e	enum:_KPROFILE_SOURCE
ProfileDcacheMisses	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileDcacheMisses,$/;"	e	enum:_KPROFILE_SOURCE
ProfileFpInstructions	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileFpInstructions,$/;"	e	enum:_KPROFILE_SOURCE
ProfileIcacheIssues	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileIcacheIssues,$/;"	e	enum:_KPROFILE_SOURCE
ProfileIcacheMisses	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileIcacheMisses,$/;"	e	enum:_KPROFILE_SOURCE
ProfileIntegerInstructions	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileIntegerInstructions,$/;"	e	enum:_KPROFILE_SOURCE
ProfileLoadInstructions	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileLoadInstructions,$/;"	e	enum:_KPROFILE_SOURCE
ProfileLoadLinkedIssues	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileLoadLinkedIssues,$/;"	e	enum:_KPROFILE_SOURCE
ProfileMaximum	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileMaximum$/;"	e	enum:_KPROFILE_SOURCE
ProfileMemoryBarrierCycles	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileMemoryBarrierCycles,$/;"	e	enum:_KPROFILE_SOURCE
ProfilePipelineDry	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfilePipelineDry,$/;"	e	enum:_KPROFILE_SOURCE
ProfilePipelineFrozen	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfilePipelineFrozen,$/;"	e	enum:_KPROFILE_SOURCE
ProfileSpecialInstructions	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileSpecialInstructions,$/;"	e	enum:_KPROFILE_SOURCE
ProfileStoreInstructions	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileStoreInstructions,$/;"	e	enum:_KPROFILE_SOURCE
ProfileTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileTime,$/;"	e	enum:_KPROFILE_SOURCE
ProfileTotalCycles	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileTotalCycles,$/;"	e	enum:_KPROFILE_SOURCE
ProfileTotalIssues	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileTotalIssues,$/;"	e	enum:_KPROFILE_SOURCE
ProfileTotalNonissues	.\SpinAPI\src\ddk_headers\winddk.h	/^  ProfileTotalNonissues,$/;"	e	enum:_KPROFILE_SOURCE
ProgIf	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  ProgIf;$/;"	m	struct:_PCI_COMMON_CONFIG
Program	.\SpinAPI\interpreter\src\gui.cpp	/^int Program()$/;"	f
ProgramLine	.\SpinAPI\interpreter\src\interpreter.cpp	/^} ProgramLine;$/;"	t	typeref:struct:tagProgramLine	file:
ProgramPath	.\SpinAPI\interpreter\src\gui.cpp	/^char ProgramPath[257]; \/\/ String to hold the path the program is installed in.$/;"	v
Properties	.\SpinAPI\src\ddk_headers\winddk.h	/^    ULONG  Properties;$/;"	m	union:_IMAGE_INFO::__anon84
ProviderId	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG_PTR  ProviderId;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon78
PsGetCurrentProcess	.\SpinAPI\src\ddk_headers\winddk.h	8405;"	d
PsGetCurrentThread	.\SpinAPI\src\ddk_headers\winddk.h	8417;"	d
PullDownEnable	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PullDownEnable;		\/\/ non-zero if pull down enabled$/;"	m	struct:ft_program_data
PullDownEnable	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PullDownEnable;		\/\/ non-zero if pull down in suspend enabled$/;"	m	struct:ft_eeprom_header
PullDownEnable5	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PullDownEnable5;		\/\/ non-zero if pull down enabled$/;"	m	struct:ft_program_data
PullDownEnable7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PullDownEnable7;		\/\/ non-zero if pull down enabled$/;"	m	struct:ft_program_data
PullDownEnable8	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PullDownEnable8;		\/\/ non-zero if pull down enabled$/;"	m	struct:ft_program_data
PullDownEnableH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PullDownEnableH;		\/\/ non-zero if pull down enabled$/;"	m	struct:ft_program_data
PullDownEnableR	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR PullDownEnableR;		\/\/ non-zero if pull down enabled$/;"	m	struct:ft_program_data
PulseBlasterESR	.\SpinAPI\interpreter\doc\index.html	/^      <a name="PulseBlasterESR"><\/a>$/;"	a
PushEntryList	.\SpinAPI\src\ddk_headers\winddk.h	4103;"	d
PutDmaAdapter	.\SpinAPI\src\ddk_headers\winddk.h	/^  PPUT_DMA_ADAPTER  PutDmaAdapter;$/;"	m	struct:_DMA_OPERATIONS
PutScatterGatherList	.\SpinAPI\src\ddk_headers\winddk.h	/^  PPUT_SCATTER_GATHER_LIST  PutScatterGatherList;$/;"	m	struct:_DMA_OPERATIONS
PyBool_FromLong	.\ppg_wrap.c	/^PyObject *PyBool_FromLong(long ok)$/;"	f	file:
PyBool_FromLong	.\swig\Hahn_echo\.c	/^PyObject *PyBool_FromLong(long ok)$/;"	f	file:
PyBool_FromLong	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^PyObject *PyBool_FromLong(long ok)$/;"	f	file:
PyBool_FromLong	.\swig\example\example_wrap.c	/^PyObject *PyBool_FromLong(long ok)$/;"	f	file:
PyBool_FromLong	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^PyObject *PyBool_FromLong(long ok)$/;"	f	file:
PyBool_FromLong	.\swig\ppg_lang\ppg_lang_wrap.c	/^PyObject *PyBool_FromLong(long ok)$/;"	f	file:
PyBool_FromLong	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^PyObject *PyBool_FromLong(long ok)$/;"	f	file:
PyBool_FromLong	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^PyObject *PyBool_FromLong(long ok)$/;"	f	file:
PyClass_Check	.\ppg_wrap.c	745;"	d	file:
PyClass_Check	.\swig\Hahn_echo\.c	745;"	d	file:
PyClass_Check	.\swig\Hahn_echo\Hahn_echo_wrap.c	745;"	d	file:
PyClass_Check	.\swig\example\example_wrap.c	745;"	d	file:
PyClass_Check	.\swig\example\get_rand_array\get_rand_array_wrap.c	745;"	d	file:
PyClass_Check	.\swig\ppg_lang\ppg_lang_wrap.c	745;"	d	file:
PyClass_Check	.\swig\ppg_lang\temp\ppg_temp_wrap.c	745;"	d	file:
PyClass_Check	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	745;"	d	file:
PyDescr_NAME	.\ppg_wrap.c	954;"	d	file:
PyDescr_NAME	.\swig\Hahn_echo\.c	954;"	d	file:
PyDescr_NAME	.\swig\Hahn_echo\Hahn_echo_wrap.c	954;"	d	file:
PyDescr_NAME	.\swig\example\example_wrap.c	954;"	d	file:
PyDescr_NAME	.\swig\example\get_rand_array\get_rand_array_wrap.c	954;"	d	file:
PyDescr_NAME	.\swig\ppg_lang\ppg_lang_wrap.c	954;"	d	file:
PyDescr_NAME	.\swig\ppg_lang\temp\ppg_temp_wrap.c	954;"	d	file:
PyDescr_NAME	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	954;"	d	file:
PyDescr_TYPE	.\ppg_wrap.c	953;"	d	file:
PyDescr_TYPE	.\swig\Hahn_echo\.c	953;"	d	file:
PyDescr_TYPE	.\swig\Hahn_echo\Hahn_echo_wrap.c	953;"	d	file:
PyDescr_TYPE	.\swig\example\example_wrap.c	953;"	d	file:
PyDescr_TYPE	.\swig\example\get_rand_array\get_rand_array_wrap.c	953;"	d	file:
PyDescr_TYPE	.\swig\ppg_lang\ppg_lang_wrap.c	953;"	d	file:
PyDescr_TYPE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	953;"	d	file:
PyDescr_TYPE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	953;"	d	file:
PyExc_StopIteration	.\ppg_wrap.c	848;"	d	file:
PyExc_StopIteration	.\swig\Hahn_echo\.c	848;"	d	file:
PyExc_StopIteration	.\swig\Hahn_echo\Hahn_echo_wrap.c	848;"	d	file:
PyExc_StopIteration	.\swig\example\example_wrap.c	848;"	d	file:
PyExc_StopIteration	.\swig\example\get_rand_array\get_rand_array_wrap.c	848;"	d	file:
PyExc_StopIteration	.\swig\ppg_lang\ppg_lang_wrap.c	848;"	d	file:
PyExc_StopIteration	.\swig\ppg_lang\temp\ppg_temp_wrap.c	848;"	d	file:
PyExc_StopIteration	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	848;"	d	file:
PyHeapTypeObject	.\ppg_wrap.c	/^} PyHeapTypeObject;$/;"	t	typeref:struct:__anon5	file:
PyHeapTypeObject	.\swig\Hahn_echo\.c	/^} PyHeapTypeObject;$/;"	t	typeref:struct:__anon103	file:
PyHeapTypeObject	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^} PyHeapTypeObject;$/;"	t	typeref:struct:__anon107	file:
PyHeapTypeObject	.\swig\example\example_wrap.c	/^} PyHeapTypeObject;$/;"	t	typeref:struct:__anon95	file:
PyHeapTypeObject	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^} PyHeapTypeObject;$/;"	t	typeref:struct:__anon99	file:
PyHeapTypeObject	.\swig\ppg_lang\ppg_lang_wrap.c	/^} PyHeapTypeObject;$/;"	t	typeref:struct:__anon111	file:
PyHeapTypeObject	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^} PyHeapTypeObject;$/;"	t	typeref:struct:__anon115	file:
PyHeapTypeObject	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^} PyHeapTypeObject;$/;"	t	typeref:struct:__anon119	file:
PyInt_AsLong	.\ppg_wrap.c	747;"	d	file:
PyInt_AsLong	.\swig\Hahn_echo\.c	747;"	d	file:
PyInt_AsLong	.\swig\Hahn_echo\Hahn_echo_wrap.c	747;"	d	file:
PyInt_AsLong	.\swig\example\example_wrap.c	747;"	d	file:
PyInt_AsLong	.\swig\example\get_rand_array\get_rand_array_wrap.c	747;"	d	file:
PyInt_AsLong	.\swig\ppg_lang\ppg_lang_wrap.c	747;"	d	file:
PyInt_AsLong	.\swig\ppg_lang\temp\ppg_temp_wrap.c	747;"	d	file:
PyInt_AsLong	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	747;"	d	file:
PyInt_Check	.\ppg_wrap.c	746;"	d	file:
PyInt_Check	.\swig\Hahn_echo\.c	746;"	d	file:
PyInt_Check	.\swig\Hahn_echo\Hahn_echo_wrap.c	746;"	d	file:
PyInt_Check	.\swig\example\example_wrap.c	746;"	d	file:
PyInt_Check	.\swig\example\get_rand_array\get_rand_array_wrap.c	746;"	d	file:
PyInt_Check	.\swig\ppg_lang\ppg_lang_wrap.c	746;"	d	file:
PyInt_Check	.\swig\ppg_lang\temp\ppg_temp_wrap.c	746;"	d	file:
PyInt_Check	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	746;"	d	file:
PyInt_FromLong	.\ppg_wrap.c	748;"	d	file:
PyInt_FromLong	.\swig\Hahn_echo\.c	748;"	d	file:
PyInt_FromLong	.\swig\Hahn_echo\Hahn_echo_wrap.c	748;"	d	file:
PyInt_FromLong	.\swig\example\example_wrap.c	748;"	d	file:
PyInt_FromLong	.\swig\example\get_rand_array\get_rand_array_wrap.c	748;"	d	file:
PyInt_FromLong	.\swig\ppg_lang\ppg_lang_wrap.c	748;"	d	file:
PyInt_FromLong	.\swig\ppg_lang\temp\ppg_temp_wrap.c	748;"	d	file:
PyInt_FromLong	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	748;"	d	file:
PyInt_FromSize_t	.\ppg_wrap.c	749;"	d	file:
PyInt_FromSize_t	.\ppg_wrap.c	916;"	d	file:
PyInt_FromSize_t	.\swig\Hahn_echo\.c	749;"	d	file:
PyInt_FromSize_t	.\swig\Hahn_echo\.c	916;"	d	file:
PyInt_FromSize_t	.\swig\Hahn_echo\Hahn_echo_wrap.c	749;"	d	file:
PyInt_FromSize_t	.\swig\Hahn_echo\Hahn_echo_wrap.c	916;"	d	file:
PyInt_FromSize_t	.\swig\example\example_wrap.c	749;"	d	file:
PyInt_FromSize_t	.\swig\example\example_wrap.c	916;"	d	file:
PyInt_FromSize_t	.\swig\example\get_rand_array\get_rand_array_wrap.c	749;"	d	file:
PyInt_FromSize_t	.\swig\example\get_rand_array\get_rand_array_wrap.c	916;"	d	file:
PyInt_FromSize_t	.\swig\ppg_lang\ppg_lang_wrap.c	749;"	d	file:
PyInt_FromSize_t	.\swig\ppg_lang\ppg_lang_wrap.c	916;"	d	file:
PyInt_FromSize_t	.\swig\ppg_lang\temp\ppg_temp_wrap.c	749;"	d	file:
PyInt_FromSize_t	.\swig\ppg_lang\temp\ppg_temp_wrap.c	916;"	d	file:
PyInt_FromSize_t	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	749;"	d	file:
PyInt_FromSize_t	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	916;"	d	file:
PyModule_AddObject	.\ppg_wrap.c	/^PyModule_AddObject(PyObject *m, char *name, PyObject *o)$/;"	f
PyModule_AddObject	.\swig\Hahn_echo\.c	/^PyModule_AddObject(PyObject *m, char *name, PyObject *o)$/;"	f
PyModule_AddObject	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^PyModule_AddObject(PyObject *m, char *name, PyObject *o)$/;"	f
PyModule_AddObject	.\swig\example\example_wrap.c	/^PyModule_AddObject(PyObject *m, char *name, PyObject *o)$/;"	f
PyModule_AddObject	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^PyModule_AddObject(PyObject *m, char *name, PyObject *o)$/;"	f
PyModule_AddObject	.\swig\ppg_lang\ppg_lang_wrap.c	/^PyModule_AddObject(PyObject *m, char *name, PyObject *o)$/;"	f
PyModule_AddObject	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^PyModule_AddObject(PyObject *m, char *name, PyObject *o)$/;"	f
PyModule_AddObject	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^PyModule_AddObject(PyObject *m, char *name, PyObject *o)$/;"	f
PyNumber_AsSsize_t	.\ppg_wrap.c	/^static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))$/;"	f	file:
PyNumber_AsSsize_t	.\swig\Hahn_echo\.c	/^static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))$/;"	f	file:
PyNumber_AsSsize_t	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))$/;"	f	file:
PyNumber_AsSsize_t	.\swig\example\example_wrap.c	/^static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))$/;"	f	file:
PyNumber_AsSsize_t	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))$/;"	f	file:
PyNumber_AsSsize_t	.\swig\ppg_lang\ppg_lang_wrap.c	/^static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))$/;"	f	file:
PyNumber_AsSsize_t	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))$/;"	f	file:
PyNumber_AsSsize_t	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))$/;"	f	file:
PyOS_snprintf	.\ppg_wrap.c	816;"	d	file:
PyOS_snprintf	.\ppg_wrap.c	818;"	d	file:
PyOS_snprintf	.\swig\Hahn_echo\.c	816;"	d	file:
PyOS_snprintf	.\swig\Hahn_echo\.c	818;"	d	file:
PyOS_snprintf	.\swig\Hahn_echo\Hahn_echo_wrap.c	816;"	d	file:
PyOS_snprintf	.\swig\Hahn_echo\Hahn_echo_wrap.c	818;"	d	file:
PyOS_snprintf	.\swig\example\example_wrap.c	816;"	d	file:
PyOS_snprintf	.\swig\example\example_wrap.c	818;"	d	file:
PyOS_snprintf	.\swig\example\get_rand_array\get_rand_array_wrap.c	816;"	d	file:
PyOS_snprintf	.\swig\example\get_rand_array\get_rand_array_wrap.c	818;"	d	file:
PyOS_snprintf	.\swig\ppg_lang\ppg_lang_wrap.c	816;"	d	file:
PyOS_snprintf	.\swig\ppg_lang\ppg_lang_wrap.c	818;"	d	file:
PyOS_snprintf	.\swig\ppg_lang\temp\ppg_temp_wrap.c	816;"	d	file:
PyOS_snprintf	.\swig\ppg_lang\temp\ppg_temp_wrap.c	818;"	d	file:
PyOS_snprintf	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	816;"	d	file:
PyOS_snprintf	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	818;"	d	file:
PyObject_DEL	.\ppg_wrap.c	842;"	d	file:
PyObject_DEL	.\swig\Hahn_echo\.c	842;"	d	file:
PyObject_DEL	.\swig\Hahn_echo\Hahn_echo_wrap.c	842;"	d	file:
PyObject_DEL	.\swig\example\example_wrap.c	842;"	d	file:
PyObject_DEL	.\swig\example\get_rand_array\get_rand_array_wrap.c	842;"	d	file:
PyObject_DEL	.\swig\ppg_lang\ppg_lang_wrap.c	842;"	d	file:
PyObject_DEL	.\swig\ppg_lang\temp\ppg_temp_wrap.c	842;"	d	file:
PyObject_DEL	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	842;"	d	file:
PyObject_GenericGetAttr	.\ppg_wrap.c	851;"	d	file:
PyObject_GenericGetAttr	.\swig\Hahn_echo\.c	851;"	d	file:
PyObject_GenericGetAttr	.\swig\Hahn_echo\Hahn_echo_wrap.c	851;"	d	file:
PyObject_GenericGetAttr	.\swig\example\example_wrap.c	851;"	d	file:
PyObject_GenericGetAttr	.\swig\example\get_rand_array\get_rand_array_wrap.c	851;"	d	file:
PyObject_GenericGetAttr	.\swig\ppg_lang\ppg_lang_wrap.c	851;"	d	file:
PyObject_GenericGetAttr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	851;"	d	file:
PyObject_GenericGetAttr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	851;"	d	file:
PySequence_Size	.\ppg_wrap.c	872;"	d	file:
PySequence_Size	.\swig\Hahn_echo\.c	872;"	d	file:
PySequence_Size	.\swig\Hahn_echo\Hahn_echo_wrap.c	872;"	d	file:
PySequence_Size	.\swig\example\example_wrap.c	872;"	d	file:
PySequence_Size	.\swig\example\get_rand_array\get_rand_array_wrap.c	872;"	d	file:
PySequence_Size	.\swig\ppg_lang\ppg_lang_wrap.c	872;"	d	file:
PySequence_Size	.\swig\ppg_lang\temp\ppg_temp_wrap.c	872;"	d	file:
PySequence_Size	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	872;"	d	file:
PyString_AS_STRING	.\ppg_wrap.c	757;"	d	file:
PyString_AS_STRING	.\swig\Hahn_echo\.c	757;"	d	file:
PyString_AS_STRING	.\swig\Hahn_echo\Hahn_echo_wrap.c	757;"	d	file:
PyString_AS_STRING	.\swig\example\example_wrap.c	757;"	d	file:
PyString_AS_STRING	.\swig\example\get_rand_array\get_rand_array_wrap.c	757;"	d	file:
PyString_AS_STRING	.\swig\ppg_lang\ppg_lang_wrap.c	757;"	d	file:
PyString_AS_STRING	.\swig\ppg_lang\temp\ppg_temp_wrap.c	757;"	d	file:
PyString_AS_STRING	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	757;"	d	file:
PyString_AsString	.\ppg_wrap.c	753;"	d	file:
PyString_AsString	.\swig\Hahn_echo\.c	753;"	d	file:
PyString_AsString	.\swig\Hahn_echo\Hahn_echo_wrap.c	753;"	d	file:
PyString_AsString	.\swig\example\example_wrap.c	753;"	d	file:
PyString_AsString	.\swig\example\get_rand_array\get_rand_array_wrap.c	753;"	d	file:
PyString_AsString	.\swig\ppg_lang\ppg_lang_wrap.c	753;"	d	file:
PyString_AsString	.\swig\ppg_lang\temp\ppg_temp_wrap.c	753;"	d	file:
PyString_AsString	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	753;"	d	file:
PyString_AsStringAndSize	.\ppg_wrap.c	865;"	d	file:
PyString_AsStringAndSize	.\swig\Hahn_echo\.c	865;"	d	file:
PyString_AsStringAndSize	.\swig\Hahn_echo\Hahn_echo_wrap.c	865;"	d	file:
PyString_AsStringAndSize	.\swig\example\example_wrap.c	865;"	d	file:
PyString_AsStringAndSize	.\swig\example\get_rand_array\get_rand_array_wrap.c	865;"	d	file:
PyString_AsStringAndSize	.\swig\ppg_lang\ppg_lang_wrap.c	865;"	d	file:
PyString_AsStringAndSize	.\swig\ppg_lang\temp\ppg_temp_wrap.c	865;"	d	file:
PyString_AsStringAndSize	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	865;"	d	file:
PyString_Check	.\ppg_wrap.c	750;"	d	file:
PyString_Check	.\swig\Hahn_echo\.c	750;"	d	file:
PyString_Check	.\swig\Hahn_echo\Hahn_echo_wrap.c	750;"	d	file:
PyString_Check	.\swig\example\example_wrap.c	750;"	d	file:
PyString_Check	.\swig\example\get_rand_array\get_rand_array_wrap.c	750;"	d	file:
PyString_Check	.\swig\ppg_lang\ppg_lang_wrap.c	750;"	d	file:
PyString_Check	.\swig\ppg_lang\temp\ppg_temp_wrap.c	750;"	d	file:
PyString_Check	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	750;"	d	file:
PyString_Format	.\ppg_wrap.c	752;"	d	file:
PyString_Format	.\swig\Hahn_echo\.c	752;"	d	file:
PyString_Format	.\swig\Hahn_echo\Hahn_echo_wrap.c	752;"	d	file:
PyString_Format	.\swig\example\example_wrap.c	752;"	d	file:
PyString_Format	.\swig\example\get_rand_array\get_rand_array_wrap.c	752;"	d	file:
PyString_Format	.\swig\ppg_lang\ppg_lang_wrap.c	752;"	d	file:
PyString_Format	.\swig\ppg_lang\temp\ppg_temp_wrap.c	752;"	d	file:
PyString_Format	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	752;"	d	file:
PyString_FromFormat	.\ppg_wrap.c	/^PyString_FromFormat(const char *fmt, ...) {$/;"	f	file:
PyString_FromFormat	.\swig\Hahn_echo\.c	/^PyString_FromFormat(const char *fmt, ...) {$/;"	f	file:
PyString_FromFormat	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^PyString_FromFormat(const char *fmt, ...) {$/;"	f	file:
PyString_FromFormat	.\swig\example\example_wrap.c	/^PyString_FromFormat(const char *fmt, ...) {$/;"	f	file:
PyString_FromFormat	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^PyString_FromFormat(const char *fmt, ...) {$/;"	f	file:
PyString_FromFormat	.\swig\ppg_lang\ppg_lang_wrap.c	/^PyString_FromFormat(const char *fmt, ...) {$/;"	f	file:
PyString_FromFormat	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^PyString_FromFormat(const char *fmt, ...) {$/;"	f	file:
PyString_FromFormat	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^PyString_FromFormat(const char *fmt, ...) {$/;"	f	file:
PyString_FromString	.\ppg_wrap.c	751;"	d	file:
PyString_FromString	.\swig\Hahn_echo\.c	751;"	d	file:
PyString_FromString	.\swig\Hahn_echo\Hahn_echo_wrap.c	751;"	d	file:
PyString_FromString	.\swig\example\example_wrap.c	751;"	d	file:
PyString_FromString	.\swig\example\get_rand_array\get_rand_array_wrap.c	751;"	d	file:
PyString_FromString	.\swig\ppg_lang\ppg_lang_wrap.c	751;"	d	file:
PyString_FromString	.\swig\ppg_lang\temp\ppg_temp_wrap.c	751;"	d	file:
PyString_FromString	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	751;"	d	file:
PyString_InternFromString	.\ppg_wrap.c	755;"	d	file:
PyString_InternFromString	.\swig\Hahn_echo\.c	755;"	d	file:
PyString_InternFromString	.\swig\Hahn_echo\Hahn_echo_wrap.c	755;"	d	file:
PyString_InternFromString	.\swig\example\example_wrap.c	755;"	d	file:
PyString_InternFromString	.\swig\example\get_rand_array\get_rand_array_wrap.c	755;"	d	file:
PyString_InternFromString	.\swig\ppg_lang\ppg_lang_wrap.c	755;"	d	file:
PyString_InternFromString	.\swig\ppg_lang\temp\ppg_temp_wrap.c	755;"	d	file:
PyString_InternFromString	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	755;"	d	file:
PyString_Size	.\ppg_wrap.c	754;"	d	file:
PyString_Size	.\swig\Hahn_echo\.c	754;"	d	file:
PyString_Size	.\swig\Hahn_echo\Hahn_echo_wrap.c	754;"	d	file:
PyString_Size	.\swig\example\example_wrap.c	754;"	d	file:
PyString_Size	.\swig\example\get_rand_array\get_rand_array_wrap.c	754;"	d	file:
PyString_Size	.\swig\ppg_lang\ppg_lang_wrap.c	754;"	d	file:
PyString_Size	.\swig\ppg_lang\temp\ppg_temp_wrap.c	754;"	d	file:
PyString_Size	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	754;"	d	file:
Py_None	.\ppg_wrap.c	1398;"	d	file:
Py_None	.\ppg_wrap.c	1399;"	d	file:
Py_None	.\swig\Hahn_echo\.c	1398;"	d	file:
Py_None	.\swig\Hahn_echo\.c	1399;"	d	file:
Py_None	.\swig\Hahn_echo\Hahn_echo_wrap.c	1398;"	d	file:
Py_None	.\swig\Hahn_echo\Hahn_echo_wrap.c	1399;"	d	file:
Py_None	.\swig\example\example_wrap.c	1398;"	d	file:
Py_None	.\swig\example\example_wrap.c	1399;"	d	file:
Py_None	.\swig\example\get_rand_array\get_rand_array_wrap.c	1398;"	d	file:
Py_None	.\swig\example\get_rand_array\get_rand_array_wrap.c	1399;"	d	file:
Py_None	.\swig\ppg_lang\ppg_lang_wrap.c	1398;"	d	file:
Py_None	.\swig\ppg_lang\ppg_lang_wrap.c	1399;"	d	file:
Py_None	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1398;"	d	file:
Py_None	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1399;"	d	file:
Py_None	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1398;"	d	file:
Py_None	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1399;"	d	file:
Py_NotImplemented	.\ppg_wrap.c	858;"	d	file:
Py_NotImplemented	.\swig\Hahn_echo\.c	858;"	d	file:
Py_NotImplemented	.\swig\Hahn_echo\Hahn_echo_wrap.c	858;"	d	file:
Py_NotImplemented	.\swig\example\example_wrap.c	858;"	d	file:
Py_NotImplemented	.\swig\example\get_rand_array\get_rand_array_wrap.c	858;"	d	file:
Py_NotImplemented	.\swig\ppg_lang\ppg_lang_wrap.c	858;"	d	file:
Py_NotImplemented	.\swig\ppg_lang\temp\ppg_temp_wrap.c	858;"	d	file:
Py_NotImplemented	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	858;"	d	file:
Py_TPFLAGS_HAVE_CLASS	.\ppg_wrap.c	756;"	d	file:
Py_TPFLAGS_HAVE_CLASS	.\swig\Hahn_echo\.c	756;"	d	file:
Py_TPFLAGS_HAVE_CLASS	.\swig\Hahn_echo\Hahn_echo_wrap.c	756;"	d	file:
Py_TPFLAGS_HAVE_CLASS	.\swig\example\example_wrap.c	756;"	d	file:
Py_TPFLAGS_HAVE_CLASS	.\swig\example\get_rand_array\get_rand_array_wrap.c	756;"	d	file:
Py_TPFLAGS_HAVE_CLASS	.\swig\ppg_lang\ppg_lang_wrap.c	756;"	d	file:
Py_TPFLAGS_HAVE_CLASS	.\swig\ppg_lang\temp\ppg_temp_wrap.c	756;"	d	file:
Py_TPFLAGS_HAVE_CLASS	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	756;"	d	file:
Py_TYPE	.\ppg_wrap.c	763;"	d	file:
Py_TYPE	.\swig\Hahn_echo\.c	763;"	d	file:
Py_TYPE	.\swig\Hahn_echo\Hahn_echo_wrap.c	763;"	d	file:
Py_TYPE	.\swig\example\example_wrap.c	763;"	d	file:
Py_TYPE	.\swig\example\get_rand_array\get_rand_array_wrap.c	763;"	d	file:
Py_TYPE	.\swig\ppg_lang\ppg_lang_wrap.c	763;"	d	file:
Py_TYPE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	763;"	d	file:
Py_TYPE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	763;"	d	file:
Py_VISIT	.\ppg_wrap.c	920;"	d	file:
Py_VISIT	.\swig\Hahn_echo\.c	920;"	d	file:
Py_VISIT	.\swig\Hahn_echo\Hahn_echo_wrap.c	920;"	d	file:
Py_VISIT	.\swig\example\example_wrap.c	920;"	d	file:
Py_VISIT	.\swig\example\get_rand_array\get_rand_array_wrap.c	920;"	d	file:
Py_VISIT	.\swig\ppg_lang\ppg_lang_wrap.c	920;"	d	file:
Py_VISIT	.\swig\ppg_lang\temp\ppg_temp_wrap.c	920;"	d	file:
Py_VISIT	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	920;"	d	file:
Py_hash_t	.\ppg_wrap.c	955;"	d	file:
Py_hash_t	.\swig\Hahn_echo\.c	955;"	d	file:
Py_hash_t	.\swig\Hahn_echo\Hahn_echo_wrap.c	955;"	d	file:
Py_hash_t	.\swig\example\example_wrap.c	955;"	d	file:
Py_hash_t	.\swig\example\get_rand_array\get_rand_array_wrap.c	955;"	d	file:
Py_hash_t	.\swig\ppg_lang\ppg_lang_wrap.c	955;"	d	file:
Py_hash_t	.\swig\ppg_lang\temp\ppg_temp_wrap.c	955;"	d	file:
Py_hash_t	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	955;"	d	file:
Py_ssize_t	.\ppg_wrap.c	/^typedef int Py_ssize_t;$/;"	t	file:
Py_ssize_t	.\swig\Hahn_echo\.c	/^typedef int Py_ssize_t;$/;"	t	file:
Py_ssize_t	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef int Py_ssize_t;$/;"	t	file:
Py_ssize_t	.\swig\example\example_wrap.c	/^typedef int Py_ssize_t;$/;"	t	file:
Py_ssize_t	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef int Py_ssize_t;$/;"	t	file:
Py_ssize_t	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef int Py_ssize_t;$/;"	t	file:
Py_ssize_t	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef int Py_ssize_t;$/;"	t	file:
Py_ssize_t	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef int Py_ssize_t;$/;"	t	file:
QueryDepthSList	.\SpinAPI\src\ddk_headers\winddk.h	4178;"	d
QueryDeviceRelations	.\SpinAPI\src\ddk_headers\winddk.h	/^    } QueryDeviceRelations;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon65
QueryDeviceText	.\SpinAPI\src\ddk_headers\winddk.h	/^    } QueryDeviceText;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon72
QueryFile	.\SpinAPI\src\ddk_headers\winddk.h	/^    } QueryFile;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon54
QueryId	.\SpinAPI\src\ddk_headers\winddk.h	/^    } QueryId;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon71
QueryInterface	.\SpinAPI\src\ddk_headers\winddk.h	/^    } QueryInterface;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon66
QueryRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PRTL_QUERY_REGISTRY_ROUTINE  QueryRoutine;$/;"	m	struct:_RTL_QUERY_REGISTRY_TABLE
QuerySecurity	.\SpinAPI\src\ddk_headers\winddk.h	/^    } QuerySecurity;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon60
QuerySecurityDescriptor	.\SpinAPI\src\ddk_headers\winddk.h	/^  QuerySecurityDescriptor,$/;"	e	enum:_SECURITY_OPERATION_CODE
QueryVolume	.\SpinAPI\src\ddk_headers\winddk.h	/^    } QueryVolume;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon58
Queue	.\SpinAPI\src\ddk_headers\winddk.h	/^  } Queue;$/;"	m	struct:_DEVICE_OBJECT	typeref:union:_DEVICE_OBJECT::__anon46
RAM_DIRECT	.\SpinAPI\include\radioprocessor.h	476;"	d
RAM_DIRECT	.\SpinAPI\src\radioprocessor.h	476;"	d
RAM_SIZE	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	37;"	d	file:
RATE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	43;"	d	file:
RATE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	43;"	d	file:
READOUT_DAC	.\mrispinapi.h	108;"	d
REF_LINE_FREQ	.\SpinAPI\src\fid.h	12;"	d
REF_POINT	.\SpinAPI\src\fid.h	13;"	d
REG	.\SpinAPI\src\if.h	53;"	d
REG_ADC_CONTROL	.\SpinAPI\src\if.h	18;"	d
REG_BINARY	.\SpinAPI\src\ddk_headers\winddk.h	2769;"	d
REG_CIC_CONTROL	.\SpinAPI\src\if.h	19;"	d
REG_CIC_CONTROL2	.\SpinAPI\src\if.h	35;"	d
REG_CONTROL	.\SpinAPI\src\if.h	15;"	d
REG_CORE_SEL	.\SpinAPI\src\if.h	34;"	d
REG_DAC_CONTROL	.\SpinAPI\src\if.h	17;"	d
REG_DATARAM_ADDR	.\SpinAPI\src\if.h	31;"	d
REG_DDS_CONTROL	.\SpinAPI\src\if.h	13;"	d
REG_DDS_DATA	.\SpinAPI\src\if.h	14;"	d
REG_DDS_DATA2	.\SpinAPI\src\if.h	29;"	d
REG_DEFAULT_FLAGS	.\SpinAPI\include\pulseblaster.h	61;"	d
REG_DEFAULT_FLAGS	.\SpinAPI\src\pulseblaster.h	61;"	d
REG_DWORD	.\SpinAPI\src\ddk_headers\winddk.h	2770;"	d
REG_DWORD_BIG_ENDIAN	.\SpinAPI\src\ddk_headers\winddk.h	2772;"	d
REG_DWORD_LITTLE_ENDIAN	.\SpinAPI\src\ddk_headers\winddk.h	2771;"	d
REG_EXPAND_SZ	.\SpinAPI\src\ddk_headers\winddk.h	2768;"	d
REG_EXPERIMENT_RUNNING	.\SpinAPI\src\if.h	24;"	d
REG_FIRMWARE_ID	.\SpinAPI\src\if.h	41;"	d
REG_FIRMWARE_ID_PCIE	.\SpinAPI\src\if.h	44;"	d
REG_FIRMWARE_ID_RPG	.\SpinAPI\src\if.h	43;"	d
REG_FIR_COEF_ADDR	.\SpinAPI\src\if.h	21;"	d
REG_FIR_COEF_DATA	.\SpinAPI\src\if.h	20;"	d
REG_FIR_CONTROL	.\SpinAPI\src\if.h	23;"	d
REG_FIR_NUM_TAPS	.\SpinAPI\src\if.h	22;"	d
REG_FULL_RESOURCE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	2776;"	d
REG_LINK	.\SpinAPI\src\ddk_headers\winddk.h	2773;"	d
REG_MULTI_SZ	.\SpinAPI\src\ddk_headers\winddk.h	2774;"	d
REG_NONE	.\SpinAPI\src\ddk_headers\winddk.h	2766;"	d
REG_OVERFLOW2_COUNT	.\SpinAPI\src\if.h	26;"	d
REG_OVERFLOW_COUNT	.\SpinAPI\src\if.h	25;"	d
REG_PBCORE	.\SpinAPI\src\if.h	32;"	d
REG_PBRAM_ADDR	.\SpinAPI\src\if.h	30;"	d
REG_PULSE_CLOCK_HIGH	.\SpinAPI\src\if.h	37;"	d
REG_PULSE_OFFSET	.\SpinAPI\src\if.h	38;"	d
REG_PULSE_PERIOD	.\SpinAPI\src\if.h	36;"	d
REG_PULSE_SYNC	.\SpinAPI\src\if.h	39;"	d
REG_QWORD	.\SpinAPI\src\ddk_headers\winddk.h	2778;"	d
REG_QWORD_LITTLE_ENDIAN	.\SpinAPI\src\ddk_headers\winddk.h	2779;"	d
REG_RESOURCE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	2775;"	d
REG_RESOURCE_REQUIREMENTS_LIST	.\SpinAPI\src\ddk_headers\winddk.h	2777;"	d
REG_SAMPLE_NUM	.\SpinAPI\src\if.h	16;"	d
REG_SCAN_COUNT	.\SpinAPI\src\if.h	28;"	d
REG_SCAN_SEGMENTS	.\SpinAPI\src\if.h	27;"	d
REG_SHAPE_CONTROL	.\SpinAPI\src\if.h	33;"	d
REG_SHORTPULSE_DISABLE	.\SpinAPI\include\pulseblaster.h	59;"	d
REG_SHORTPULSE_DISABLE	.\SpinAPI\src\pulseblaster.h	59;"	d
REG_START_ADDRESS	.\SpinAPI\include\pulseblaster.h	60;"	d
REG_START_ADDRESS	.\SpinAPI\src\pulseblaster.h	60;"	d
REG_SZ	.\SpinAPI\src\ddk_headers\winddk.h	2767;"	d
RESOURCE_HASH_TABLE_SIZE	.\SpinAPI\src\ddk_headers\winddk.h	2059;"	d
RESTRICTED_POINTER	.\SpinAPI\src\ddk_headers\winddk.h	64;"	d
RESULT_NEGATIVE	.\SpinAPI\src\ddk_headers\winddk.h	3788;"	d
RESULT_POSITIVE	.\SpinAPI\src\ddk_headers\winddk.h	3790;"	d
RESULT_ZERO	.\SpinAPI\src\ddk_headers\winddk.h	3789;"	d
RF_Shape	.\2D_MRI.py	/^RF_Shape=0$/;"	v
RINGDOWN_TIME	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set RINGDOWN_TIME=50$/;"	v
RINGDOWN_TIME	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set RINGDOWN_TIME=50$/;"	v
RINGDOWN_TIME	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set RINGDOWN_TIME=50$/;"	v
RINGDOWN_TIME	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set RINGDOWN_TIME=50$/;"	v
RIsD2XX	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR RIsD2XX;				\/\/ non-zero if using D2XX driver$/;"	m	struct:ft_program_data
ROMBaseAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^        ULONG  ROMBaseAddress;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
ROMBaseAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  ROMBaseAddress;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
ROUND_TO_PAGES	.\SpinAPI\src\ddk_headers\winddk.h	3971;"	d
RPC_NT_ADDRESS_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	946;"	d
RPC_NT_ALREADY_LISTENING	.\SpinAPI\src\ddk_headers\ntstatus.h	894;"	d
RPC_NT_ALREADY_REGISTERED	.\SpinAPI\src\ddk_headers\ntstatus.h	892;"	d
RPC_NT_BAD_STUB_DATA	.\SpinAPI\src\ddk_headers\ntstatus.h	961;"	d
RPC_NT_BINDING_HAS_NO_AUTH	.\SpinAPI\src\ddk_headers\ntstatus.h	924;"	d
RPC_NT_BINDING_INCOMPLETE	.\SpinAPI\src\ddk_headers\ntstatus.h	969;"	d
RPC_NT_BYTE_COUNT_TOO_SMALL	.\SpinAPI\src\ddk_headers\ntstatus.h	960;"	d
RPC_NT_CALL_CANCELLED	.\SpinAPI\src\ddk_headers\ntstatus.h	968;"	d
RPC_NT_CALL_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	907;"	d
RPC_NT_CALL_FAILED_DNE	.\SpinAPI\src\ddk_headers\ntstatus.h	908;"	d
RPC_NT_CALL_IN_PROGRESS	.\SpinAPI\src\ddk_headers\ntstatus.h	962;"	d
RPC_NT_CANNOT_SUPPORT	.\SpinAPI\src\ddk_headers\ntstatus.h	942;"	d
RPC_NT_CANT_CREATE_ENDPOINT	.\SpinAPI\src\ddk_headers\ntstatus.h	901;"	d
RPC_NT_COMM_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	970;"	d
RPC_NT_DUPLICATE_ENDPOINT	.\SpinAPI\src\ddk_headers\ntstatus.h	918;"	d
RPC_NT_ENTRY_ALREADY_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	938;"	d
RPC_NT_ENTRY_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	939;"	d
RPC_NT_ENUM_VALUE_OUT_OF_RANGE	.\SpinAPI\src\ddk_headers\ntstatus.h	959;"	d
RPC_NT_FP_DIV_ZERO	.\SpinAPI\src\ddk_headers\ntstatus.h	947;"	d
RPC_NT_FP_OVERFLOW	.\SpinAPI\src\ddk_headers\ntstatus.h	949;"	d
RPC_NT_FP_UNDERFLOW	.\SpinAPI\src\ddk_headers\ntstatus.h	948;"	d
RPC_NT_GROUP_MEMBER_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	964;"	d
RPC_NT_INCOMPLETE_NAME	.\SpinAPI\src\ddk_headers\ntstatus.h	933;"	d
RPC_NT_INTERFACE_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	937;"	d
RPC_NT_INTERNAL_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	944;"	d
RPC_NT_INVALID_ASYNC_CALL	.\SpinAPI\src\ddk_headers\ntstatus.h	987;"	d
RPC_NT_INVALID_ASYNC_HANDLE	.\SpinAPI\src\ddk_headers\ntstatus.h	986;"	d
RPC_NT_INVALID_AUTH_IDENTITY	.\SpinAPI\src\ddk_headers\ntstatus.h	927;"	d
RPC_NT_INVALID_BINDING	.\SpinAPI\src\ddk_headers\ntstatus.h	883;"	d
RPC_NT_INVALID_BOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	913;"	d
RPC_NT_INVALID_ENDPOINT_FORMAT	.\SpinAPI\src\ddk_headers\ntstatus.h	887;"	d
RPC_NT_INVALID_ES_ACTION	.\SpinAPI\src\ddk_headers\ntstatus.h	977;"	d
RPC_NT_INVALID_NAF_ID	.\SpinAPI\src\ddk_headers\ntstatus.h	941;"	d
RPC_NT_INVALID_NAME_SYNTAX	.\SpinAPI\src\ddk_headers\ntstatus.h	915;"	d
RPC_NT_INVALID_NETWORK_OPTIONS	.\SpinAPI\src\ddk_headers\ntstatus.h	905;"	d
RPC_NT_INVALID_NET_ADDR	.\SpinAPI\src\ddk_headers\ntstatus.h	888;"	d
RPC_NT_INVALID_OBJECT	.\SpinAPI\src\ddk_headers\ntstatus.h	966;"	d
RPC_NT_INVALID_PIPE_OBJECT	.\SpinAPI\src\ddk_headers\ntstatus.h	980;"	d
RPC_NT_INVALID_PIPE_OPERATION	.\SpinAPI\src\ddk_headers\ntstatus.h	981;"	d
RPC_NT_INVALID_RPC_PROTSEQ	.\SpinAPI\src\ddk_headers\ntstatus.h	885;"	d
RPC_NT_INVALID_STRING_BINDING	.\SpinAPI\src\ddk_headers\ntstatus.h	881;"	d
RPC_NT_INVALID_STRING_UUID	.\SpinAPI\src\ddk_headers\ntstatus.h	886;"	d
RPC_NT_INVALID_TAG	.\SpinAPI\src\ddk_headers\ntstatus.h	912;"	d
RPC_NT_INVALID_TIMEOUT	.\SpinAPI\src\ddk_headers\ntstatus.h	890;"	d
RPC_NT_INVALID_VERS_OPTION	.\SpinAPI\src\ddk_headers\ntstatus.h	934;"	d
RPC_NT_MAX_CALLS_TOO_SMALL	.\SpinAPI\src\ddk_headers\ntstatus.h	920;"	d
RPC_NT_NAME_SERVICE_UNAVAILABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	940;"	d
RPC_NT_NOTHING_TO_EXPORT	.\SpinAPI\src\ddk_headers\ntstatus.h	932;"	d
RPC_NT_NOT_ALL_OBJS_UNEXPORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	936;"	d
RPC_NT_NOT_CANCELLED	.\SpinAPI\src\ddk_headers\ntstatus.h	976;"	d
RPC_NT_NOT_LISTENING	.\SpinAPI\src\ddk_headers\ntstatus.h	896;"	d
RPC_NT_NOT_RPC_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	973;"	d
RPC_NT_NO_BINDINGS	.\SpinAPI\src\ddk_headers\ntstatus.h	899;"	d
RPC_NT_NO_CALL_ACTIVE	.\SpinAPI\src\ddk_headers\ntstatus.h	906;"	d
RPC_NT_NO_CONTEXT_AVAILABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	943;"	d
RPC_NT_NO_ENDPOINT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	889;"	d
RPC_NT_NO_ENTRY_NAME	.\SpinAPI\src\ddk_headers\ntstatus.h	914;"	d
RPC_NT_NO_INTERFACES	.\SpinAPI\src\ddk_headers\ntstatus.h	967;"	d
RPC_NT_NO_MORE_BINDINGS	.\SpinAPI\src\ddk_headers\ntstatus.h	963;"	d
RPC_NT_NO_MORE_ENTRIES	.\SpinAPI\src\ddk_headers\ntstatus.h	950;"	d
RPC_NT_NO_MORE_MEMBERS	.\SpinAPI\src\ddk_headers\ntstatus.h	935;"	d
RPC_NT_NO_PRINC_NAME	.\SpinAPI\src\ddk_headers\ntstatus.h	972;"	d
RPC_NT_NO_PROTSEQS	.\SpinAPI\src\ddk_headers\ntstatus.h	900;"	d
RPC_NT_NO_PROTSEQS_REGISTERED	.\SpinAPI\src\ddk_headers\ntstatus.h	895;"	d
RPC_NT_NULL_REF_POINTER	.\SpinAPI\src\ddk_headers\ntstatus.h	958;"	d
RPC_NT_OBJECT_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	891;"	d
RPC_NT_OUT_OF_RESOURCES	.\SpinAPI\src\ddk_headers\ntstatus.h	902;"	d
RPC_NT_PIPE_CLOSED	.\SpinAPI\src\ddk_headers\ntstatus.h	983;"	d
RPC_NT_PIPE_DISCIPLINE_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	984;"	d
RPC_NT_PIPE_EMPTY	.\SpinAPI\src\ddk_headers\ntstatus.h	985;"	d
RPC_NT_PROCNUM_OUT_OF_RANGE	.\SpinAPI\src\ddk_headers\ntstatus.h	923;"	d
RPC_NT_PROTOCOL_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	909;"	d
RPC_NT_PROTSEQ_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	922;"	d
RPC_NT_PROTSEQ_NOT_SUPPORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	884;"	d
RPC_NT_SEC_PKG_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	975;"	d
RPC_NT_SEND_INCOMPLETE	.\SpinAPI\src\ddk_headers\ntstatus.h	988;"	d
RPC_NT_SERVER_TOO_BUSY	.\SpinAPI\src\ddk_headers\ntstatus.h	904;"	d
RPC_NT_SERVER_UNAVAILABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	903;"	d
RPC_NT_SS_CANNOT_GET_CALL_HANDLE	.\SpinAPI\src\ddk_headers\ntstatus.h	957;"	d
RPC_NT_SS_CHAR_TRANS_OPEN_FAIL	.\SpinAPI\src\ddk_headers\ntstatus.h	951;"	d
RPC_NT_SS_CHAR_TRANS_SHORT_FILE	.\SpinAPI\src\ddk_headers\ntstatus.h	952;"	d
RPC_NT_SS_CONTEXT_DAMAGED	.\SpinAPI\src\ddk_headers\ntstatus.h	955;"	d
RPC_NT_SS_CONTEXT_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	954;"	d
RPC_NT_SS_HANDLES_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	956;"	d
RPC_NT_SS_IN_NULL_CONTEXT	.\SpinAPI\src\ddk_headers\ntstatus.h	953;"	d
RPC_NT_STRING_TOO_LONG	.\SpinAPI\src\ddk_headers\ntstatus.h	921;"	d
RPC_NT_TYPE_ALREADY_REGISTERED	.\SpinAPI\src\ddk_headers\ntstatus.h	893;"	d
RPC_NT_UNKNOWN_AUTHN_LEVEL	.\SpinAPI\src\ddk_headers\ntstatus.h	926;"	d
RPC_NT_UNKNOWN_AUTHN_SERVICE	.\SpinAPI\src\ddk_headers\ntstatus.h	925;"	d
RPC_NT_UNKNOWN_AUTHN_TYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	919;"	d
RPC_NT_UNKNOWN_AUTHZ_SERVICE	.\SpinAPI\src\ddk_headers\ntstatus.h	928;"	d
RPC_NT_UNKNOWN_IF	.\SpinAPI\src\ddk_headers\ntstatus.h	898;"	d
RPC_NT_UNKNOWN_MGR_TYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	897;"	d
RPC_NT_UNSUPPORTED_AUTHN_LEVEL	.\SpinAPI\src\ddk_headers\ntstatus.h	971;"	d
RPC_NT_UNSUPPORTED_NAME_SYNTAX	.\SpinAPI\src\ddk_headers\ntstatus.h	916;"	d
RPC_NT_UNSUPPORTED_TRANS_SYN	.\SpinAPI\src\ddk_headers\ntstatus.h	910;"	d
RPC_NT_UNSUPPORTED_TYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	911;"	d
RPC_NT_UUID_LOCAL_ONLY	.\SpinAPI\src\ddk_headers\ntstatus.h	974;"	d
RPC_NT_UUID_NO_ADDRESS	.\SpinAPI\src\ddk_headers\ntstatus.h	917;"	d
RPC_NT_WRONG_ES_VERSION	.\SpinAPI\src\ddk_headers\ntstatus.h	978;"	d
RPC_NT_WRONG_KIND_OF_BINDING	.\SpinAPI\src\ddk_headers\ntstatus.h	882;"	d
RPC_NT_WRONG_PIPE_VERSION	.\SpinAPI\src\ddk_headers\ntstatus.h	982;"	d
RPC_NT_WRONG_STUB_VERSION	.\SpinAPI\src\ddk_headers\ntstatus.h	979;"	d
RPC_NT_ZERO_DIVIDE	.\SpinAPI\src\ddk_headers\ntstatus.h	945;"	d
RREG_FIRMWARE_ID	.\mrispinapi.h	123;"	d
RREG_STATUS	.\mrispinapi.h	122;"	d
RS485EchoSuppress	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR RS485EchoSuppress;	\/\/ $/;"	m	struct:ft_eeprom_x_series
RST_L	.\SpinAPI\src\usb.h	34;"	d
RTI	.\SpinAPI\include\pulseblaster.h	32;"	d
RTI	.\SpinAPI\src\pulseblaster.h	32;"	d
RTI	.\mrispinapi.h	98;"	d
RTL_BITMAP	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_BITMAP, *PRTL_BITMAP;$/;"	t	typeref:struct:_RTL_BITMAP
RTL_BITMAP_RUN	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_BITMAP_RUN, *PRTL_BITMAP_RUN;$/;"	t	typeref:struct:_RTL_BITMAP_RUN
RTL_OSVERSIONINFOEXW	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_OSVERSIONINFOEXW, *PRTL_OSVERSIONINFOEXW;$/;"	t	typeref:struct:_RTL_OSVERSIONINFOEXW
RTL_OSVERSIONINFOW	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_OSVERSIONINFOW, *PRTL_OSVERSIONINFOW;$/;"	t	typeref:struct:_RTL_OSVERSIONINFOW
RTL_QUERY_REGISTRY_DELETE	.\SpinAPI\src\ddk_headers\winddk.h	3035;"	d
RTL_QUERY_REGISTRY_DIRECT	.\SpinAPI\src\ddk_headers\winddk.h	3034;"	d
RTL_QUERY_REGISTRY_NOEXPAND	.\SpinAPI\src\ddk_headers\winddk.h	3033;"	d
RTL_QUERY_REGISTRY_NOVALUE	.\SpinAPI\src\ddk_headers\winddk.h	3032;"	d
RTL_QUERY_REGISTRY_REQUIRED	.\SpinAPI\src\ddk_headers\winddk.h	3031;"	d
RTL_QUERY_REGISTRY_SUBKEY	.\SpinAPI\src\ddk_headers\winddk.h	3029;"	d
RTL_QUERY_REGISTRY_TABLE	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_QUERY_REGISTRY_TABLE, *PRTL_QUERY_REGISTRY_TABLE;$/;"	t	typeref:struct:_RTL_QUERY_REGISTRY_TABLE
RTL_QUERY_REGISTRY_TOPKEY	.\SpinAPI\src\ddk_headers\winddk.h	3030;"	d
RTL_RANGE	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_RANGE, *PRTL_RANGE;$/;"	t	typeref:struct:_RTL_RANGE
RTL_RANGE_CONFLICT	.\SpinAPI\src\ddk_headers\winddk.h	3643;"	d
RTL_RANGE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_RANGE_LIST, *PRTL_RANGE_LIST;$/;"	t	typeref:struct:_RTL_RANGE_LIST
RTL_RANGE_LIST_ADD_IF_CONFLICT	.\SpinAPI\src\ddk_headers\winddk.h	3622;"	d
RTL_RANGE_LIST_ADD_SHARED	.\SpinAPI\src\ddk_headers\winddk.h	3623;"	d
RTL_RANGE_LIST_ITERATOR	.\SpinAPI\src\ddk_headers\winddk.h	/^} RTL_RANGE_LIST_ITERATOR, *PRTL_RANGE_LIST_ITERATOR;$/;"	t	typeref:struct:_RANGE_LIST_ITERATOR
RTL_RANGE_LIST_MERGE_IF_CONFLICT	.\SpinAPI\src\ddk_headers\winddk.h	3631;"	d
RTL_RANGE_LIST_NULL_CONFLICT_OK	.\SpinAPI\src\ddk_headers\winddk.h	3626;"	d
RTL_RANGE_LIST_NULL_CONFLICT_OK	.\SpinAPI\src\ddk_headers\winddk.h	3629;"	d
RTL_RANGE_LIST_SHARED_OK	.\SpinAPI\src\ddk_headers\winddk.h	3625;"	d
RTL_RANGE_LIST_SHARED_OK	.\SpinAPI\src\ddk_headers\winddk.h	3628;"	d
RTL_RANGE_SHARED	.\SpinAPI\src\ddk_headers\winddk.h	3642;"	d
RTL_REGISTRY_ABSOLUTE	.\SpinAPI\src\ddk_headers\winddk.h	3021;"	d
RTL_REGISTRY_CONTROL	.\SpinAPI\src\ddk_headers\winddk.h	3023;"	d
RTL_REGISTRY_DEVICEMAP	.\SpinAPI\src\ddk_headers\winddk.h	3025;"	d
RTL_REGISTRY_SERVICES	.\SpinAPI\src\ddk_headers\winddk.h	3022;"	d
RTL_REGISTRY_USER	.\SpinAPI\src\ddk_headers\winddk.h	3026;"	d
RTL_REGISTRY_WINDOWS_NT	.\SpinAPI\src\ddk_headers\winddk.h	3024;"	d
RTL_SOFT_ASSERT	.\SpinAPI\src\ddk_headers\winddk.h	3993;"	d
RTL_SOFT_ASSERT	.\SpinAPI\src\ddk_headers\winddk.h	4012;"	d
RTL_SOFT_ASSERTMSG	.\SpinAPI\src\ddk_headers\winddk.h	3997;"	d
RTL_SOFT_ASSERTMSG	.\SpinAPI\src\ddk_headers\winddk.h	4013;"	d
RTL_SOFT_VERIFY	.\SpinAPI\src\ddk_headers\winddk.h	4004;"	d
RTL_SOFT_VERIFY	.\SpinAPI\src\ddk_headers\winddk.h	4018;"	d
RTL_SOFT_VERIFYMSG	.\SpinAPI\src\ddk_headers\winddk.h	4005;"	d
RTL_SOFT_VERIFYMSG	.\SpinAPI\src\ddk_headers\winddk.h	4019;"	d
RTL_VERIFY	.\SpinAPI\src\ddk_headers\winddk.h	4001;"	d
RTL_VERIFY	.\SpinAPI\src\ddk_headers\winddk.h	4015;"	d
RTL_VERIFYMSG	.\SpinAPI\src\ddk_headers\winddk.h	4002;"	d
RTL_VERIFYMSG	.\SpinAPI\src\ddk_headers\winddk.h	4016;"	d
RTS	.\SpinAPI\include\pulseblaster.h	28;"	d
RTS	.\SpinAPI\src\pulseblaster.h	28;"	d
RTS	.\mrispinapi.h	94;"	d
RX_ANALOG_OFF	.\SpinAPI\include\radioprocessor.h	33;"	d
RX_ANALOG_OFF	.\SpinAPI\src\radioprocessor.h	33;"	d
RX_ANALOG_ON	.\SpinAPI\include\radioprocessor.h	32;"	d
RX_ANALOG_ON	.\SpinAPI\src\radioprocessor.h	32;"	d
RX_AND_TX_DISABLED	.\Sleator_apps\CPMG\cpmg.h	65;"	d
RX_AND_TX_DISABLED	.\Sleator_apps\Hahn_echo\Hahn_echo.h	72;"	d
RX_AND_TX_DISABLED	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	69;"	d
RX_AND_TX_DISABLED	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	72;"	d
RX_AND_TX_DISABLED	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	69;"	d
RX_AND_TX_DISABLED	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	62;"	d
RX_AND_TX_DISABLED	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	61;"	d
RX_PHASE_REGS	.\SpinAPI\include\radioprocessor.h	16;"	d
RX_PHASE_REGS	.\SpinAPI\src\radioprocessor.h	16;"	d
Range	.\SpinAPI\src\ddk_headers\winddk.h	/^        } Range[PCI_TYPE2_ADDRESSES - 1];$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2	typeref:struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2::__anon81
RangeListHead	.\SpinAPI\src\ddk_headers\winddk.h	/^  PLIST_ENTRY  RangeListHead;$/;"	m	struct:_RANGE_LIST_ITERATOR
RawDeviceOK	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  RawDeviceOK : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
Read	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Read;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon52
ReadAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  ReadAccess;$/;"	m	struct:_FILE_OBJECT
ReadDmaCounter	.\SpinAPI\src\ddk_headers\winddk.h	/^  PREAD_DMA_COUNTER  ReadDmaCounter;$/;"	m	struct:_DMA_OPERATIONS
ReadIntervalTimeout	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD ReadIntervalTimeout;			\/* Maximum time between read chars.	*\/$/;"	m	struct:_FTTIMEOUTS
ReadTotalTimeoutConstant	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD ReadTotalTimeoutConstant;		\/* Constant in milliseconds.		*\/$/;"	m	struct:_FTTIMEOUTS
ReadTotalTimeoutMultiplier	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD ReadTotalTimeoutMultiplier;	\/* Multiplier of characters.		*\/$/;"	m	struct:_FTTIMEOUTS
ReadWrite	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  ReadWrite : 1;$/;"	m	struct:_EISA_MEMORY_TYPE
ReadWriteConfig	.\SpinAPI\src\ddk_headers\winddk.h	/^    } ReadWriteConfig;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon69
ReadWriteGapLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  ReadWriteGapLength;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
Readers	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Readers;$/;"	m	struct:_SHARE_ACCESS
RealDevice	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _DEVICE_OBJECT  *RealDevice;$/;"	m	struct:_VPB	typeref:struct:_VPB::_DEVICE_OBJECT
RealModeIrqRoutingTable	.\SpinAPI\src\ddk_headers\winddk.h	/^  RealModeIrqRoutingTable,$/;"	e	enum:_CONFIGURATION_TYPE
Recipient	.\SpinAPI\src\cyioctl.h	/^    UCHAR   Recipient:2;$/;"	m	struct:_BM_REQ_TYPE
RecognizedPartition	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  RecognizedPartition;$/;"	m	struct:_PARTITION_INFORMATION_MBR
ReferenceCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONG  ReferenceCount;$/;"	m	struct:_DEVICE_OBJECT
ReferenceCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ReferenceCount;$/;"	m	struct:_VPB
RelatedFileObject	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _FILE_OBJECT  *RelatedFileObject;$/;"	m	struct:_FILE_OBJECT	typeref:struct:_FILE_OBJECT::_FILE_OBJECT
ReleaseFileForNtCreateSection	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_RELEASE_FILE  ReleaseFileForNtCreateSection;$/;"	m	struct:_FAST_IO_DISPATCH
ReleaseForCcFlush	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_RELEASE_FOR_CCFLUSH  ReleaseForCcFlush;$/;"	m	struct:_FAST_IO_DISPATCH
ReleaseForModWrite	.\SpinAPI\src\ddk_headers\winddk.h	/^  PFAST_IO_RELEASE_FOR_MOD_WRITE  ReleaseForModWrite;$/;"	m	struct:_FAST_IO_DISPATCH
RemainingDesiredAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  ACCESS_MASK  RemainingDesiredAccess;$/;"	m	struct:_ACCESS_STATE
RemoteWakeup	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR RemoteWakeup;			\/\/ 0 = not capable, 1 = capable$/;"	m	struct:ft_eeprom_header
RemoteWakeup	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD RemoteWakeup;			\/\/ 0 = not capable, 1 = capable$/;"	m	struct:ft_program_data
Removable	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Removable : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
RemovalRelations	.\SpinAPI\src\ddk_headers\winddk.h	/^  RemovalRelations,$/;"	e	enum:_DEVICE_RELATION_TYPE
RemoveEntryList	.\SpinAPI\src\ddk_headers\winddk.h	4115;"	d
RemoveEvent	.\SpinAPI\src\ddk_headers\winddk.h	/^  KEVENT  RemoveEvent;$/;"	m	struct:_IO_REMOVE_LOCK_COMMON_BLOCK
RemoveHeadList	.\SpinAPI\src\ddk_headers\winddk.h	/^RemoveHeadList($/;"	f
RemoveTailList	.\SpinAPI\src\ddk_headers\winddk.h	/^RemoveTailList($/;"	f
Removed	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Removed;$/;"	m	struct:_IO_REMOVE_LOCK_COMMON_BLOCK
ReparseTag	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ReparseTag;                                           $/;"	m	struct:_FILE_ATTRIBUTE_TAG_INFORMATION
ReplaceIfExists	.\SpinAPI\src\ddk_headers\winddk.h	/^          BOOLEAN  ReplaceIfExists;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon55::__anon56::__anon57
RequestorMode	.\SpinAPI\src\ddk_headers\winddk.h	/^  KPROCESSOR_MODE  RequestorMode;$/;"	m	struct:_IRP
ReservePointer	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  ReservePointer;$/;"	m	struct:_IO_CSQ
Reserved	.\SpinAPI\src\cyioctl.h	/^    UCHAR   Reserved:3;$/;"	m	struct:_BM_REQ_TYPE
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  Reserved;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^      BOOLEAN  Reserved[3];$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon73
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Reserved             : 22;$/;"	m	struct:_IMAGE_INFO::__anon84::__anon85
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Reserved : 24;$/;"	m	struct:_PCI_SLOT_NUMBER::__anon82::__anon83
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Reserved;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon44
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Reserved;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon35
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Reserved[3];$/;"	m	struct:_IO_REMOVE_LOCK_COMMON_BLOCK
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Reserved;$/;"	m	struct:_DEVICE_OBJECT
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Reserved : 1;$/;"	m	struct:_EISA_IRQ_DESCRIPTOR
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Reserved : 1;$/;"	m	struct:_EISA_PORT_DESCRIPTOR
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Reserved;$/;"	m	struct:_EISA_IRQ_CONFIGURATION
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR Reserved : 3;$/;"	m	struct:_DMA_CONFIGURATION_BYTE0
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Reserved : 14;$/;"	m	struct:_DEVICE_CAPABILITIES
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Reserved[3];$/;"	m	struct:_IO_RESOURCE_REQUIREMENTS_LIST
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG_PTR  Reserved;$/;"	m	struct:_SCATTER_GATHER_ELEMENT
Reserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG_PTR  Reserved;$/;"	m	struct:_SCATTER_GATHER_LIST
Reserved	.\SpinAPI\src\ddk_headers\winnt4.h	/^  PVOID  Reserved;$/;"	m	struct:_ZONE_SEGMENT_HEADER
Reserved0	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Reserved0 : 1;$/;"	m	struct:_EISA_MEMORY_TYPE
Reserved0	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Reserved0 : 2;$/;"	m	struct:_DMA_CONFIGURATION_BYTE1
Reserved1	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  Reserved1[3];$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
Reserved1	.\SpinAPI\src\ddk_headers\winddk.h	/^      UCHAR  Reserved1[3];$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
Reserved1	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Reserved1;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon45
Reserved1	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Reserved1;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon33
Reserved1	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Reserved1;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon36
Reserved1	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  Reserved1;$/;"	m	struct:_DEVICE_DESCRIPTION
Reserved1	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Reserved1 : 1;$/;"	m	struct:_EISA_MEMORY_TYPE
Reserved1	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Reserved1 : 2;$/;"	m	struct:_DMA_CONFIGURATION_BYTE1
Reserved1	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Reserved1[4];$/;"	m	struct:_IO_REMOVE_LOCK_DBG_BLOCK
Reserved2	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Reserved2;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR::__anon37::__anon45
Reserved2	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Reserved2;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
Reserved2	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Reserved2;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon36
Reserved2	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  Reserved2;$/;"	m	struct:_IO_REMOVE_LOCK_DBG_BLOCK
Resize	.\SpinAPI\interpreter\src\gui.cpp	/^void Resize()$/;"	f
ResourceNeverExclusive	.\SpinAPI\src\ddk_headers\winddk.h	2055;"	d
ResourceOwnedExclusive	.\SpinAPI\src\ddk_headers\winddk.h	2057;"	d
ResourceReleaseByOtherThread	.\SpinAPI\src\ddk_headers\winddk.h	2056;"	d
ResultNegative	.\SpinAPI\src\ddk_headers\winddk.h	/^  ResultNegative = RESULT_NEGATIVE,$/;"	e	enum:_INTERLOCKED_RESULT
ResultPositive	.\SpinAPI\src\ddk_headers\winddk.h	/^  ResultPositive = RESULT_POSITIVE$/;"	e	enum:_INTERLOCKED_RESULT
ResultZero	.\SpinAPI\src\ddk_headers\winddk.h	/^  ResultZero = RESULT_ZERO,$/;"	e	enum:_INTERLOCKED_RESULT
RetryCount	.\SpinAPI\src\ddk_headers\winddk.h	/^	UCHAR  RetryCount; $/;"	m	struct:_IO_ERROR_LOG_PACKET
ReturnCode	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  ReturnCode;$/;"	m	struct:_CM_EISA_SLOT_INFORMATION
ReturnFlags	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  ReturnFlags;$/;"	m	struct:_CM_EISA_SLOT_INFORMATION
Rev4	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Rev4;					\/\/ non-zero if Rev4 chip, zero otherwise$/;"	m	struct:ft_program_data
Rev5	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR Rev5;					\/\/ non-zero if Rev5 chip, zero otherwise$/;"	m	struct:ft_program_data
Revision	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Revision;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
Revision	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Revision;$/;"	m	struct:_CM_KEYBOARD_DEVICE_DATA
Revision	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Revision;$/;"	m	struct:_CM_PARTIAL_RESOURCE_LIST
Revision	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Revision;$/;"	m	struct:_CM_SCSI_DEVICE_DATA
Revision	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Revision;$/;"	m	struct:_CM_SERIAL_DEVICE_DATA
Revision	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Revision;$/;"	m	struct:_IO_RESOURCE_LIST
RevisionID	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  RevisionID;$/;"	m	struct:_PCI_COMMON_CONFIG
RtlCopyBytes	.\SpinAPI\src\ddk_headers\winddk.h	4343;"	d
RtlCopyMemory	.\SpinAPI\src\ddk_headers\winddk.h	4338;"	d
RtlCopyMemoryNonTemporal	.\SpinAPI\src\ddk_headers\winddk.h	3905;"	d
RtlEqualLuid	.\SpinAPI\src\ddk_headers\winddk.h	4428;"	d
RtlEqualMemory	.\SpinAPI\src\ddk_headers\winddk.h	4439;"	d
RtlFillBytes	.\SpinAPI\src\ddk_headers\winddk.h	4470;"	d
RtlFillMemory	.\SpinAPI\src\ddk_headers\winddk.h	4465;"	d
RtlIsZeroLuid	.\SpinAPI\src\ddk_headers\winddk.h	4728;"	d
RtlMoveMemory	.\SpinAPI\src\ddk_headers\winddk.h	4760;"	d
RtlZeroBytes	.\SpinAPI\src\ddk_headers\winddk.h	5032;"	d
RtlZeroMemory	.\SpinAPI\src\ddk_headers\winddk.h	5027;"	d
RundownRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PKRUNDOWN_ROUTINE  RundownRoutine;$/;"	m	struct:_KAPC
SCALE_OFFSET	.\SpinAPI\src\fid.h	24;"	d
SCANPARAMS	.\CPMG.h	/^    } SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\CPMG.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\Field_Sweep.h	/^    } SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\Field_Sweep.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\GradientEcho.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\GradientEcho.h	/^} SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\Hahn_echo.h	/^    } SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\Hahn_echo.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\IR.h	/^    } SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\IR.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\JFAB_Hahn_echo_hardcode.c	/^    } SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS	file:
SCANPARAMS	.\JFAB_Hahn_echo_hardcode.c	/^typedef struct SCANPARAMS$/;"	s	file:
SCANPARAMS	.\Sleator_apps\CPMG\cpmg.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\Sleator_apps\CPMG\cpmg.h	/^} SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^} SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^} SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^} SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^} SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^} SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^} SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\nutation.h	/^    } SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\nutation.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\nutation90.h	/^    } SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\nutation90.h	/^typedef struct SCANPARAMS$/;"	s
SCANPARAMS	.\p90.h	/^    } SCANPARAMS;$/;"	t	typeref:struct:SCANPARAMS
SCANPARAMS	.\p90.h	/^typedef struct SCANPARAMS$/;"	s
SCATTER_GATHER_ELEMENT	.\SpinAPI\src\ddk_headers\winddk.h	/^} SCATTER_GATHER_ELEMENT, *PSCATTER_GATHER_ELEMENT;$/;"	t	typeref:struct:_SCATTER_GATHER_ELEMENT
SCATTER_GATHER_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^} SCATTER_GATHER_LIST, *PSCATTER_GATHER_LIST;$/;"	t	typeref:struct:_SCATTER_GATHER_LIST
SECTION_OBJECT_POINTERS	.\SpinAPI\src\ddk_headers\winddk.h	/^} SECTION_OBJECT_POINTERS, *PSECTION_OBJECT_POINTERS;$/;"	t	typeref:struct:_SECTION_OBJECT_POINTERS
SECURITY_OPERATION_CODE	.\SpinAPI\src\ddk_headers\winddk.h	/^} SECURITY_OPERATION_CODE, *PSECURITY_OPERATION_CODE;$/;"	t	typeref:enum:_SECURITY_OPERATION_CODE
SECURITY_SUBJECT_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^} SECURITY_SUBJECT_CONTEXT, *PSECURITY_SUBJECT_CONTEXT;$/;"	t	typeref:struct:_SECURITY_SUBJECT_CONTEXT
SEC_NO_CHANGE	.\SpinAPI\src\ddk_headers\winddk.h	8934;"	d
SELECT_AUX_DDS	.\SpinAPI\include\radioprocessor.h	471;"	d
SELECT_AUX_DDS	.\SpinAPI\src\radioprocessor.h	471;"	d
SELECT_INTERNAL_DDS	.\SpinAPI\include\radioprocessor.h	473;"	d
SELECT_INTERNAL_DDS	.\SpinAPI\src\radioprocessor.h	473;"	d
SEMAPHORE_INCREMENT	.\SpinAPI\src\ddk_headers\winddk.h	940;"	d
SETUP_PACKET	.\SpinAPI\src\cyioctl.h	/^} SETUP_PACKET, *PSETUP_PACKET;$/;"	t	typeref:struct:_SETUP_PACKET
SET_TRANSFER_SIZE_INFO	.\SpinAPI\src\cyioctl.h	/^} SET_TRANSFER_SIZE_INFO, *PSET_TRANSFER_SIZE_INFO;$/;"	t	typeref:struct:_SET_TRANSFER_SIZE_INFO
SF	.\Sleator_apps\CPMG\cpmg.h	/^	double SF;                  \/\/MHz$/;"	m	struct:SCANPARAMS
SF	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double SF;$/;"	m	struct:SCANPARAMS
SF	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double SF;$/;"	m	struct:SCANPARAMS
SF	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double SF;$/;"	m	struct:SCANPARAMS
SF	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double SF;$/;"	m	struct:SCANPARAMS
SF	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	double SF;                  \/\/MHz$/;"	m	struct:SCANPARAMS
SF_MHZ	.\adc_offset.c	9;"	d	file:
SHAPE_AMP_WE	.\SpinAPI\src\if.h	69;"	d
SHAPE_DATA_ERROR	.\devices.h	38;"	d
SHAPE_DDSRAM_WRITE_SEL	.\SpinAPI\src\if.h	66;"	d
SHAPE_FREQ_WE	.\SpinAPI\src\if.h	65;"	d
SHAPE_NUM_POINTS_ERROR	.\devices.h	37;"	d
SHAPE_SHAPERAM_WRITE_SEL	.\SpinAPI\src\if.h	67;"	d
SHAPE_WRITE_ADDR_SEL	.\SpinAPI\src\if.h	68;"	d
SHARE_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	/^} SHARE_ACCESS, *PSHARE_ACCESS;$/;"	t	typeref:struct:_SHARE_ACCESS
SINGLE_TRANSFER	.\SpinAPI\src\cyioctl.h	/^} SINGLE_TRANSFER, *PSINGLE_TRANSFER;$/;"	t	typeref:struct:_SINGLE_TRANSFER
SIN_PHASE_REGS	.\SpinAPI\include\radioprocessor.h	21;"	d
SIN_PHASE_REGS	.\SpinAPI\src\radioprocessor.h	21;"	d
SIX_PERIOD	.\SpinAPI\include\pulseblaster.h	56;"	d
SIX_PERIOD	.\SpinAPI\src\pulseblaster.h	56;"	d
SLICE_DAC	.\mrispinapi.h	106;"	d
SLICE_RISETIME_US	.\GradientEcho.c	30;"	d	file:
SL_ALLOW_RAW_MOUNT	.\SpinAPI\src\ddk_headers\winddk.h	1019;"	d
SL_CASE_SENSITIVE	.\SpinAPI\src\ddk_headers\winddk.h	1003;"	d
SL_EXCLUSIVE_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	1011;"	d
SL_FAIL_IMMEDIATELY	.\SpinAPI\src\ddk_headers\winddk.h	1010;"	d
SL_FORCE_ACCESS_CHECK	.\SpinAPI\src\ddk_headers\winddk.h	1000;"	d
SL_FT_SEQUENTIAL_WRITE	.\SpinAPI\src\ddk_headers\winddk.h	1008;"	d
SL_INDEX_SPECIFIED	.\SpinAPI\src\ddk_headers\winddk.h	1015;"	d
SL_INVOKE_ON_CANCEL	.\SpinAPI\src\ddk_headers\winddk.h	2677;"	d
SL_INVOKE_ON_ERROR	.\SpinAPI\src\ddk_headers\winddk.h	2679;"	d
SL_INVOKE_ON_SUCCESS	.\SpinAPI\src\ddk_headers\winddk.h	2678;"	d
SL_KEY_SPECIFIED	.\SpinAPI\src\ddk_headers\winddk.h	1005;"	d
SL_OPEN_PAGING_FILE	.\SpinAPI\src\ddk_headers\winddk.h	1001;"	d
SL_OPEN_TARGET_DIRECTORY	.\SpinAPI\src\ddk_headers\winddk.h	1002;"	d
SL_OVERRIDE_VERIFY_VOLUME	.\SpinAPI\src\ddk_headers\winddk.h	1006;"	d
SL_PENDING_RETURNED	.\SpinAPI\src\ddk_headers\winddk.h	2676;"	d
SL_RESTART_SCAN	.\SpinAPI\src\ddk_headers\winddk.h	1013;"	d
SL_RETURN_SINGLE_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	1014;"	d
SL_WATCH_TREE	.\SpinAPI\src\ddk_headers\winddk.h	1017;"	d
SL_WRITE_THROUGH	.\SpinAPI\src\ddk_headers\winddk.h	1007;"	d
SPECTRAL_WIDTH	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set SPECTRAL_WIDTH=100$/;"	v
SPECTRAL_WIDTH	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set SPECTRAL_WIDTH=100$/;"	v
SPECTRAL_WIDTH	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set SPECTRAL_WIDTH=100$/;"	v
SPECTRAL_WIDTH	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set SPECTRAL_WIDTH=100$/;"	v
SPECTROMETER_FREQUENCY	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set SPECTROMETER_FREQUENCY=21.2008$/;"	v
SPECTROMETER_FREQUENCY	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set SPECTROMETER_FREQUENCY=21.2008$/;"	v
SPECTROMETER_FREQUENCY	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set SPECTROMETER_FREQUENCY=21.2007$/;"	v
SPECTROMETER_FREQUENCY	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set SPECTROMETER_FREQUENCY=21.2008$/;"	v
SPEC_UNITS	.\SpinAPI\src\fid.h	21;"	d
SPINAPI_VERSION_STRING	.\SpinAPI\src\version.h	3;"	d
SPINCORE_API	.\SpinAPI\include\dds.h	5;"	d
SPINCORE_API	.\SpinAPI\include\pulseblaster.h	5;"	d
SPINCORE_API	.\SpinAPI\include\radioprocessor.h	5;"	d
SPINCORE_API	.\SpinAPI\include\spinapi.h	18;"	d
SPINCORE_API	.\SpinAPI\include\spinapi.h	20;"	d
SPINCORE_API	.\SpinAPI\include\spinapi.h	24;"	d
SPINCORE_API	.\SpinAPI\include\spinpts.h	5;"	d
SPINCORE_API	.\SpinAPI\src\dds.h	5;"	d
SPINCORE_API	.\SpinAPI\src\pulseblaster.h	5;"	d
SPINCORE_API	.\SpinAPI\src\radioprocessor.h	5;"	d
SPINCORE_API	.\SpinAPI\src\spinapi.h	18;"	d
SPINCORE_API	.\SpinAPI\src\spinapi.h	20;"	d
SPINCORE_API	.\SpinAPI\src\spinapi.h	24;"	d
SPINCORE_API	.\SpinAPI\src\spinpts.h	5;"	d
SPINCORE_API	.\board.h	25;"	d
SPINCORE_API	.\controls.h	28;"	d
SPINCORE_API	.\devices.h	28;"	d
SPINCORE_API	.\mrispinapi.h	35;"	d
SPINCORE_API	.\mrispinapi.h	37;"	d
SPINCORE_API	.\mrispinapi.h	41;"	d
SPINPTS_VERSION_STRING	.\SpinAPI\src\version.h	4;"	d
SSDT	.\SpinAPI\src\ddk_headers\winddk.h	/^	PSSDT  SSDT;$/;"	m	struct:_SSDT_ENTRY
SSDT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef PVOID (NTAPI * SSDT)(VOID);$/;"	t
SSDT_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^} SSDT_ENTRY, *PSSDT_ENTRY;$/;"	t	typeref:struct:_SSDT_ENTRY
SSPT	.\SpinAPI\src\ddk_headers\winddk.h	/^	PSSPT  SSPT;$/;"	m	struct:_SSDT_ENTRY
SSPT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef UCHAR SSPT, * PSSPT;$/;"	t
START_LOCATION	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTL_only.c	39;"	d	file:
START_LOCATION	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	40;"	d	file:
START_LOCATION	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	55;"	d	file:
START_LOCATION	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	51;"	d	file:
START_LOCATION	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	232;"	d	file:
START_PHASE	.\GradientEcho.c	33;"	d	file:
START_PLOT	.\SpinAPI\src\fid.h	25;"	d
STATIC	.\SpinAPI\src\ddk_headers\ntddk.h	54;"	d
STATUS_ABANDONED	.\SpinAPI\src\ddk_headers\ntstatus.h	57;"	d
STATUS_ABANDONED_WAIT_0	.\SpinAPI\src\ddk_headers\ntstatus.h	58;"	d
STATUS_ABANDONED_WAIT_63	.\SpinAPI\src\ddk_headers\ntstatus.h	59;"	d
STATUS_ABIOS_INVALID_COMMAND	.\SpinAPI\src\ddk_headers\ntstatus.h	451;"	d
STATUS_ABIOS_INVALID_LID	.\SpinAPI\src\ddk_headers\ntstatus.h	452;"	d
STATUS_ABIOS_INVALID_SELECTOR	.\SpinAPI\src\ddk_headers\ntstatus.h	454;"	d
STATUS_ABIOS_LID_ALREADY_OWNED	.\SpinAPI\src\ddk_headers\ntstatus.h	449;"	d
STATUS_ABIOS_LID_NOT_EXIST	.\SpinAPI\src\ddk_headers\ntstatus.h	448;"	d
STATUS_ABIOS_NOT_LID_OWNER	.\SpinAPI\src\ddk_headers\ntstatus.h	450;"	d
STATUS_ABIOS_NOT_PRESENT	.\SpinAPI\src\ddk_headers\ntstatus.h	447;"	d
STATUS_ABIOS_SELECTOR_NOT_AVAILABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	453;"	d
STATUS_ACCESS_DENIED	.\SpinAPI\src\ddk_headers\ntstatus.h	211;"	d
STATUS_ACCESS_DISABLED_BY_POLICY_DEFAULT	.\SpinAPI\src\ddk_headers\ntstatus.h	849;"	d
STATUS_ACCESS_DISABLED_BY_POLICY_OTHER	.\SpinAPI\src\ddk_headers\ntstatus.h	852;"	d
STATUS_ACCESS_DISABLED_BY_POLICY_PATH	.\SpinAPI\src\ddk_headers\ntstatus.h	850;"	d
STATUS_ACCESS_DISABLED_BY_POLICY_PUBLISHER	.\SpinAPI\src\ddk_headers\ntstatus.h	851;"	d
STATUS_ACCESS_VIOLATION	.\SpinAPI\src\ddk_headers\ntstatus.h	182;"	d
STATUS_ACCOUNT_DISABLED	.\SpinAPI\src\ddk_headers\ntstatus.h	290;"	d
STATUS_ACCOUNT_EXPIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	575;"	d
STATUS_ACCOUNT_LOCKED_OUT	.\SpinAPI\src\ddk_headers\ntstatus.h	635;"	d
STATUS_ACCOUNT_RESTRICTION	.\SpinAPI\src\ddk_headers\ntstatus.h	286;"	d
STATUS_ACPI_ACQUIRE_GLOBAL_LOCK	.\SpinAPI\src\ddk_headers\ntstatus.h	1006;"	d
STATUS_ACPI_ADDRESS_NOT_MAPPED	.\SpinAPI\src\ddk_headers\ntstatus.h	1000;"	d
STATUS_ACPI_ALREADY_INITIALIZED	.\SpinAPI\src\ddk_headers\ntstatus.h	1007;"	d
STATUS_ACPI_ASSERT_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	991;"	d
STATUS_ACPI_FATAL	.\SpinAPI\src\ddk_headers\ntstatus.h	994;"	d
STATUS_ACPI_HANDLER_COLLISION	.\SpinAPI\src\ddk_headers\ntstatus.h	1002;"	d
STATUS_ACPI_INCORRECT_ARGUMENT_COUNT	.\SpinAPI\src\ddk_headers\ntstatus.h	999;"	d
STATUS_ACPI_INVALID_ACCESS_SIZE	.\SpinAPI\src\ddk_headers\ntstatus.h	1005;"	d
STATUS_ACPI_INVALID_ARGTYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	996;"	d
STATUS_ACPI_INVALID_ARGUMENT	.\SpinAPI\src\ddk_headers\ntstatus.h	993;"	d
STATUS_ACPI_INVALID_DATA	.\SpinAPI\src\ddk_headers\ntstatus.h	1003;"	d
STATUS_ACPI_INVALID_EVENTTYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	1001;"	d
STATUS_ACPI_INVALID_INDEX	.\SpinAPI\src\ddk_headers\ntstatus.h	992;"	d
STATUS_ACPI_INVALID_MUTEX_LEVEL	.\SpinAPI\src\ddk_headers\ntstatus.h	1009;"	d
STATUS_ACPI_INVALID_OBJTYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	997;"	d
STATUS_ACPI_INVALID_OPCODE	.\SpinAPI\src\ddk_headers\ntstatus.h	989;"	d
STATUS_ACPI_INVALID_REGION	.\SpinAPI\src\ddk_headers\ntstatus.h	1004;"	d
STATUS_ACPI_INVALID_SUPERNAME	.\SpinAPI\src\ddk_headers\ntstatus.h	995;"	d
STATUS_ACPI_INVALID_TABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	1013;"	d
STATUS_ACPI_INVALID_TARGETTYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	998;"	d
STATUS_ACPI_MUTEX_NOT_OWNED	.\SpinAPI\src\ddk_headers\ntstatus.h	1010;"	d
STATUS_ACPI_MUTEX_NOT_OWNER	.\SpinAPI\src\ddk_headers\ntstatus.h	1011;"	d
STATUS_ACPI_NOT_INITIALIZED	.\SpinAPI\src\ddk_headers\ntstatus.h	1008;"	d
STATUS_ACPI_POWER_REQUEST_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	1015;"	d
STATUS_ACPI_REG_HANDLER_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	1014;"	d
STATUS_ACPI_RS_ACCESS	.\SpinAPI\src\ddk_headers\ntstatus.h	1012;"	d
STATUS_ACPI_STACK_OVERFLOW	.\SpinAPI\src\ddk_headers\ntstatus.h	990;"	d
STATUS_ADAPTER_HARDWARE_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	370;"	d
STATUS_ADDRESS_ALREADY_ASSOCIATED	.\SpinAPI\src\ddk_headers\ntstatus.h	639;"	d
STATUS_ADDRESS_ALREADY_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	593;"	d
STATUS_ADDRESS_CLOSED	.\SpinAPI\src\ddk_headers\ntstatus.h	594;"	d
STATUS_ADDRESS_NOT_ASSOCIATED	.\SpinAPI\src\ddk_headers\ntstatus.h	640;"	d
STATUS_AGENTS_EXHAUSTED	.\SpinAPI\src\ddk_headers\ntstatus.h	309;"	d
STATUS_ALERTED	.\SpinAPI\src\ddk_headers\ntstatus.h	62;"	d
STATUS_ALIAS_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	516;"	d
STATUS_ALLOCATE_BUCKET	.\SpinAPI\src\ddk_headers\ntstatus.h	630;"	d
STATUS_ALLOTTED_SPACE_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	329;"	d
STATUS_ALL_SIDS_FILTERED	.\SpinAPI\src\ddk_headers\ntstatus.h	847;"	d
STATUS_ALREADY_COMMITTED	.\SpinAPI\src\ddk_headers\ntstatus.h	210;"	d
STATUS_ALREADY_DISCONNECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	168;"	d
STATUS_ALREADY_WIN32	.\SpinAPI\src\ddk_headers\ntstatus.h	118;"	d
STATUS_APPHELP_BLOCK	.\SpinAPI\src\ddk_headers\ntstatus.h	846;"	d
STATUS_APP_INIT_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	501;"	d
STATUS_ARBITRATION_UNHANDLED	.\SpinAPI\src\ddk_headers\ntstatus.h	129;"	d
STATUS_ARRAY_BOUNDS_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	316;"	d
STATUS_AUDITING_DISABLED	.\SpinAPI\src\ddk_headers\ntstatus.h	839;"	d
STATUS_AUDIT_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	651;"	d
STATUS_BACKUP_CONTROLLER	.\SpinAPI\src\ddk_headers\ntstatus.h	563;"	d
STATUS_BAD_BINDINGS	.\SpinAPI\src\ddk_headers\ntstatus.h	844;"	d
STATUS_BAD_COMPRESSION_BUFFER	.\SpinAPI\src\ddk_headers\ntstatus.h	649;"	d
STATUS_BAD_CURRENT_DIRECTORY	.\SpinAPI\src\ddk_headers\ntstatus.h	98;"	d
STATUS_BAD_DESCRIPTOR_FORMAT	.\SpinAPI\src\ddk_headers\ntstatus.h	407;"	d
STATUS_BAD_DEVICE_TYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	379;"	d
STATUS_BAD_DLL_ENTRYPOINT	.\SpinAPI\src\ddk_headers\ntstatus.h	658;"	d
STATUS_BAD_FUNCTION_TABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	431;"	d
STATUS_BAD_IMPERSONATION_LEVEL	.\SpinAPI\src\ddk_headers\ntstatus.h	341;"	d
STATUS_BAD_INHERITANCE_ACL	.\SpinAPI\src\ddk_headers\ntstatus.h	301;"	d
STATUS_BAD_INITIAL_PC	.\SpinAPI\src\ddk_headers\ntstatus.h	187;"	d
STATUS_BAD_INITIAL_STACK	.\SpinAPI\src\ddk_headers\ntstatus.h	186;"	d
STATUS_BAD_LOGON_SESSION_STATE	.\SpinAPI\src\ddk_headers\ntstatus.h	436;"	d
STATUS_BAD_MASTER_BOOT_RECORD	.\SpinAPI\src\ddk_headers\ntstatus.h	345;"	d
STATUS_BAD_NETWORK_NAME	.\SpinAPI\src\ddk_headers\ntstatus.h	380;"	d
STATUS_BAD_NETWORK_PATH	.\SpinAPI\src\ddk_headers\ntstatus.h	366;"	d
STATUS_BAD_REMOTE_ADAPTER	.\SpinAPI\src\ddk_headers\ntstatus.h	373;"	d
STATUS_BAD_SERVICE_ENTRYPOINT	.\SpinAPI\src\ddk_headers\ntstatus.h	659;"	d
STATUS_BAD_STACK	.\SpinAPI\src\ddk_headers\ntstatus.h	217;"	d
STATUS_BAD_TOKEN_TYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	344;"	d
STATUS_BAD_VALIDATION_CLASS	.\SpinAPI\src\ddk_headers\ntstatus.h	343;"	d
STATUS_BAD_WORKING_SET_LIMIT	.\SpinAPI\src\ddk_headers\ntstatus.h	252;"	d
STATUS_BEGINNING_OF_MEDIA	.\SpinAPI\src\ddk_headers\ntstatus.h	162;"	d
STATUS_BIOS_FAILED_TO_CONNECT_INTERRUPT	.\SpinAPI\src\ddk_headers\ntstatus.h	542;"	d
STATUS_BREAKPOINT	.\SpinAPI\src\ddk_headers\ntstatus.h	137;"	d
STATUS_BUFFER_ALL_ZEROS	.\SpinAPI\src\ddk_headers\ntstatus.h	83;"	d
STATUS_BUFFER_OVERFLOW	.\SpinAPI\src\ddk_headers\ntstatus.h	139;"	d
STATUS_BUFFER_TOO_SMALL	.\SpinAPI\src\ddk_headers\ntstatus.h	212;"	d
STATUS_BUS_RESET	.\SpinAPI\src\ddk_headers\ntstatus.h	160;"	d
STATUS_CACHE_PAGE_LOCKED	.\SpinAPI\src\ddk_headers\ntstatus.h	81;"	d
STATUS_CANCELLED	.\SpinAPI\src\ddk_headers\ntstatus.h	464;"	d
STATUS_CANNOT_DELETE	.\SpinAPI\src\ddk_headers\ntstatus.h	465;"	d
STATUS_CANNOT_IMPERSONATE	.\SpinAPI\src\ddk_headers\ntstatus.h	445;"	d
STATUS_CANNOT_LOAD_REGISTRY_FILE	.\SpinAPI\src\ddk_headers\ntstatus.h	607;"	d
STATUS_CANNOT_MAKE	.\SpinAPI\src\ddk_headers\ntstatus.h	796;"	d
STATUS_CANT_ACCESS_DOMAIN_INFO	.\SpinAPI\src\ddk_headers\ntstatus.h	394;"	d
STATUS_CANT_DISABLE_MANDATORY	.\SpinAPI\src\ddk_headers\ntstatus.h	269;"	d
STATUS_CANT_ENABLE_DENY_ONLY	.\SpinAPI\src\ddk_headers\ntstatus.h	748;"	d
STATUS_CANT_OPEN_ANONYMOUS	.\SpinAPI\src\ddk_headers\ntstatus.h	342;"	d
STATUS_CANT_TERMINATE_SELF	.\SpinAPI\src\ddk_headers\ntstatus.h	395;"	d
STATUS_CANT_WAIT	.\SpinAPI\src\ddk_headers\ntstatus.h	392;"	d
STATUS_CARDBUS_NOT_SUPPORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	130;"	d
STATUS_CHECKING_FILE_SYSTEM	.\SpinAPI\src\ddk_headers\ntstatus.h	111;"	d
STATUS_CHILD_MUST_BE_VOLATILE	.\SpinAPI\src\ddk_headers\ntstatus.h	557;"	d
STATUS_CLEANER_CARTRIDGE_INSTALLED	.\SpinAPI\src\ddk_headers\ntstatus.h	170;"	d
STATUS_CLIENT_SERVER_PARAMETERS_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	618;"	d
STATUS_CLUSTER_INVALID_NETWORK	.\SpinAPI\src\ddk_headers\ntstatus.h	1092;"	d
STATUS_CLUSTER_INVALID_NETWORK_PROVIDER	.\SpinAPI\src\ddk_headers\ntstatus.h	1087;"	d
STATUS_CLUSTER_INVALID_NODE	.\SpinAPI\src\ddk_headers\ntstatus.h	1077;"	d
STATUS_CLUSTER_INVALID_REQUEST	.\SpinAPI\src\ddk_headers\ntstatus.h	1086;"	d
STATUS_CLUSTER_JOIN_IN_PROGRESS	.\SpinAPI\src\ddk_headers\ntstatus.h	1079;"	d
STATUS_CLUSTER_JOIN_NOT_IN_PROGRESS	.\SpinAPI\src\ddk_headers\ntstatus.h	1091;"	d
STATUS_CLUSTER_LOCAL_NODE_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1081;"	d
STATUS_CLUSTER_NETINTERFACE_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	1084;"	d
STATUS_CLUSTER_NETINTERFACE_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1085;"	d
STATUS_CLUSTER_NETWORK_ALREADY_OFFLINE	.\SpinAPI\src\ddk_headers\ntstatus.h	176;"	d
STATUS_CLUSTER_NETWORK_ALREADY_ONLINE	.\SpinAPI\src\ddk_headers\ntstatus.h	175;"	d
STATUS_CLUSTER_NETWORK_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	1082;"	d
STATUS_CLUSTER_NETWORK_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1083;"	d
STATUS_CLUSTER_NETWORK_NOT_INTERNAL	.\SpinAPI\src\ddk_headers\ntstatus.h	1098;"	d
STATUS_CLUSTER_NODE_ALREADY_DOWN	.\SpinAPI\src\ddk_headers\ntstatus.h	174;"	d
STATUS_CLUSTER_NODE_ALREADY_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	177;"	d
STATUS_CLUSTER_NODE_ALREADY_UP	.\SpinAPI\src\ddk_headers\ntstatus.h	173;"	d
STATUS_CLUSTER_NODE_DOWN	.\SpinAPI\src\ddk_headers\ntstatus.h	1088;"	d
STATUS_CLUSTER_NODE_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	1078;"	d
STATUS_CLUSTER_NODE_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1080;"	d
STATUS_CLUSTER_NODE_NOT_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	1090;"	d
STATUS_CLUSTER_NODE_NOT_PAUSED	.\SpinAPI\src\ddk_headers\ntstatus.h	1096;"	d
STATUS_CLUSTER_NODE_PAUSED	.\SpinAPI\src\ddk_headers\ntstatus.h	1095;"	d
STATUS_CLUSTER_NODE_UNREACHABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	1089;"	d
STATUS_CLUSTER_NODE_UP	.\SpinAPI\src\ddk_headers\ntstatus.h	1094;"	d
STATUS_CLUSTER_NO_NET_ADAPTERS	.\SpinAPI\src\ddk_headers\ntstatus.h	1093;"	d
STATUS_CLUSTER_NO_SECURITY_CONTEXT	.\SpinAPI\src\ddk_headers\ntstatus.h	1097;"	d
STATUS_CLUSTER_POISONED	.\SpinAPI\src\ddk_headers\ntstatus.h	1099;"	d
STATUS_COMMITMENT_LIMIT	.\SpinAPI\src\ddk_headers\ntstatus.h	477;"	d
STATUS_COMMITMENT_MINIMUM	.\SpinAPI\src\ddk_headers\ntstatus.h	762;"	d
STATUS_CONFLICTING_ADDRESSES	.\SpinAPI\src\ddk_headers\ntstatus.h	201;"	d
STATUS_CONNECTION_ABORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	648;"	d
STATUS_CONNECTION_ACTIVE	.\SpinAPI\src\ddk_headers\ntstatus.h	642;"	d
STATUS_CONNECTION_COUNT_LIMIT	.\SpinAPI\src\ddk_headers\ntstatus.h	653;"	d
STATUS_CONNECTION_DISCONNECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	595;"	d
STATUS_CONNECTION_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	641;"	d
STATUS_CONNECTION_IN_USE	.\SpinAPI\src\ddk_headers\ntstatus.h	440;"	d
STATUS_CONNECTION_REFUSED	.\SpinAPI\src\ddk_headers\ntstatus.h	637;"	d
STATUS_CONNECTION_RESET	.\SpinAPI\src\ddk_headers\ntstatus.h	596;"	d
STATUS_CONTROL_C_EXIT	.\SpinAPI\src\ddk_headers\ntstatus.h	490;"	d
STATUS_CONVERT_TO_LARGE	.\SpinAPI\src\ddk_headers\ntstatus.h	627;"	d
STATUS_COPY_PROTECTION_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	823;"	d
STATUS_CORRUPT_SYSTEM_FILE	.\SpinAPI\src\ddk_headers\ntstatus.h	758;"	d
STATUS_COULD_NOT_INTERPRET	.\SpinAPI\src\ddk_headers\ntstatus.h	361;"	d
STATUS_CRASH_DUMP	.\SpinAPI\src\ddk_headers\ntstatus.h	82;"	d
STATUS_CRC_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	239;"	d
STATUS_CRYPTO_SYSTEM_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	805;"	d
STATUS_CSS_AUTHENTICATION_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	824;"	d
STATUS_CSS_KEY_NOT_ESTABLISHED	.\SpinAPI\src\ddk_headers\ntstatus.h	826;"	d
STATUS_CSS_KEY_NOT_PRESENT	.\SpinAPI\src\ddk_headers\ntstatus.h	825;"	d
STATUS_CSS_REGION_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	828;"	d
STATUS_CSS_RESETS_EXHAUSTED	.\SpinAPI\src\ddk_headers\ntstatus.h	829;"	d
STATUS_CSS_SCRAMBLED_SECTOR	.\SpinAPI\src\ddk_headers\ntstatus.h	827;"	d
STATUS_CTL_FILE_NOT_SUPPORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	263;"	d
STATUS_CTX_BAD_VIDEO_MODE	.\SpinAPI\src\ddk_headers\ntstatus.h	1038;"	d
STATUS_CTX_CDM_CONNECT	.\SpinAPI\src\ddk_headers\ntstatus.h	1019;"	d
STATUS_CTX_CDM_DISCONNECT	.\SpinAPI\src\ddk_headers\ntstatus.h	1020;"	d
STATUS_CTX_CLIENT_LICENSE_IN_USE	.\SpinAPI\src\ddk_headers\ntstatus.h	1052;"	d
STATUS_CTX_CLIENT_LICENSE_NOT_SET	.\SpinAPI\src\ddk_headers\ntstatus.h	1051;"	d
STATUS_CTX_CLIENT_QUERY_TIMEOUT	.\SpinAPI\src\ddk_headers\ntstatus.h	1041;"	d
STATUS_CTX_CLOSE_PENDING	.\SpinAPI\src\ddk_headers\ntstatus.h	1021;"	d
STATUS_CTX_CONSOLE_CONNECT	.\SpinAPI\src\ddk_headers\ntstatus.h	1043;"	d
STATUS_CTX_CONSOLE_DISCONNECT	.\SpinAPI\src\ddk_headers\ntstatus.h	1042;"	d
STATUS_CTX_GRAPHICS_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	1039;"	d
STATUS_CTX_INVALID_MODEMNAME	.\SpinAPI\src\ddk_headers\ntstatus.h	1024;"	d
STATUS_CTX_INVALID_PD	.\SpinAPI\src\ddk_headers\ntstatus.h	1017;"	d
STATUS_CTX_INVALID_WD	.\SpinAPI\src\ddk_headers\ntstatus.h	1046;"	d
STATUS_CTX_LICENSE_CLIENT_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	1032;"	d
STATUS_CTX_LICENSE_EXPIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	1034;"	d
STATUS_CTX_LICENSE_NOT_AVAILABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	1033;"	d
STATUS_CTX_MODEM_INF_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1023;"	d
STATUS_CTX_MODEM_RESPONSE_BUSY	.\SpinAPI\src\ddk_headers\ntstatus.h	1029;"	d
STATUS_CTX_MODEM_RESPONSE_NO_CARRIER	.\SpinAPI\src\ddk_headers\ntstatus.h	1027;"	d
STATUS_CTX_MODEM_RESPONSE_NO_DIALTONE	.\SpinAPI\src\ddk_headers\ntstatus.h	1028;"	d
STATUS_CTX_MODEM_RESPONSE_TIMEOUT	.\SpinAPI\src\ddk_headers\ntstatus.h	1026;"	d
STATUS_CTX_MODEM_RESPONSE_VOICE	.\SpinAPI\src\ddk_headers\ntstatus.h	1030;"	d
STATUS_CTX_NOT_CONSOLE	.\SpinAPI\src\ddk_headers\ntstatus.h	1040;"	d
STATUS_CTX_NO_OUTBUF	.\SpinAPI\src\ddk_headers\ntstatus.h	1022;"	d
STATUS_CTX_PD_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1018;"	d
STATUS_CTX_RESPONSE_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	1025;"	d
STATUS_CTX_SHADOW_DENIED	.\SpinAPI\src\ddk_headers\ntstatus.h	1044;"	d
STATUS_CTX_SHADOW_DISABLED	.\SpinAPI\src\ddk_headers\ntstatus.h	1049;"	d
STATUS_CTX_SHADOW_ENDED_BY_MODE_CHANGE	.\SpinAPI\src\ddk_headers\ntstatus.h	1053;"	d
STATUS_CTX_SHADOW_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	1048;"	d
STATUS_CTX_SHADOW_NOT_RUNNING	.\SpinAPI\src\ddk_headers\ntstatus.h	1054;"	d
STATUS_CTX_TD_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	1031;"	d
STATUS_CTX_WD_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1047;"	d
STATUS_CTX_WINSTATION_ACCESS_DENIED	.\SpinAPI\src\ddk_headers\ntstatus.h	1045;"	d
STATUS_CTX_WINSTATION_BUSY	.\SpinAPI\src\ddk_headers\ntstatus.h	1037;"	d
STATUS_CTX_WINSTATION_NAME_COLLISION	.\SpinAPI\src\ddk_headers\ntstatus.h	1036;"	d
STATUS_CTX_WINSTATION_NAME_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	1016;"	d
STATUS_CTX_WINSTATION_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1035;"	d
STATUS_CURRENT_DOMAIN_NOT_ALLOWED	.\SpinAPI\src\ddk_headers\ntstatus.h	795;"	d
STATUS_DATATYPE_MISALIGNMENT	.\SpinAPI\src\ddk_headers\ntstatus.h	136;"	d
STATUS_DATATYPE_MISALIGNMENT_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	759;"	d
STATUS_DATA_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	238;"	d
STATUS_DATA_LATE_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	237;"	d
STATUS_DATA_NOT_ACCEPTED	.\SpinAPI\src\ddk_headers\ntstatus.h	610;"	d
STATUS_DATA_OVERRUN	.\SpinAPI\src\ddk_headers\ntstatus.h	236;"	d
STATUS_DEBUGGER_INACTIVE	.\SpinAPI\src\ddk_headers\ntstatus.h	837;"	d
STATUS_DEBUG_ATTACH_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	608;"	d
STATUS_DECRYPTION_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	708;"	d
STATUS_DELETE_PENDING	.\SpinAPI\src\ddk_headers\ntstatus.h	262;"	d
STATUS_DESTINATION_ELEMENT_FULL	.\SpinAPI\src\ddk_headers\ntstatus.h	701;"	d
STATUS_DEVICE_ALREADY_ATTACHED	.\SpinAPI\src\ddk_headers\ntstatus.h	232;"	d
STATUS_DEVICE_BUSY	.\SpinAPI\src\ddk_headers\ntstatus.h	149;"	d
STATUS_DEVICE_CONFIGURATION_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	558;"	d
STATUS_DEVICE_DATA_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	332;"	d
STATUS_DEVICE_DOES_NOT_EXIST	.\SpinAPI\src\ddk_headers\ntstatus.h	368;"	d
STATUS_DEVICE_DOOR_OPEN	.\SpinAPI\src\ddk_headers\ntstatus.h	706;"	d
STATUS_DEVICE_ENUMERATION_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	854;"	d
STATUS_DEVICE_NOT_CONNECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	333;"	d
STATUS_DEVICE_NOT_PARTITIONED	.\SpinAPI\src\ddk_headers\ntstatus.h	545;"	d
STATUS_DEVICE_NOT_READY	.\SpinAPI\src\ddk_headers\ntstatus.h	339;"	d
STATUS_DEVICE_OFF_LINE	.\SpinAPI\src\ddk_headers\ntstatus.h	148;"	d
STATUS_DEVICE_PAPER_EMPTY	.\SpinAPI\src\ddk_headers\ntstatus.h	146;"	d
STATUS_DEVICE_POWERED_OFF	.\SpinAPI\src\ddk_headers\ntstatus.h	147;"	d
STATUS_DEVICE_POWER_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	334;"	d
STATUS_DEVICE_PROTOCOL_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	562;"	d
STATUS_DEVICE_REMOVED	.\SpinAPI\src\ddk_headers\ntstatus.h	751;"	d
STATUS_DEVICE_REQUIRES_CLEANING	.\SpinAPI\src\ddk_headers\ntstatus.h	705;"	d
STATUS_DFS_EXIT_PATH_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	331;"	d
STATUS_DFS_UNAVAILABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	685;"	d
STATUS_DIRECTORY_IS_A_REPARSE_POINT	.\SpinAPI\src\ddk_headers\ntstatus.h	698;"	d
STATUS_DIRECTORY_NOT_EMPTY	.\SpinAPI\src\ddk_headers\ntstatus.h	433;"	d
STATUS_DIRECTORY_SERVICE_REQUIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	746;"	d
STATUS_DISK_CORRUPT_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	227;"	d
STATUS_DISK_FULL	.\SpinAPI\src\ddk_headers\ntstatus.h	303;"	d
STATUS_DISK_OPERATION_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	538;"	d
STATUS_DISK_RECALIBRATE_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	537;"	d
STATUS_DISK_RESET_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	539;"	d
STATUS_DLL_INIT_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	498;"	d
STATUS_DLL_INIT_FAILED_LOGOFF	.\SpinAPI\src\ddk_headers\ntstatus.h	683;"	d
STATUS_DLL_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	485;"	d
STATUS_DOMAIN_CONTROLLER_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	634;"	d
STATUS_DOMAIN_CTRLR_CONFIG_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	526;"	d
STATUS_DOMAIN_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	400;"	d
STATUS_DOMAIN_LIMIT_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	401;"	d
STATUS_DOMAIN_TRUST_INCONSISTENT	.\SpinAPI\src\ddk_headers\ntstatus.h	583;"	d
STATUS_DOWNGRADE_DETECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	873;"	d
STATUS_DRIVER_BLOCKED	.\SpinAPI\src\ddk_headers\ntstatus.h	860;"	d
STATUS_DRIVER_BLOCKED_CRITICAL	.\SpinAPI\src\ddk_headers\ntstatus.h	859;"	d
STATUS_DRIVER_CANCEL_TIMEOUT	.\SpinAPI\src\ddk_headers\ntstatus.h	613;"	d
STATUS_DRIVER_DATABASE_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	861;"	d
STATUS_DRIVER_ENTRYPOINT_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	675;"	d
STATUS_DRIVER_FAILED_PRIOR_UNLOAD	.\SpinAPI\src\ddk_headers\ntstatus.h	879;"	d
STATUS_DRIVER_FAILED_SLEEP	.\SpinAPI\src\ddk_headers\ntstatus.h	756;"	d
STATUS_DRIVER_INTERNAL_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	559;"	d
STATUS_DRIVER_ORDINAL_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	674;"	d
STATUS_DRIVER_UNABLE_TO_LOAD	.\SpinAPI\src\ddk_headers\ntstatus.h	684;"	d
STATUS_DS_ADMIN_LIMIT_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	755;"	d
STATUS_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	841;"	d
STATUS_DS_ATTRIBUTE_OR_VALUE_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	733;"	d
STATUS_DS_ATTRIBUTE_TYPE_UNDEFINED	.\SpinAPI\src\ddk_headers\ntstatus.h	732;"	d
STATUS_DS_BUSY	.\SpinAPI\src\ddk_headers\ntstatus.h	734;"	d
STATUS_DS_CANT_MOD_OBJ_CLASS	.\SpinAPI\src\ddk_headers\ntstatus.h	743;"	d
STATUS_DS_CANT_MOD_PRIMARYGROUPID	.\SpinAPI\src\ddk_headers\ntstatus.h	770;"	d
STATUS_DS_CANT_ON_NON_LEAF	.\SpinAPI\src\ddk_headers\ntstatus.h	741;"	d
STATUS_DS_CANT_ON_RDN	.\SpinAPI\src\ddk_headers\ntstatus.h	742;"	d
STATUS_DS_CANT_START	.\SpinAPI\src\ddk_headers\ntstatus.h	787;"	d
STATUS_DS_CROSS_DOM_MOVE_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	744;"	d
STATUS_DS_GC_NOT_AVAILABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	745;"	d
STATUS_DS_GC_REQUIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	790;"	d
STATUS_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	780;"	d
STATUS_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	777;"	d
STATUS_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	778;"	d
STATUS_DS_HAVE_PRIMARY_MEMBERS	.\SpinAPI\src\ddk_headers\ntstatus.h	782;"	d
STATUS_DS_INCORRECT_ROLE_OWNER	.\SpinAPI\src\ddk_headers\ntstatus.h	738;"	d
STATUS_DS_INIT_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	788;"	d
STATUS_DS_INIT_FAILURE_CONSOLE	.\SpinAPI\src\ddk_headers\ntstatus.h	798;"	d
STATUS_DS_INVALID_ATTRIBUTE_SYNTAX	.\SpinAPI\src\ddk_headers\ntstatus.h	731;"	d
STATUS_DS_INVALID_GROUP_TYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	774;"	d
STATUS_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	781;"	d
STATUS_DS_LOCAL_MEMBER_OF_LOCAL_ONLY	.\SpinAPI\src\ddk_headers\ntstatus.h	791;"	d
STATUS_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	793;"	d
STATUS_DS_MEMBERSHIP_EVALUATED_LOCALLY	.\SpinAPI\src\ddk_headers\ntstatus.h	87;"	d
STATUS_DS_NO_ATTRIBUTE_OR_VALUE	.\SpinAPI\src\ddk_headers\ntstatus.h	730;"	d
STATUS_DS_NO_FPO_IN_UNIVERSAL_GROUPS	.\SpinAPI\src\ddk_headers\ntstatus.h	792;"	d
STATUS_DS_NO_MORE_RIDS	.\SpinAPI\src\ddk_headers\ntstatus.h	737;"	d
STATUS_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN	.\SpinAPI\src\ddk_headers\ntstatus.h	775;"	d
STATUS_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN	.\SpinAPI\src\ddk_headers\ntstatus.h	776;"	d
STATUS_DS_NO_RIDS_ALLOCATED	.\SpinAPI\src\ddk_headers\ntstatus.h	736;"	d
STATUS_DS_OBJ_CLASS_VIOLATION	.\SpinAPI\src\ddk_headers\ntstatus.h	740;"	d
STATUS_DS_RIDMGR_INIT_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	739;"	d
STATUS_DS_SAM_INIT_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	765;"	d
STATUS_DS_SAM_INIT_FAILURE_CONSOLE	.\SpinAPI\src\ddk_headers\ntstatus.h	799;"	d
STATUS_DS_SENSITIVE_GROUP_VIOLATION	.\SpinAPI\src\ddk_headers\ntstatus.h	767;"	d
STATUS_DS_SHUTTING_DOWN	.\SpinAPI\src\ddk_headers\ntstatus.h	864;"	d
STATUS_DS_UNAVAILABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	735;"	d
STATUS_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	779;"	d
STATUS_DS_VERSION_CHECK_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	838;"	d
STATUS_DUPLICATE_NAME	.\SpinAPI\src\ddk_headers\ntstatus.h	365;"	d
STATUS_DUPLICATE_OBJECTID	.\SpinAPI\src\ddk_headers\ntstatus.h	625;"	d
STATUS_EAS_NOT_SUPPORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	255;"	d
STATUS_EA_CORRUPT_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	259;"	d
STATUS_EA_LIST_INCONSISTENT	.\SpinAPI\src\ddk_headers\ntstatus.h	152;"	d
STATUS_EA_TOO_LARGE	.\SpinAPI\src\ddk_headers\ntstatus.h	256;"	d
STATUS_EFS_ALG_BLOB_TOO_BIG	.\SpinAPI\src\ddk_headers\ntstatus.h	835;"	d
STATUS_ENCRYPTION_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	707;"	d
STATUS_END_OF_FILE	.\SpinAPI\src\ddk_headers\ntstatus.h	194;"	d
STATUS_END_OF_MEDIA	.\SpinAPI\src\ddk_headers\ntstatus.h	161;"	d
STATUS_ENTRYPOINT_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	489;"	d
STATUS_EOM_OVERFLOW	.\SpinAPI\src\ddk_headers\ntstatus.h	548;"	d
STATUS_EVALUATION_EXPIRATION	.\SpinAPI\src\ddk_headers\ntstatus.h	680;"	d
STATUS_EVENTLOG_CANT_START	.\SpinAPI\src\ddk_headers\ntstatus.h	571;"	d
STATUS_EVENTLOG_FILE_CHANGED	.\SpinAPI\src\ddk_headers\ntstatus.h	579;"	d
STATUS_EVENTLOG_FILE_CORRUPT	.\SpinAPI\src\ddk_headers\ntstatus.h	570;"	d
STATUS_EVENT_DONE	.\SpinAPI\src\ddk_headers\ntstatus.h	109;"	d
STATUS_EVENT_PENDING	.\SpinAPI\src\ddk_headers\ntstatus.h	110;"	d
STATUS_EXTRANEOUS_INFORMATION	.\SpinAPI\src\ddk_headers\ntstatus.h	155;"	d
STATUS_FAILED_DRIVER_ENTRY	.\SpinAPI\src\ddk_headers\ntstatus.h	853;"	d
STATUS_FAIL_CHECK	.\SpinAPI\src\ddk_headers\ntstatus.h	624;"	d
STATUS_FATAL_APP_EXIT	.\SpinAPI\src\ddk_headers\ntstatus.h	112;"	d
STATUS_FILEMARK_DETECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	158;"	d
STATUS_FILES_OPEN	.\SpinAPI\src\ddk_headers\ntstatus.h	439;"	d
STATUS_FILE_CLOSED	.\SpinAPI\src\ddk_headers\ntstatus.h	472;"	d
STATUS_FILE_CORRUPT_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	434;"	d
STATUS_FILE_DELETED	.\SpinAPI\src\ddk_headers\ntstatus.h	467;"	d
STATUS_FILE_ENCRYPTED	.\SpinAPI\src\ddk_headers\ntstatus.h	716;"	d
STATUS_FILE_FORCED_CLOSED	.\SpinAPI\src\ddk_headers\ntstatus.h	358;"	d
STATUS_FILE_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	328;"	d
STATUS_FILE_IS_A_DIRECTORY	.\SpinAPI\src\ddk_headers\ntstatus.h	362;"	d
STATUS_FILE_IS_OFFLINE	.\SpinAPI\src\ddk_headers\ntstatus.h	679;"	d
STATUS_FILE_LOCK_CONFLICT	.\SpinAPI\src\ddk_headers\ntstatus.h	260;"	d
STATUS_FILE_NOT_ENCRYPTED	.\SpinAPI\src\ddk_headers\ntstatus.h	714;"	d
STATUS_FILE_RENAMED	.\SpinAPI\src\ddk_headers\ntstatus.h	389;"	d
STATUS_FLOAT_DENORMAL_OPERAND	.\SpinAPI\src\ddk_headers\ntstatus.h	317;"	d
STATUS_FLOAT_DIVIDE_BY_ZERO	.\SpinAPI\src\ddk_headers\ntstatus.h	318;"	d
STATUS_FLOAT_INEXACT_RESULT	.\SpinAPI\src\ddk_headers\ntstatus.h	319;"	d
STATUS_FLOAT_INVALID_OPERATION	.\SpinAPI\src\ddk_headers\ntstatus.h	320;"	d
STATUS_FLOAT_MULTIPLE_FAULTS	.\SpinAPI\src\ddk_headers\ntstatus.h	749;"	d
STATUS_FLOAT_MULTIPLE_TRAPS	.\SpinAPI\src\ddk_headers\ntstatus.h	750;"	d
STATUS_FLOAT_OVERFLOW	.\SpinAPI\src\ddk_headers\ntstatus.h	321;"	d
STATUS_FLOAT_STACK_CHECK	.\SpinAPI\src\ddk_headers\ntstatus.h	322;"	d
STATUS_FLOAT_UNDERFLOW	.\SpinAPI\src\ddk_headers\ntstatus.h	323;"	d
STATUS_FLOPPY_BAD_REGISTERS	.\SpinAPI\src\ddk_headers\ntstatus.h	536;"	d
STATUS_FLOPPY_ID_MARK_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	533;"	d
STATUS_FLOPPY_UNKNOWN_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	535;"	d
STATUS_FLOPPY_VOLUME	.\SpinAPI\src\ddk_headers\ntstatus.h	532;"	d
STATUS_FLOPPY_WRONG_CYLINDER	.\SpinAPI\src\ddk_headers\ntstatus.h	534;"	d
STATUS_FOUND_OUT_OF_SCOPE	.\SpinAPI\src\ddk_headers\ntstatus.h	629;"	d
STATUS_FREE_VM_NOT_AT_BASE	.\SpinAPI\src\ddk_headers\ntstatus.h	335;"	d
STATUS_FS_DRIVER_REQUIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	584;"	d
STATUS_FT_MISSING_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	527;"	d
STATUS_FT_ORPHANING	.\SpinAPI\src\ddk_headers\ntstatus.h	541;"	d
STATUS_FT_READ_RECOVERY_FROM_BACKUP	.\SpinAPI\src\ddk_headers\ntstatus.h	101;"	d
STATUS_FT_WRITE_RECOVERY	.\SpinAPI\src\ddk_headers\ntstatus.h	102;"	d
STATUS_FULLSCREEN_MODE	.\SpinAPI\src\ddk_headers\ntstatus.h	521;"	d
STATUS_GENERIC_NOT_MAPPED	.\SpinAPI\src\ddk_headers\ntstatus.h	406;"	d
STATUS_GRACEFUL_DISCONNECT	.\SpinAPI\src\ddk_headers\ntstatus.h	638;"	d
STATUS_GROUP_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	277;"	d
STATUS_GUARD_PAGE_VIOLATION	.\SpinAPI\src\ddk_headers\ntstatus.h	135;"	d
STATUS_GUIDS_EXHAUSTED	.\SpinAPI\src\ddk_headers\ntstatus.h	307;"	d
STATUS_GUID_SUBSTITUTION_MADE	.\SpinAPI\src\ddk_headers\ntstatus.h	144;"	d
STATUS_HANDLES_CLOSED	.\SpinAPI\src\ddk_headers\ntstatus.h	142;"	d
STATUS_HANDLE_NOT_CLOSABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	636;"	d
STATUS_HIBERNATED	.\SpinAPI\src\ddk_headers\ntstatus.h	133;"	d
STATUS_HOST_DOWN	.\SpinAPI\src\ddk_headers\ntstatus.h	833;"	d
STATUS_HOST_UNREACHABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	644;"	d
STATUS_ILLEGAL_CHARACTER	.\SpinAPI\src\ddk_headers\ntstatus.h	529;"	d
STATUS_ILLEGAL_DLL_RELOCATION	.\SpinAPI\src\ddk_headers\ntstatus.h	681;"	d
STATUS_ILLEGAL_ELEMENT_ADDRESS	.\SpinAPI\src\ddk_headers\ntstatus.h	702;"	d
STATUS_ILLEGAL_FLOAT_CONTEXT	.\SpinAPI\src\ddk_headers\ntstatus.h	506;"	d
STATUS_ILLEGAL_FUNCTION	.\SpinAPI\src\ddk_headers\ntstatus.h	351;"	d
STATUS_ILLEGAL_INSTRUCTION	.\SpinAPI\src\ddk_headers\ntstatus.h	206;"	d
STATUS_ILL_FORMED_PASSWORD	.\SpinAPI\src\ddk_headers\ntstatus.h	283;"	d
STATUS_ILL_FORMED_SERVICE_ENTRY	.\SpinAPI\src\ddk_headers\ntstatus.h	528;"	d
STATUS_IMAGE_ALREADY_LOADED	.\SpinAPI\src\ddk_headers\ntstatus.h	446;"	d
STATUS_IMAGE_CHECKSUM_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	616;"	d
STATUS_IMAGE_MACHINE_TYPE_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	105;"	d
STATUS_IMAGE_MACHINE_TYPE_MISMATCH_EXE	.\SpinAPI\src\ddk_headers\ntstatus.h	126;"	d
STATUS_IMAGE_MP_UP_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	656;"	d
STATUS_IMAGE_NOT_AT_BASE	.\SpinAPI\src\ddk_headers\ntstatus.h	94;"	d
STATUS_INCOMPATIBLE_FILE_MAP	.\SpinAPI\src\ddk_headers\ntstatus.h	253;"	d
STATUS_INFO_LENGTH_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	181;"	d
STATUS_INSTANCE_NOT_AVAILABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	347;"	d
STATUS_INSTRUCTION_MISALIGNMENT	.\SpinAPI\src\ddk_headers\ntstatus.h	346;"	d
STATUS_INSUFFICIENT_LOGON_INFO	.\SpinAPI\src\ddk_headers\ntstatus.h	657;"	d
STATUS_INSUFFICIENT_POWER	.\SpinAPI\src\ddk_headers\ntstatus.h	784;"	d
STATUS_INSUFFICIENT_RESOURCES	.\SpinAPI\src\ddk_headers\ntstatus.h	330;"	d
STATUS_INSUFF_SERVER_RESOURCES	.\SpinAPI\src\ddk_headers\ntstatus.h	588;"	d
STATUS_INTEGER_DIVIDE_BY_ZERO	.\SpinAPI\src\ddk_headers\ntstatus.h	324;"	d
STATUS_INTEGER_OVERFLOW	.\SpinAPI\src\ddk_headers\ntstatus.h	325;"	d
STATUS_INTERNAL_DB_CORRUPTION	.\SpinAPI\src\ddk_headers\ntstatus.h	404;"	d
STATUS_INTERNAL_DB_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	520;"	d
STATUS_INTERNAL_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	405;"	d
STATUS_INVALID_ACCOUNT_NAME	.\SpinAPI\src\ddk_headers\ntstatus.h	274;"	d
STATUS_INVALID_ACL	.\SpinAPI\src\ddk_headers\ntstatus.h	295;"	d
STATUS_INVALID_ADDRESS	.\SpinAPI\src\ddk_headers\ntstatus.h	497;"	d
STATUS_INVALID_ADDRESS_COMPONENT	.\SpinAPI\src\ddk_headers\ntstatus.h	590;"	d
STATUS_INVALID_ADDRESS_WILDCARD	.\SpinAPI\src\ddk_headers\ntstatus.h	591;"	d
STATUS_INVALID_BLOCK_LENGTH	.\SpinAPI\src\ddk_headers\ntstatus.h	544;"	d
STATUS_INVALID_BUFFER_SIZE	.\SpinAPI\src\ddk_headers\ntstatus.h	589;"	d
STATUS_INVALID_CID	.\SpinAPI\src\ddk_headers\ntstatus.h	188;"	d
STATUS_INVALID_COMPUTER_NAME	.\SpinAPI\src\ddk_headers\ntstatus.h	466;"	d
STATUS_INVALID_CONNECTION	.\SpinAPI\src\ddk_headers\ntstatus.h	496;"	d
STATUS_INVALID_DEVICE_OBJECT_PARAMETER	.\SpinAPI\src\ddk_headers\ntstatus.h	857;"	d
STATUS_INVALID_DEVICE_REQUEST	.\SpinAPI\src\ddk_headers\ntstatus.h	193;"	d
STATUS_INVALID_DEVICE_STATE	.\SpinAPI\src\ddk_headers\ntstatus.h	560;"	d
STATUS_INVALID_DISPOSITION	.\SpinAPI\src\ddk_headers\ntstatus.h	215;"	d
STATUS_INVALID_DOMAIN_ROLE	.\SpinAPI\src\ddk_headers\ntstatus.h	398;"	d
STATUS_INVALID_DOMAIN_STATE	.\SpinAPI\src\ddk_headers\ntstatus.h	397;"	d
STATUS_INVALID_EA_FLAG	.\SpinAPI\src\ddk_headers\ntstatus.h	153;"	d
STATUS_INVALID_EA_NAME	.\SpinAPI\src\ddk_headers\ntstatus.h	151;"	d
STATUS_INVALID_FILE_FOR_SECTION	.\SpinAPI\src\ddk_headers\ntstatus.h	209;"	d
STATUS_INVALID_GROUP_ATTRIBUTES	.\SpinAPI\src\ddk_headers\ntstatus.h	340;"	d
STATUS_INVALID_HANDLE	.\SpinAPI\src\ddk_headers\ntstatus.h	185;"	d
STATUS_INVALID_HW_PROFILE	.\SpinAPI\src\ddk_headers\ntstatus.h	672;"	d
STATUS_INVALID_ID_AUTHORITY	.\SpinAPI\src\ddk_headers\ntstatus.h	308;"	d
STATUS_INVALID_IMAGE_FORMAT	.\SpinAPI\src\ddk_headers\ntstatus.h	299;"	d
STATUS_INVALID_IMAGE_LE_FORMAT	.\SpinAPI\src\ddk_headers\ntstatus.h	478;"	d
STATUS_INVALID_IMAGE_NE_FORMAT	.\SpinAPI\src\ddk_headers\ntstatus.h	459;"	d
STATUS_INVALID_IMAGE_NOT_MZ	.\SpinAPI\src\ddk_headers\ntstatus.h	479;"	d
STATUS_INVALID_IMAGE_PROTECT	.\SpinAPI\src\ddk_headers\ntstatus.h	480;"	d
STATUS_INVALID_IMAGE_WIN_16	.\SpinAPI\src\ddk_headers\ntstatus.h	481;"	d
STATUS_INVALID_IMAGE_WIN_32	.\SpinAPI\src\ddk_headers\ntstatus.h	842;"	d
STATUS_INVALID_IMAGE_WIN_64	.\SpinAPI\src\ddk_headers\ntstatus.h	843;"	d
STATUS_INVALID_IMPORT_OF_NON_DLL	.\SpinAPI\src\ddk_headers\ntstatus.h	863;"	d
STATUS_INVALID_INFO_CLASS	.\SpinAPI\src\ddk_headers\ntstatus.h	180;"	d
STATUS_INVALID_LDT_DESCRIPTOR	.\SpinAPI\src\ddk_headers\ntstatus.h	458;"	d
STATUS_INVALID_LDT_OFFSET	.\SpinAPI\src\ddk_headers\ntstatus.h	457;"	d
STATUS_INVALID_LDT_SIZE	.\SpinAPI\src\ddk_headers\ntstatus.h	456;"	d
STATUS_INVALID_LEVEL	.\SpinAPI\src\ddk_headers\ntstatus.h	504;"	d
STATUS_INVALID_LOCK_SEQUENCE	.\SpinAPI\src\ddk_headers\ntstatus.h	207;"	d
STATUS_INVALID_LOGON_HOURS	.\SpinAPI\src\ddk_headers\ntstatus.h	287;"	d
STATUS_INVALID_LOGON_TYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	443;"	d
STATUS_INVALID_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	551;"	d
STATUS_INVALID_NETWORK_RESPONSE	.\SpinAPI\src\ddk_headers\ntstatus.h	371;"	d
STATUS_INVALID_OPLOCK_PROTOCOL	.\SpinAPI\src\ddk_headers\ntstatus.h	403;"	d
STATUS_INVALID_OWNER	.\SpinAPI\src\ddk_headers\ntstatus.h	266;"	d
STATUS_INVALID_PAGE_PROTECTION	.\SpinAPI\src\ddk_headers\ntstatus.h	245;"	d
STATUS_INVALID_PARAMETER	.\SpinAPI\src\ddk_headers\ntstatus.h	190;"	d
STATUS_INVALID_PARAMETER_1	.\SpinAPI\src\ddk_headers\ntstatus.h	415;"	d
STATUS_INVALID_PARAMETER_10	.\SpinAPI\src\ddk_headers\ntstatus.h	424;"	d
STATUS_INVALID_PARAMETER_11	.\SpinAPI\src\ddk_headers\ntstatus.h	425;"	d
STATUS_INVALID_PARAMETER_12	.\SpinAPI\src\ddk_headers\ntstatus.h	426;"	d
STATUS_INVALID_PARAMETER_2	.\SpinAPI\src\ddk_headers\ntstatus.h	416;"	d
STATUS_INVALID_PARAMETER_3	.\SpinAPI\src\ddk_headers\ntstatus.h	417;"	d
STATUS_INVALID_PARAMETER_4	.\SpinAPI\src\ddk_headers\ntstatus.h	418;"	d
STATUS_INVALID_PARAMETER_5	.\SpinAPI\src\ddk_headers\ntstatus.h	419;"	d
STATUS_INVALID_PARAMETER_6	.\SpinAPI\src\ddk_headers\ntstatus.h	420;"	d
STATUS_INVALID_PARAMETER_7	.\SpinAPI\src\ddk_headers\ntstatus.h	421;"	d
STATUS_INVALID_PARAMETER_8	.\SpinAPI\src\ddk_headers\ntstatus.h	422;"	d
STATUS_INVALID_PARAMETER_9	.\SpinAPI\src\ddk_headers\ntstatus.h	423;"	d
STATUS_INVALID_PARAMETER_MIX	.\SpinAPI\src\ddk_headers\ntstatus.h	225;"	d
STATUS_INVALID_PIPE_STATE	.\SpinAPI\src\ddk_headers\ntstatus.h	349;"	d
STATUS_INVALID_PLUGPLAY_DEVICE_PATH	.\SpinAPI\src\ddk_headers\ntstatus.h	673;"	d
STATUS_INVALID_PORT_ATTRIBUTES	.\SpinAPI\src\ddk_headers\ntstatus.h	223;"	d
STATUS_INVALID_PORT_HANDLE	.\SpinAPI\src\ddk_headers\ntstatus.h	242;"	d
STATUS_INVALID_PRIMARY_GROUP	.\SpinAPI\src\ddk_headers\ntstatus.h	267;"	d
STATUS_INVALID_QUOTA_LOWER	.\SpinAPI\src\ddk_headers\ntstatus.h	226;"	d
STATUS_INVALID_READ_MODE	.\SpinAPI\src\ddk_headers\ntstatus.h	356;"	d
STATUS_INVALID_SECURITY_DESCR	.\SpinAPI\src\ddk_headers\ntstatus.h	297;"	d
STATUS_INVALID_SERVER_STATE	.\SpinAPI\src\ddk_headers\ntstatus.h	396;"	d
STATUS_INVALID_SID	.\SpinAPI\src\ddk_headers\ntstatus.h	296;"	d
STATUS_INVALID_SUB_AUTHORITY	.\SpinAPI\src\ddk_headers\ntstatus.h	294;"	d
STATUS_INVALID_SYSTEM_SERVICE	.\SpinAPI\src\ddk_headers\ntstatus.h	205;"	d
STATUS_INVALID_UNWIND_TARGET	.\SpinAPI\src\ddk_headers\ntstatus.h	218;"	d
STATUS_INVALID_USER_BUFFER	.\SpinAPI\src\ddk_headers\ntstatus.h	408;"	d
STATUS_INVALID_VARIANT	.\SpinAPI\src\ddk_headers\ntstatus.h	633;"	d
STATUS_INVALID_VIEW_SIZE	.\SpinAPI\src\ddk_headers\ntstatus.h	208;"	d
STATUS_INVALID_VOLUME_LABEL	.\SpinAPI\src\ddk_headers\ntstatus.h	310;"	d
STATUS_INVALID_WORKSTATION	.\SpinAPI\src\ddk_headers\ntstatus.h	288;"	d
STATUS_IN_PAGE_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	183;"	d
STATUS_IO_DEVICE_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	561;"	d
STATUS_IO_PRIVILEGE_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	487;"	d
STATUS_IO_REPARSE_DATA_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	695;"	d
STATUS_IO_REPARSE_TAG_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	693;"	d
STATUS_IO_REPARSE_TAG_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	694;"	d
STATUS_IO_REPARSE_TAG_NOT_HANDLED	.\SpinAPI\src\ddk_headers\ntstatus.h	696;"	d
STATUS_IO_TIMEOUT	.\SpinAPI\src\ddk_headers\ntstatus.h	357;"	d
STATUS_IP_ADDRESS_CONFLICT1	.\SpinAPI\src\ddk_headers\ntstatus.h	661;"	d
STATUS_IP_ADDRESS_CONFLICT2	.\SpinAPI\src\ddk_headers\ntstatus.h	662;"	d
STATUS_ISSUING_CA_UNTRUSTED	.\SpinAPI\src\ddk_headers\ntstatus.h	875;"	d
STATUS_JOURNAL_DELETE_IN_PROGRESS	.\SpinAPI\src\ddk_headers\ntstatus.h	752;"	d
STATUS_JOURNAL_ENTRY_DELETED	.\SpinAPI\src\ddk_headers\ntstatus.h	769;"	d
STATUS_JOURNAL_NOT_ACTIVE	.\SpinAPI\src\ddk_headers\ntstatus.h	753;"	d
STATUS_KDC_INVALID_REQUEST	.\SpinAPI\src\ddk_headers\ntstatus.h	813;"	d
STATUS_KDC_UNABLE_TO_REFER	.\SpinAPI\src\ddk_headers\ntstatus.h	814;"	d
STATUS_KDC_UNKNOWN_ETYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	815;"	d
STATUS_KERNEL_APC	.\SpinAPI\src\ddk_headers\ntstatus.h	61;"	d
STATUS_KEY_DELETED	.\SpinAPI\src\ddk_headers\ntstatus.h	552;"	d
STATUS_KEY_HAS_CHILDREN	.\SpinAPI\src\ddk_headers\ntstatus.h	556;"	d
STATUS_LAST_ADMIN	.\SpinAPI\src\ddk_headers\ntstatus.h	281;"	d
STATUS_LICENSE_QUOTA_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	666;"	d
STATUS_LICENSE_VIOLATION	.\SpinAPI\src\ddk_headers\ntstatus.h	682;"	d
STATUS_LINK_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	494;"	d
STATUS_LINK_TIMEOUT	.\SpinAPI\src\ddk_headers\ntstatus.h	495;"	d
STATUS_LM_CROSS_ENCRYPTION_REQUIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	555;"	d
STATUS_LOCAL_DISCONNECT	.\SpinAPI\src\ddk_headers\ntstatus.h	491;"	d
STATUS_LOCAL_USER_SESSION_KEY	.\SpinAPI\src\ddk_headers\ntstatus.h	97;"	d
STATUS_LOCK_NOT_GRANTED	.\SpinAPI\src\ddk_headers\ntstatus.h	261;"	d
STATUS_LOGIN_TIME_RESTRICTION	.\SpinAPI\src\ddk_headers\ntstatus.h	654;"	d
STATUS_LOGIN_WKSTA_RESTRICTION	.\SpinAPI\src\ddk_headers\ntstatus.h	655;"	d
STATUS_LOGON_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	285;"	d
STATUS_LOGON_NOT_GRANTED	.\SpinAPI\src\ddk_headers\ntstatus.h	517;"	d
STATUS_LOGON_SERVER_CONFLICT	.\SpinAPI\src\ddk_headers\ntstatus.h	482;"	d
STATUS_LOGON_SESSION_COLLISION	.\SpinAPI\src\ddk_headers\ntstatus.h	437;"	d
STATUS_LOGON_SESSION_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	414;"	d
STATUS_LOGON_TYPE_NOT_GRANTED	.\SpinAPI\src\ddk_headers\ntstatus.h	523;"	d
STATUS_LOG_FILE_FULL	.\SpinAPI\src\ddk_headers\ntstatus.h	564;"	d
STATUS_LOG_HARD_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	117;"	d
STATUS_LONGJUMP	.\SpinAPI\src\ddk_headers\ntstatus.h	169;"	d
STATUS_LOST_WRITEBEHIND_DATA	.\SpinAPI\src\ddk_headers\ntstatus.h	617;"	d
STATUS_LPC_REPLY_LOST	.\SpinAPI\src\ddk_headers\ntstatus.h	660;"	d
STATUS_LUIDS_EXHAUSTED	.\SpinAPI\src\ddk_headers\ntstatus.h	293;"	d
STATUS_MAGAZINE_NOT_PRESENT	.\SpinAPI\src\ddk_headers\ntstatus.h	703;"	d
STATUS_MAPPED_ALIGNMENT	.\SpinAPI\src\ddk_headers\ntstatus.h	615;"	d
STATUS_MAPPED_FILE_SIZE_ZERO	.\SpinAPI\src\ddk_headers\ntstatus.h	462;"	d
STATUS_MARSHALL_OVERFLOW	.\SpinAPI\src\ddk_headers\ntstatus.h	632;"	d
STATUS_MAX_REFERRALS_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	806;"	d
STATUS_MCA_OCCURED	.\SpinAPI\src\ddk_headers\ntstatus.h	858;"	d
STATUS_MEDIA_CHANGED	.\SpinAPI\src\ddk_headers\ntstatus.h	159;"	d
STATUS_MEDIA_CHECK	.\SpinAPI\src\ddk_headers\ntstatus.h	163;"	d
STATUS_MEDIA_WRITE_PROTECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	338;"	d
STATUS_MEMBERS_PRIMARY_GROUP	.\SpinAPI\src\ddk_headers\ntstatus.h	471;"	d
STATUS_MEMBER_IN_ALIAS	.\SpinAPI\src\ddk_headers\ntstatus.h	515;"	d
STATUS_MEMBER_IN_GROUP	.\SpinAPI\src\ddk_headers\ntstatus.h	279;"	d
STATUS_MEMBER_NOT_IN_ALIAS	.\SpinAPI\src\ddk_headers\ntstatus.h	514;"	d
STATUS_MEMBER_NOT_IN_GROUP	.\SpinAPI\src\ddk_headers\ntstatus.h	280;"	d
STATUS_MEMORY_NOT_ALLOCATED	.\SpinAPI\src\ddk_headers\ntstatus.h	336;"	d
STATUS_MESSAGE_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	441;"	d
STATUS_MFT_TOO_FRAGMENTED	.\SpinAPI\src\ddk_headers\ntstatus.h	822;"	d
STATUS_MISSING_SYSTEMFILE	.\SpinAPI\src\ddk_headers\ntstatus.h	499;"	d
STATUS_MORE_ENTRIES	.\SpinAPI\src\ddk_headers\ntstatus.h	66;"	d
STATUS_MORE_PROCESSING_REQUIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	199;"	d
STATUS_MOUNT_POINT_NOT_RESOLVED	.\SpinAPI\src\ddk_headers\ntstatus.h	856;"	d
STATUS_MP_PROCESSOR_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	132;"	d
STATUS_MULTIPLE_FAULT_VIOLATION	.\SpinAPI\src\ddk_headers\ntstatus.h	794;"	d
STATUS_MUST_BE_KDC	.\SpinAPI\src\ddk_headers\ntstatus.h	807;"	d
STATUS_MUTANT_LIMIT_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	573;"	d
STATUS_MUTANT_NOT_OWNED	.\SpinAPI\src\ddk_headers\ntstatus.h	246;"	d
STATUS_MUTUAL_AUTHENTICATION_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	757;"	d
STATUS_NAME_TOO_LONG	.\SpinAPI\src\ddk_headers\ntstatus.h	438;"	d
STATUS_NETLOGON_NOT_STARTED	.\SpinAPI\src\ddk_headers\ntstatus.h	574;"	d
STATUS_NETWORK_ACCESS_DENIED	.\SpinAPI\src\ddk_headers\ntstatus.h	378;"	d
STATUS_NETWORK_BUSY	.\SpinAPI\src\ddk_headers\ntstatus.h	367;"	d
STATUS_NETWORK_CREDENTIAL_CONFLICT	.\SpinAPI\src\ddk_headers\ntstatus.h	577;"	d
STATUS_NETWORK_NAME_DELETED	.\SpinAPI\src\ddk_headers\ntstatus.h	377;"	d
STATUS_NETWORK_SESSION_EXPIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	845;"	d
STATUS_NETWORK_UNREACHABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	643;"	d
STATUS_NET_WRITE_FAULT	.\SpinAPI\src\ddk_headers\ntstatus.h	386;"	d
STATUS_NOINTERFACE	.\SpinAPI\src\ddk_headers\ntstatus.h	754;"	d
STATUS_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT	.\SpinAPI\src\ddk_headers\ntstatus.h	580;"	d
STATUS_NOLOGON_SERVER_TRUST_ACCOUNT	.\SpinAPI\src\ddk_headers\ntstatus.h	582;"	d
STATUS_NOLOGON_WORKSTATION_TRUST_ACCOUNT	.\SpinAPI\src\ddk_headers\ntstatus.h	581;"	d
STATUS_NONCONTINUABLE_EXCEPTION	.\SpinAPI\src\ddk_headers\ntstatus.h	214;"	d
STATUS_NONEXISTENT_EA_ENTRY	.\SpinAPI\src\ddk_headers\ntstatus.h	257;"	d
STATUS_NONEXISTENT_SECTOR	.\SpinAPI\src\ddk_headers\ntstatus.h	198;"	d
STATUS_NONE_MAPPED	.\SpinAPI\src\ddk_headers\ntstatus.h	291;"	d
STATUS_NOTHING_TO_TERMINATE	.\SpinAPI\src\ddk_headers\ntstatus.h	88;"	d
STATUS_NOTIFY_CLEANUP	.\SpinAPI\src\ddk_headers\ntstatus.h	72;"	d
STATUS_NOTIFY_ENUM_DIR	.\SpinAPI\src\ddk_headers\ntstatus.h	73;"	d
STATUS_NOT_ALL_ASSIGNED	.\SpinAPI\src\ddk_headers\ntstatus.h	67;"	d
STATUS_NOT_A_DIRECTORY	.\SpinAPI\src\ddk_headers\ntstatus.h	435;"	d
STATUS_NOT_A_REPARSE_POINT	.\SpinAPI\src\ddk_headers\ntstatus.h	692;"	d
STATUS_NOT_CLIENT_SESSION	.\SpinAPI\src\ddk_headers\ntstatus.h	606;"	d
STATUS_NOT_COMMITTED	.\SpinAPI\src\ddk_headers\ntstatus.h	222;"	d
STATUS_NOT_EXPORT_FORMAT	.\SpinAPI\src\ddk_headers\ntstatus.h	715;"	d
STATUS_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	620;"	d
STATUS_NOT_IMPLEMENTED	.\SpinAPI\src\ddk_headers\ntstatus.h	179;"	d
STATUS_NOT_LOCKED	.\SpinAPI\src\ddk_headers\ntstatus.h	219;"	d
STATUS_NOT_LOGON_PROCESS	.\SpinAPI\src\ddk_headers\ntstatus.h	413;"	d
STATUS_NOT_MAPPED_DATA	.\SpinAPI\src\ddk_headers\ntstatus.h	312;"	d
STATUS_NOT_MAPPED_VIEW	.\SpinAPI\src\ddk_headers\ntstatus.h	202;"	d
STATUS_NOT_REGISTRY_FILE	.\SpinAPI\src\ddk_headers\ntstatus.h	524;"	d
STATUS_NOT_SAFE_MODE_DRIVER	.\SpinAPI\src\ddk_headers\ntstatus.h	848;"	d
STATUS_NOT_SAME_DEVICE	.\SpinAPI\src\ddk_headers\ntstatus.h	388;"	d
STATUS_NOT_SERVER_SESSION	.\SpinAPI\src\ddk_headers\ntstatus.h	605;"	d
STATUS_NOT_SUPPORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	363;"	d
STATUS_NOT_SUPPORTED_ON_SBS	.\SpinAPI\src\ddk_headers\ntstatus.h	818;"	d
STATUS_NOT_TINY_STREAM	.\SpinAPI\src\ddk_headers\ntstatus.h	621;"	d
STATUS_NO_BROWSER_SERVERS_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	611;"	d
STATUS_NO_CALLBACK_ACTIVE	.\SpinAPI\src\ddk_headers\ntstatus.h	665;"	d
STATUS_NO_DATA_DETECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	165;"	d
STATUS_NO_EAS_ON_FILE	.\SpinAPI\src\ddk_headers\ntstatus.h	258;"	d
STATUS_NO_EFS	.\SpinAPI\src\ddk_headers\ntstatus.h	711;"	d
STATUS_NO_EVENT_PAIR	.\SpinAPI\src\ddk_headers\ntstatus.h	510;"	d
STATUS_NO_GUID_TRANSLATION	.\SpinAPI\src\ddk_headers\ntstatus.h	444;"	d
STATUS_NO_IMPERSONATION_TOKEN	.\SpinAPI\src\ddk_headers\ntstatus.h	268;"	d
STATUS_NO_INHERITANCE	.\SpinAPI\src\ddk_headers\ntstatus.h	143;"	d
STATUS_NO_IP_ADDRESSES	.\SpinAPI\src\ddk_headers\ntstatus.h	803;"	d
STATUS_NO_KERB_KEY	.\SpinAPI\src\ddk_headers\ntstatus.h	832;"	d
STATUS_NO_LDT	.\SpinAPI\src\ddk_headers\ntstatus.h	455;"	d
STATUS_NO_LOGON_SERVERS	.\SpinAPI\src\ddk_headers\ntstatus.h	270;"	d
STATUS_NO_LOG_SPACE	.\SpinAPI\src\ddk_headers\ntstatus.h	553;"	d
STATUS_NO_MATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	690;"	d
STATUS_NO_MEDIA	.\SpinAPI\src\ddk_headers\ntstatus.h	549;"	d
STATUS_NO_MEDIA_IN_DEVICE	.\SpinAPI\src\ddk_headers\ntstatus.h	196;"	d
STATUS_NO_MEMORY	.\SpinAPI\src\ddk_headers\ntstatus.h	200;"	d
STATUS_NO_MORE_EAS	.\SpinAPI\src\ddk_headers\ntstatus.h	150;"	d
STATUS_NO_MORE_ENTRIES	.\SpinAPI\src\ddk_headers\ntstatus.h	157;"	d
STATUS_NO_MORE_FILES	.\SpinAPI\src\ddk_headers\ntstatus.h	140;"	d
STATUS_NO_MORE_MATCHES	.\SpinAPI\src\ddk_headers\ntstatus.h	691;"	d
STATUS_NO_PAGEFILE	.\SpinAPI\src\ddk_headers\ntstatus.h	503;"	d
STATUS_NO_PA_DATA	.\SpinAPI\src\ddk_headers\ntstatus.h	810;"	d
STATUS_NO_QUOTAS_FOR_ACCOUNT	.\SpinAPI\src\ddk_headers\ntstatus.h	74;"	d
STATUS_NO_RECOVERY_POLICY	.\SpinAPI\src\ddk_headers\ntstatus.h	710;"	d
STATUS_NO_SECURITY_ON_OBJECT	.\SpinAPI\src\ddk_headers\ntstatus.h	391;"	d
STATUS_NO_SPOOL_SPACE	.\SpinAPI\src\ddk_headers\ntstatus.h	375;"	d
STATUS_NO_SUCH_ALIAS	.\SpinAPI\src\ddk_headers\ntstatus.h	513;"	d
STATUS_NO_SUCH_DEVICE	.\SpinAPI\src\ddk_headers\ntstatus.h	191;"	d
STATUS_NO_SUCH_DOMAIN	.\SpinAPI\src\ddk_headers\ntstatus.h	399;"	d
STATUS_NO_SUCH_FILE	.\SpinAPI\src\ddk_headers\ntstatus.h	192;"	d
STATUS_NO_SUCH_GROUP	.\SpinAPI\src\ddk_headers\ntstatus.h	278;"	d
STATUS_NO_SUCH_LOGON_SESSION	.\SpinAPI\src\ddk_headers\ntstatus.h	271;"	d
STATUS_NO_SUCH_MEMBER	.\SpinAPI\src\ddk_headers\ntstatus.h	550;"	d
STATUS_NO_SUCH_PACKAGE	.\SpinAPI\src\ddk_headers\ntstatus.h	430;"	d
STATUS_NO_SUCH_PRIVILEGE	.\SpinAPI\src\ddk_headers\ntstatus.h	272;"	d
STATUS_NO_SUCH_USER	.\SpinAPI\src\ddk_headers\ntstatus.h	276;"	d
STATUS_NO_TGT_REPLY	.\SpinAPI\src\ddk_headers\ntstatus.h	801;"	d
STATUS_NO_TOKEN	.\SpinAPI\src\ddk_headers\ntstatus.h	300;"	d
STATUS_NO_TRACKING_SERVICE	.\SpinAPI\src\ddk_headers\ntstatus.h	728;"	d
STATUS_NO_TRUST_LSA_SECRET	.\SpinAPI\src\ddk_headers\ntstatus.h	566;"	d
STATUS_NO_TRUST_SAM_ACCOUNT	.\SpinAPI\src\ddk_headers\ntstatus.h	567;"	d
STATUS_NO_USER_KEYS	.\SpinAPI\src\ddk_headers\ntstatus.h	713;"	d
STATUS_NO_USER_SESSION_KEY	.\SpinAPI\src\ddk_headers\ntstatus.h	585;"	d
STATUS_NO_YIELD_PERFORMED	.\SpinAPI\src\ddk_headers\ntstatus.h	127;"	d
STATUS_NT_CROSS_ENCRYPTION_REQUIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	525;"	d
STATUS_NULL_LM_PASSWORD	.\SpinAPI\src\ddk_headers\ntstatus.h	104;"	d
STATUS_OBJECTID_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	626;"	d
STATUS_OBJECTID_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	802;"	d
STATUS_OBJECT_NAME_COLLISION	.\SpinAPI\src\ddk_headers\ntstatus.h	230;"	d
STATUS_OBJECT_NAME_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	91;"	d
STATUS_OBJECT_NAME_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	228;"	d
STATUS_OBJECT_NAME_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	229;"	d
STATUS_OBJECT_PATH_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	233;"	d
STATUS_OBJECT_PATH_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	234;"	d
STATUS_OBJECT_PATH_SYNTAX_BAD	.\SpinAPI\src\ddk_headers\ntstatus.h	235;"	d
STATUS_OBJECT_TYPE_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	213;"	d
STATUS_ONLY_IF_CONNECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	766;"	d
STATUS_OPEN_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	486;"	d
STATUS_OPLOCK_BREAK_IN_PROGRESS	.\SpinAPI\src\ddk_headers\ntstatus.h	69;"	d
STATUS_OPLOCK_NOT_GRANTED	.\SpinAPI\src\ddk_headers\ntstatus.h	402;"	d
STATUS_ORDINAL_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	488;"	d
STATUS_PAGEFILE_CREATE_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	502;"	d
STATUS_PAGEFILE_QUOTA	.\SpinAPI\src\ddk_headers\ntstatus.h	184;"	d
STATUS_PAGEFILE_QUOTA_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	476;"	d
STATUS_PAGE_FAULT_COPY_ON_WRITE	.\SpinAPI\src\ddk_headers\ntstatus.h	78;"	d
STATUS_PAGE_FAULT_DEMAND_ZERO	.\SpinAPI\src\ddk_headers\ntstatus.h	77;"	d
STATUS_PAGE_FAULT_GUARD_PAGE	.\SpinAPI\src\ddk_headers\ntstatus.h	79;"	d
STATUS_PAGE_FAULT_PAGING_FILE	.\SpinAPI\src\ddk_headers\ntstatus.h	80;"	d
STATUS_PAGE_FAULT_TRANSITION	.\SpinAPI\src\ddk_headers\ntstatus.h	76;"	d
STATUS_PARITY_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	220;"	d
STATUS_PARTIAL_COPY	.\SpinAPI\src\ddk_headers\ntstatus.h	145;"	d
STATUS_PARTITION_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	543;"	d
STATUS_PASSWORD_EXPIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	289;"	d
STATUS_PASSWORD_MUST_CHANGE	.\SpinAPI\src\ddk_headers\ntstatus.h	619;"	d
STATUS_PASSWORD_RESTRICTION	.\SpinAPI\src\ddk_headers\ntstatus.h	284;"	d
STATUS_PATH_NOT_COVERED	.\SpinAPI\src\ddk_headers\ntstatus.h	664;"	d
STATUS_PENDING	.\SpinAPI\src\ddk_headers\ntstatus.h	64;"	d
STATUS_PIPE_BROKEN	.\SpinAPI\src\ddk_headers\ntstatus.h	507;"	d
STATUS_PIPE_BUSY	.\SpinAPI\src\ddk_headers\ntstatus.h	350;"	d
STATUS_PIPE_CLOSING	.\SpinAPI\src\ddk_headers\ntstatus.h	353;"	d
STATUS_PIPE_CONNECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	354;"	d
STATUS_PIPE_DISCONNECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	352;"	d
STATUS_PIPE_EMPTY	.\SpinAPI\src\ddk_headers\ntstatus.h	393;"	d
STATUS_PIPE_LISTENING	.\SpinAPI\src\ddk_headers\ntstatus.h	355;"	d
STATUS_PIPE_NOT_AVAILABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	348;"	d
STATUS_PKINIT_CLIENT_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	877;"	d
STATUS_PKINIT_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	830;"	d
STATUS_PKINIT_NAME_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	811;"	d
STATUS_PLUGPLAY_NO_DEVICE	.\SpinAPI\src\ddk_headers\ntstatus.h	670;"	d
STATUS_PLUGPLAY_QUERY_VETOED	.\SpinAPI\src\ddk_headers\ntstatus.h	171;"	d
STATUS_PNP_BAD_MPS_TABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	1055;"	d
STATUS_PNP_IRQ_TRANSLATION_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	1057;"	d
STATUS_PNP_REBOOT_REQUIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	772;"	d
STATUS_PNP_RESTART_ENUMERATION	.\SpinAPI\src\ddk_headers\ntstatus.h	768;"	d
STATUS_PNP_TRANSLATION_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	1056;"	d
STATUS_POLICY_OBJECT_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	723;"	d
STATUS_POLICY_ONLY_IN_DS	.\SpinAPI\src\ddk_headers\ntstatus.h	724;"	d
STATUS_PORT_ALREADY_SET	.\SpinAPI\src\ddk_headers\ntstatus.h	248;"	d
STATUS_PORT_CONNECTION_REFUSED	.\SpinAPI\src\ddk_headers\ntstatus.h	241;"	d
STATUS_PORT_DISCONNECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	231;"	d
STATUS_PORT_MESSAGE_TOO_LONG	.\SpinAPI\src\ddk_headers\ntstatus.h	224;"	d
STATUS_PORT_NOT_SET	.\SpinAPI\src\ddk_headers\ntstatus.h	836;"	d
STATUS_PORT_UNREACHABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	646;"	d
STATUS_POSSIBLE_DEADLOCK	.\SpinAPI\src\ddk_headers\ntstatus.h	576;"	d
STATUS_POWER_STATE_INVALID	.\SpinAPI\src\ddk_headers\ntstatus.h	773;"	d
STATUS_PREDEFINED_HANDLE	.\SpinAPI\src\ddk_headers\ntstatus.h	113;"	d
STATUS_PRENT4_MACHINE_ACCOUNT	.\SpinAPI\src\ddk_headers\ntstatus.h	840;"	d
STATUS_PRIMARY_TRANSPORT_CONNECT_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	75;"	d
STATUS_PRINT_CANCELLED	.\SpinAPI\src\ddk_headers\ntstatus.h	376;"	d
STATUS_PRINT_QUEUE_FULL	.\SpinAPI\src\ddk_headers\ntstatus.h	374;"	d
STATUS_PRIVILEGED_INSTRUCTION	.\SpinAPI\src\ddk_headers\ntstatus.h	326;"	d
STATUS_PRIVILEGE_NOT_HELD	.\SpinAPI\src\ddk_headers\ntstatus.h	273;"	d
STATUS_PROCEDURE_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	298;"	d
STATUS_PROCESS_IN_JOB	.\SpinAPI\src\ddk_headers\ntstatus.h	90;"	d
STATUS_PROCESS_IS_TERMINATING	.\SpinAPI\src\ddk_headers\ntstatus.h	442;"	d
STATUS_PROCESS_NOT_IN_JOB	.\SpinAPI\src\ddk_headers\ntstatus.h	89;"	d
STATUS_PROFILING_AT_LIMIT	.\SpinAPI\src\ddk_headers\ntstatus.h	387;"	d
STATUS_PROFILING_NOT_STARTED	.\SpinAPI\src\ddk_headers\ntstatus.h	359;"	d
STATUS_PROFILING_NOT_STOPPED	.\SpinAPI\src\ddk_headers\ntstatus.h	360;"	d
STATUS_PROPSET_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	631;"	d
STATUS_PROTOCOL_UNREACHABLE	.\SpinAPI\src\ddk_headers\ntstatus.h	645;"	d
STATUS_PWD_HISTORY_CONFLICT	.\SpinAPI\src\ddk_headers\ntstatus.h	669;"	d
STATUS_PWD_TOO_RECENT	.\SpinAPI\src\ddk_headers\ntstatus.h	668;"	d
STATUS_PWD_TOO_SHORT	.\SpinAPI\src\ddk_headers\ntstatus.h	667;"	d
STATUS_QUOTA_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	244;"	d
STATUS_QUOTA_LIST_INCONSISTENT	.\SpinAPI\src\ddk_headers\ntstatus.h	678;"	d
STATUS_RANGE_LIST_CONFLICT	.\SpinAPI\src\ddk_headers\ntstatus.h	699;"	d
STATUS_RANGE_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	709;"	d
STATUS_RANGE_NOT_LOCKED	.\SpinAPI\src\ddk_headers\ntstatus.h	302;"	d
STATUS_RDP_PROTOCOL_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	1050;"	d
STATUS_RECEIVE_EXPEDITED	.\SpinAPI\src\ddk_headers\ntstatus.h	107;"	d
STATUS_RECEIVE_PARTIAL	.\SpinAPI\src\ddk_headers\ntstatus.h	106;"	d
STATUS_RECEIVE_PARTIAL_EXPEDITED	.\SpinAPI\src\ddk_headers\ntstatus.h	108;"	d
STATUS_RECOVERY_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	622;"	d
STATUS_REDIRECTOR_HAS_OPEN_HANDLES	.\SpinAPI\src\ddk_headers\ntstatus.h	166;"	d
STATUS_REDIRECTOR_NOT_STARTED	.\SpinAPI\src\ddk_headers\ntstatus.h	427;"	d
STATUS_REDIRECTOR_PAUSED	.\SpinAPI\src\ddk_headers\ntstatus.h	385;"	d
STATUS_REDIRECTOR_STARTED	.\SpinAPI\src\ddk_headers\ntstatus.h	428;"	d
STATUS_REG	.\board.h	34;"	d
STATUS_REGISTRY_CORRUPT	.\SpinAPI\src\ddk_headers\ntstatus.h	508;"	d
STATUS_REGISTRY_IO_FAILED	.\SpinAPI\src\ddk_headers\ntstatus.h	509;"	d
STATUS_REGISTRY_QUOTA_LIMIT	.\SpinAPI\src\ddk_headers\ntstatus.h	663;"	d
STATUS_REGISTRY_RECOVERED	.\SpinAPI\src\ddk_headers\ntstatus.h	100;"	d
STATUS_REG_NAT_CONSUMPTION	.\SpinAPI\src\ddk_headers\ntstatus.h	763;"	d
STATUS_REINITIALIZATION_NEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	704;"	d
STATUS_REMOTE_DISCONNECT	.\SpinAPI\src\ddk_headers\ntstatus.h	492;"	d
STATUS_REMOTE_NOT_LISTENING	.\SpinAPI\src\ddk_headers\ntstatus.h	364;"	d
STATUS_REMOTE_RESOURCES	.\SpinAPI\src\ddk_headers\ntstatus.h	493;"	d
STATUS_REMOTE_SESSION_LIMIT	.\SpinAPI\src\ddk_headers\ntstatus.h	578;"	d
STATUS_REMOTE_STORAGE_MEDIA_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	727;"	d
STATUS_REMOTE_STORAGE_NOT_ACTIVE	.\SpinAPI\src\ddk_headers\ntstatus.h	726;"	d
STATUS_REPARSE	.\SpinAPI\src\ddk_headers\ntstatus.h	65;"	d
STATUS_REPARSE_ATTRIBUTE_CONFLICT	.\SpinAPI\src\ddk_headers\ntstatus.h	747;"	d
STATUS_REPARSE_OBJECT	.\SpinAPI\src\ddk_headers\ntstatus.h	84;"	d
STATUS_REPARSE_POINT_NOT_RESOLVED	.\SpinAPI\src\ddk_headers\ntstatus.h	697;"	d
STATUS_REPLY_MESSAGE_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	614;"	d
STATUS_REQUEST_ABORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	647;"	d
STATUS_REQUEST_NOT_ACCEPTED	.\SpinAPI\src\ddk_headers\ntstatus.h	384;"	d
STATUS_RESET	.\SpinAPI\include\pulseblaster.h	18;"	d
STATUS_RESET	.\SpinAPI\src\pulseblaster.h	18;"	d
STATUS_RESOURCE_DATA_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	313;"	d
STATUS_RESOURCE_LANG_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	587;"	d
STATUS_RESOURCE_NAME_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	315;"	d
STATUS_RESOURCE_NOT_OWNED	.\SpinAPI\src\ddk_headers\ntstatus.h	676;"	d
STATUS_RESOURCE_REQUIREMENTS_CHANGED	.\SpinAPI\src\ddk_headers\ntstatus.h	85;"	d
STATUS_RESOURCE_TYPE_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	314;"	d
STATUS_RESUME_HIBERNATION	.\SpinAPI\src\ddk_headers\ntstatus.h	134;"	d
STATUS_RETRY	.\SpinAPI\src\ddk_headers\ntstatus.h	628;"	d
STATUS_REVISION_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	265;"	d
STATUS_REVOCATION_OFFLINE_C	.\SpinAPI\src\ddk_headers\ntstatus.h	876;"	d
STATUS_RUNNING	.\SpinAPI\include\pulseblaster.h	19;"	d
STATUS_RUNNING	.\SpinAPI\src\pulseblaster.h	19;"	d
STATUS_RXACT_COMMITTED	.\SpinAPI\src\ddk_headers\ntstatus.h	71;"	d
STATUS_RXACT_COMMIT_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	461;"	d
STATUS_RXACT_COMMIT_NECESSARY	.\SpinAPI\src\ddk_headers\ntstatus.h	156;"	d
STATUS_RXACT_INVALID_STATE	.\SpinAPI\src\ddk_headers\ntstatus.h	460;"	d
STATUS_RXACT_STATE_CREATED	.\SpinAPI\src\ddk_headers\ntstatus.h	95;"	d
STATUS_SAM_INIT_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	789;"	d
STATUS_SAM_NEED_BOOTKEY_FLOPPY	.\SpinAPI\src\ddk_headers\ntstatus.h	786;"	d
STATUS_SAM_NEED_BOOTKEY_PASSWORD	.\SpinAPI\src\ddk_headers\ntstatus.h	785;"	d
STATUS_SCANNING	.\SpinAPI\include\radioprocessor.h	42;"	d
STATUS_SCANNING	.\SpinAPI\src\radioprocessor.h	42;"	d
STATUS_SECRET_TOO_LONG	.\SpinAPI\src\ddk_headers\ntstatus.h	519;"	d
STATUS_SECTION_NOT_EXTENDED	.\SpinAPI\src\ddk_headers\ntstatus.h	311;"	d
STATUS_SECTION_NOT_IMAGE	.\SpinAPI\src\ddk_headers\ntstatus.h	249;"	d
STATUS_SECTION_PROTECTION	.\SpinAPI\src\ddk_headers\ntstatus.h	254;"	d
STATUS_SECTION_TOO_BIG	.\SpinAPI\src\ddk_headers\ntstatus.h	240;"	d
STATUS_SEGMENT_NOTIFICATION	.\SpinAPI\src\ddk_headers\ntstatus.h	96;"	d
STATUS_SEMAPHORE_LIMIT_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	247;"	d
STATUS_SERIAL_COUNTER_TIMEOUT	.\SpinAPI\src\ddk_headers\ntstatus.h	103;"	d
STATUS_SERIAL_MORE_WRITES	.\SpinAPI\src\ddk_headers\ntstatus.h	99;"	d
STATUS_SERIAL_NO_DEVICE_INITED	.\SpinAPI\src\ddk_headers\ntstatus.h	512;"	d
STATUS_SERVER_DISABLED	.\SpinAPI\src\ddk_headers\ntstatus.h	304;"	d
STATUS_SERVER_HAS_OPEN_HANDLES	.\SpinAPI\src\ddk_headers\ntstatus.h	167;"	d
STATUS_SERVER_NOT_DISABLED	.\SpinAPI\src\ddk_headers\ntstatus.h	305;"	d
STATUS_SERVER_SHUTDOWN_IN_PROGRESS	.\SpinAPI\src\ddk_headers\ntstatus.h	817;"	d
STATUS_SERVER_SID_MISMATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	729;"	d
STATUS_SERVICE_NOTIFICATION	.\SpinAPI\src\ddk_headers\ntstatus.h	115;"	d
STATUS_SETMARK_DETECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	164;"	d
STATUS_SEVERITY_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	51;"	d
STATUS_SEVERITY_INFORMATIONAL	.\SpinAPI\src\ddk_headers\ntstatus.h	49;"	d
STATUS_SEVERITY_SUCCESS	.\SpinAPI\src\ddk_headers\ntstatus.h	48;"	d
STATUS_SEVERITY_WARNING	.\SpinAPI\src\ddk_headers\ntstatus.h	50;"	d
STATUS_SHARED_IRQ_BUSY	.\SpinAPI\src\ddk_headers\ntstatus.h	540;"	d
STATUS_SHARED_POLICY	.\SpinAPI\src\ddk_headers\ntstatus.h	722;"	d
STATUS_SHARING_PAUSED	.\SpinAPI\src\ddk_headers\ntstatus.h	383;"	d
STATUS_SHARING_VIOLATION	.\SpinAPI\src\ddk_headers\ntstatus.h	243;"	d
STATUS_SHUTDOWN_IN_PROGRESS	.\SpinAPI\src\ddk_headers\ntstatus.h	816;"	d
STATUS_SINGLE_STEP	.\SpinAPI\src\ddk_headers\ntstatus.h	138;"	d
STATUS_SMARTCARD_CARD_BLOCKED	.\SpinAPI\src\ddk_headers\ntstatus.h	866;"	d
STATUS_SMARTCARD_CARD_NOT_AUTHENTICATED	.\SpinAPI\src\ddk_headers\ntstatus.h	867;"	d
STATUS_SMARTCARD_CERT_EXPIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	878;"	d
STATUS_SMARTCARD_CERT_REVOKED	.\SpinAPI\src\ddk_headers\ntstatus.h	874;"	d
STATUS_SMARTCARD_IO_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	872;"	d
STATUS_SMARTCARD_LOGON_REQUIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	812;"	d
STATUS_SMARTCARD_NO_CARD	.\SpinAPI\src\ddk_headers\ntstatus.h	868;"	d
STATUS_SMARTCARD_NO_CERTIFICATE	.\SpinAPI\src\ddk_headers\ntstatus.h	870;"	d
STATUS_SMARTCARD_NO_KEYSET	.\SpinAPI\src\ddk_headers\ntstatus.h	871;"	d
STATUS_SMARTCARD_NO_KEY_CONTAINER	.\SpinAPI\src\ddk_headers\ntstatus.h	869;"	d
STATUS_SMARTCARD_SUBSYSTEM_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	831;"	d
STATUS_SMARTCARD_WRONG_PIN	.\SpinAPI\src\ddk_headers\ntstatus.h	865;"	d
STATUS_SOME_NOT_MAPPED	.\SpinAPI\src\ddk_headers\ntstatus.h	68;"	d
STATUS_SOURCE_ELEMENT_EMPTY	.\SpinAPI\src\ddk_headers\ntstatus.h	700;"	d
STATUS_SPECIAL_ACCOUNT	.\SpinAPI\src\ddk_headers\ntstatus.h	468;"	d
STATUS_SPECIAL_GROUP	.\SpinAPI\src\ddk_headers\ntstatus.h	469;"	d
STATUS_SPECIAL_USER	.\SpinAPI\src\ddk_headers\ntstatus.h	470;"	d
STATUS_STACK_OVERFLOW	.\SpinAPI\src\ddk_headers\ntstatus.h	429;"	d
STATUS_STACK_OVERFLOW_READ	.\SpinAPI\src\ddk_headers\ntstatus.h	623;"	d
STATUS_STOPPED	.\SpinAPI\include\pulseblaster.h	17;"	d
STATUS_STOPPED	.\SpinAPI\src\pulseblaster.h	17;"	d
STATUS_STRONG_CRYPTO_NOT_SUPPORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	808;"	d
STATUS_SUCCESS	.\SpinAPI\src\ddk_headers\ntstatus.h	35;"	d
STATUS_SUSPEND_COUNT_EXCEEDED	.\SpinAPI\src\ddk_headers\ntstatus.h	250;"	d
STATUS_SXS_ACTIVATION_CONTEXT_DISABLED	.\SpinAPI\src\ddk_headers\ntstatus.h	1064;"	d
STATUS_SXS_ASSEMBLY_MISSING	.\SpinAPI\src\ddk_headers\ntstatus.h	1069;"	d
STATUS_SXS_ASSEMBLY_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1061;"	d
STATUS_SXS_CANT_GEN_ACTCTX	.\SpinAPI\src\ddk_headers\ntstatus.h	1059;"	d
STATUS_SXS_EARLY_DEACTIVATION	.\SpinAPI\src\ddk_headers\ntstatus.h	1072;"	d
STATUS_SXS_INVALID_ACTCTXDATA_FORMAT	.\SpinAPI\src\ddk_headers\ntstatus.h	1060;"	d
STATUS_SXS_INVALID_DEACTIVATION	.\SpinAPI\src\ddk_headers\ntstatus.h	1073;"	d
STATUS_SXS_KEY_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1065;"	d
STATUS_SXS_MANIFEST_FORMAT_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	1062;"	d
STATUS_SXS_MANIFEST_PARSE_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	1063;"	d
STATUS_SXS_MULTIPLE_DEACTIVATION	.\SpinAPI\src\ddk_headers\ntstatus.h	1074;"	d
STATUS_SXS_PROCESS_DEFAULT_ALREADY_SET	.\SpinAPI\src\ddk_headers\ntstatus.h	1071;"	d
STATUS_SXS_PROCESS_TERMINATION_REQUESTED	.\SpinAPI\src\ddk_headers\ntstatus.h	1076;"	d
STATUS_SXS_RELEASE_ACTIVATION_CONTEXT	.\SpinAPI\src\ddk_headers\ntstatus.h	1070;"	d
STATUS_SXS_SECTION_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	1058;"	d
STATUS_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY	.\SpinAPI\src\ddk_headers\ntstatus.h	1075;"	d
STATUS_SXS_THREAD_QUERIES_DISABLED	.\SpinAPI\src\ddk_headers\ntstatus.h	1068;"	d
STATUS_SXS_VERSION_CONFLICT	.\SpinAPI\src\ddk_headers\ntstatus.h	1066;"	d
STATUS_SXS_WRONG_SECTION_TYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	1067;"	d
STATUS_SYNCHRONIZATION_REQUIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	484;"	d
STATUS_SYSTEM_HIVE_TOO_LARGE	.\SpinAPI\src\ddk_headers\ntstatus.h	862;"	d
STATUS_SYSTEM_IMAGE_BAD_SIGNATURE	.\SpinAPI\src\ddk_headers\ntstatus.h	771;"	d
STATUS_SYSTEM_PROCESS_TERMINATED	.\SpinAPI\src\ddk_headers\ntstatus.h	609;"	d
STATUS_SYSTEM_SHUTDOWN	.\SpinAPI\src\ddk_headers\ntstatus.h	797;"	d
STATUS_THREAD_IS_TERMINATING	.\SpinAPI\src\ddk_headers\ntstatus.h	251;"	d
STATUS_THREAD_NOT_IN_PROCESS	.\SpinAPI\src\ddk_headers\ntstatus.h	474;"	d
STATUS_THREAD_WAS_SUSPENDED	.\SpinAPI\src\ddk_headers\ntstatus.h	92;"	d
STATUS_TIMEOUT	.\SpinAPI\src\ddk_headers\ntstatus.h	63;"	d
STATUS_TIMER_NOT_CANCELED	.\SpinAPI\src\ddk_headers\ntstatus.h	189;"	d
STATUS_TIMER_RESOLUTION_NOT_SET	.\SpinAPI\src\ddk_headers\ntstatus.h	652;"	d
STATUS_TIMER_RESUME_IGNORED	.\SpinAPI\src\ddk_headers\ntstatus.h	128;"	d
STATUS_TIME_DIFFERENCE_AT_DC	.\SpinAPI\src\ddk_headers\ntstatus.h	483;"	d
STATUS_TOKEN_ALREADY_IN_USE	.\SpinAPI\src\ddk_headers\ntstatus.h	475;"	d
STATUS_TOO_LATE	.\SpinAPI\src\ddk_headers\ntstatus.h	565;"	d
STATUS_TOO_MANY_ADDRESSES	.\SpinAPI\src\ddk_headers\ntstatus.h	592;"	d
STATUS_TOO_MANY_COMMANDS	.\SpinAPI\src\ddk_headers\ntstatus.h	369;"	d
STATUS_TOO_MANY_CONTEXT_IDS	.\SpinAPI\src\ddk_headers\ntstatus.h	522;"	d
STATUS_TOO_MANY_GUIDS_REQUESTED	.\SpinAPI\src\ddk_headers\ntstatus.h	306;"	d
STATUS_TOO_MANY_LINKS	.\SpinAPI\src\ddk_headers\ntstatus.h	677;"	d
STATUS_TOO_MANY_LUIDS_REQUESTED	.\SpinAPI\src\ddk_headers\ntstatus.h	292;"	d
STATUS_TOO_MANY_NAMES	.\SpinAPI\src\ddk_headers\ntstatus.h	381;"	d
STATUS_TOO_MANY_NODES	.\SpinAPI\src\ddk_headers\ntstatus.h	597;"	d
STATUS_TOO_MANY_OPENED_FILES	.\SpinAPI\src\ddk_headers\ntstatus.h	463;"	d
STATUS_TOO_MANY_PAGING_FILES	.\SpinAPI\src\ddk_headers\ntstatus.h	327;"	d
STATUS_TOO_MANY_PRINCIPALS	.\SpinAPI\src\ddk_headers\ntstatus.h	809;"	d
STATUS_TOO_MANY_SECRETS	.\SpinAPI\src\ddk_headers\ntstatus.h	518;"	d
STATUS_TOO_MANY_SESSIONS	.\SpinAPI\src\ddk_headers\ntstatus.h	382;"	d
STATUS_TOO_MANY_SIDS	.\SpinAPI\src\ddk_headers\ntstatus.h	554;"	d
STATUS_TOO_MANY_THREADS	.\SpinAPI\src\ddk_headers\ntstatus.h	473;"	d
STATUS_TRANSACTION_ABORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	598;"	d
STATUS_TRANSACTION_INVALID_ID	.\SpinAPI\src\ddk_headers\ntstatus.h	603;"	d
STATUS_TRANSACTION_INVALID_TYPE	.\SpinAPI\src\ddk_headers\ntstatus.h	604;"	d
STATUS_TRANSACTION_NO_MATCH	.\SpinAPI\src\ddk_headers\ntstatus.h	601;"	d
STATUS_TRANSACTION_NO_RELEASE	.\SpinAPI\src\ddk_headers\ntstatus.h	600;"	d
STATUS_TRANSACTION_RESPONDED	.\SpinAPI\src\ddk_headers\ntstatus.h	602;"	d
STATUS_TRANSACTION_TIMED_OUT	.\SpinAPI\src\ddk_headers\ntstatus.h	599;"	d
STATUS_TRANSLATION_COMPLETE	.\SpinAPI\src\ddk_headers\ntstatus.h	86;"	d
STATUS_TRANSPORT_FULL	.\SpinAPI\src\ddk_headers\ntstatus.h	764;"	d
STATUS_TRUSTED_DOMAIN_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	568;"	d
STATUS_TRUSTED_RELATIONSHIP_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	569;"	d
STATUS_TRUST_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	572;"	d
STATUS_UNABLE_TO_DECOMMIT_VM	.\SpinAPI\src\ddk_headers\ntstatus.h	221;"	d
STATUS_UNABLE_TO_DELETE_SECTION	.\SpinAPI\src\ddk_headers\ntstatus.h	204;"	d
STATUS_UNABLE_TO_FREE_VM	.\SpinAPI\src\ddk_headers\ntstatus.h	203;"	d
STATUS_UNABLE_TO_LOCK_MEDIA	.\SpinAPI\src\ddk_headers\ntstatus.h	546;"	d
STATUS_UNABLE_TO_UNLOAD_MEDIA	.\SpinAPI\src\ddk_headers\ntstatus.h	547;"	d
STATUS_UNDEFINED_CHARACTER	.\SpinAPI\src\ddk_headers\ntstatus.h	531;"	d
STATUS_UNEXPECTED_IO_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	409;"	d
STATUS_UNEXPECTED_MM_CREATE_ERR	.\SpinAPI\src\ddk_headers\ntstatus.h	410;"	d
STATUS_UNEXPECTED_MM_EXTEND_ERR	.\SpinAPI\src\ddk_headers\ntstatus.h	412;"	d
STATUS_UNEXPECTED_MM_MAP_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	411;"	d
STATUS_UNEXPECTED_NETWORK_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	372;"	d
STATUS_UNFINISHED_CONTEXT_DELETED	.\SpinAPI\src\ddk_headers\ntstatus.h	800;"	d
STATUS_UNHANDLED_EXCEPTION	.\SpinAPI\src\ddk_headers\ntstatus.h	500;"	d
STATUS_UNKNOWN_REVISION	.\SpinAPI\src\ddk_headers\ntstatus.h	264;"	d
STATUS_UNMAPPABLE_CHARACTER	.\SpinAPI\src\ddk_headers\ntstatus.h	530;"	d
STATUS_UNRECOGNIZED_MEDIA	.\SpinAPI\src\ddk_headers\ntstatus.h	197;"	d
STATUS_UNRECOGNIZED_VOLUME	.\SpinAPI\src\ddk_headers\ntstatus.h	511;"	d
STATUS_UNSUCCESSFUL	.\SpinAPI\src\ddk_headers\ntstatus.h	178;"	d
STATUS_UNSUPPORTED_COMPRESSION	.\SpinAPI\src\ddk_headers\ntstatus.h	671;"	d
STATUS_UNSUPPORTED_PREAUTH	.\SpinAPI\src\ddk_headers\ntstatus.h	834;"	d
STATUS_UNWIND	.\SpinAPI\src\ddk_headers\ntstatus.h	216;"	d
STATUS_UNWIND_CONSOLIDATE	.\SpinAPI\src\ddk_headers\ntstatus.h	172;"	d
STATUS_USER_APC	.\SpinAPI\src\ddk_headers\ntstatus.h	60;"	d
STATUS_USER_EXISTS	.\SpinAPI\src\ddk_headers\ntstatus.h	275;"	d
STATUS_USER_MAPPED_FILE	.\SpinAPI\src\ddk_headers\ntstatus.h	650;"	d
STATUS_USER_SESSION_DELETED	.\SpinAPI\src\ddk_headers\ntstatus.h	586;"	d
STATUS_VALIDATE_CONTINUE	.\SpinAPI\src\ddk_headers\ntstatus.h	689;"	d
STATUS_VARIABLE_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	432;"	d
STATUS_VDM_HARD_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	612;"	d
STATUS_VERIFY_REQUIRED	.\SpinAPI\src\ddk_headers\ntstatus.h	154;"	d
STATUS_VIRTUAL_CIRCUIT_CLOSED	.\SpinAPI\src\ddk_headers\ntstatus.h	390;"	d
STATUS_VOLUME_DISMOUNTED	.\SpinAPI\src\ddk_headers\ntstatus.h	686;"	d
STATUS_VOLUME_MOUNTED	.\SpinAPI\src\ddk_headers\ntstatus.h	70;"	d
STATUS_VOLUME_NOT_UPGRADED	.\SpinAPI\src\ddk_headers\ntstatus.h	725;"	d
STATUS_WAITING	.\SpinAPI\include\pulseblaster.h	20;"	d
STATUS_WAITING	.\SpinAPI\src\pulseblaster.h	20;"	d
STATUS_WAIT_0	.\SpinAPI\src\ddk_headers\ntstatus.h	52;"	d
STATUS_WAIT_1	.\SpinAPI\src\ddk_headers\ntstatus.h	53;"	d
STATUS_WAIT_2	.\SpinAPI\src\ddk_headers\ntstatus.h	54;"	d
STATUS_WAIT_3	.\SpinAPI\src\ddk_headers\ntstatus.h	55;"	d
STATUS_WAIT_63	.\SpinAPI\src\ddk_headers\ntstatus.h	56;"	d
STATUS_WAIT_FOR_OPLOCK	.\SpinAPI\src\ddk_headers\ntstatus.h	855;"	d
STATUS_WAKE_SYSTEM	.\SpinAPI\src\ddk_headers\ntstatus.h	717;"	d
STATUS_WAKE_SYSTEM_DEBUGGER	.\SpinAPI\src\ddk_headers\ntstatus.h	141;"	d
STATUS_WAS_LOCKED	.\SpinAPI\src\ddk_headers\ntstatus.h	116;"	d
STATUS_WAS_UNLOCKED	.\SpinAPI\src\ddk_headers\ntstatus.h	114;"	d
STATUS_WMI_ALREADY_DISABLED	.\SpinAPI\src\ddk_headers\ntstatus.h	820;"	d
STATUS_WMI_ALREADY_ENABLED	.\SpinAPI\src\ddk_headers\ntstatus.h	821;"	d
STATUS_WMI_GUID_DISCONNECTED	.\SpinAPI\src\ddk_headers\ntstatus.h	819;"	d
STATUS_WMI_GUID_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	718;"	d
STATUS_WMI_INSTANCE_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	719;"	d
STATUS_WMI_ITEMID_NOT_FOUND	.\SpinAPI\src\ddk_headers\ntstatus.h	720;"	d
STATUS_WMI_NOT_SUPPORTED	.\SpinAPI\src\ddk_headers\ntstatus.h	783;"	d
STATUS_WMI_READ_ONLY	.\SpinAPI\src\ddk_headers\ntstatus.h	760;"	d
STATUS_WMI_SET_FAILURE	.\SpinAPI\src\ddk_headers\ntstatus.h	761;"	d
STATUS_WMI_TRY_AGAIN	.\SpinAPI\src\ddk_headers\ntstatus.h	721;"	d
STATUS_WORKING_SET_LIMIT_RANGE	.\SpinAPI\src\ddk_headers\ntstatus.h	93;"	d
STATUS_WORKING_SET_QUOTA	.\SpinAPI\src\ddk_headers\ntstatus.h	337;"	d
STATUS_WOW_ASSERTION	.\SpinAPI\src\ddk_headers\ntstatus.h	880;"	d
STATUS_WRONG_CREDENTIAL_HANDLE	.\SpinAPI\src\ddk_headers\ntstatus.h	804;"	d
STATUS_WRONG_EFS	.\SpinAPI\src\ddk_headers\ntstatus.h	712;"	d
STATUS_WRONG_PASSWORD	.\SpinAPI\src\ddk_headers\ntstatus.h	282;"	d
STATUS_WRONG_PASSWORD_CORE	.\SpinAPI\src\ddk_headers\ntstatus.h	505;"	d
STATUS_WRONG_VOLUME	.\SpinAPI\src\ddk_headers\ntstatus.h	195;"	d
STATUS_WX86_BREAKPOINT	.\SpinAPI\src\ddk_headers\ntstatus.h	122;"	d
STATUS_WX86_CONTINUE	.\SpinAPI\src\ddk_headers\ntstatus.h	120;"	d
STATUS_WX86_CREATEWX86TIB	.\SpinAPI\src\ddk_headers\ntstatus.h	131;"	d
STATUS_WX86_EXCEPTION_CHAIN	.\SpinAPI\src\ddk_headers\ntstatus.h	125;"	d
STATUS_WX86_EXCEPTION_CONTINUE	.\SpinAPI\src\ddk_headers\ntstatus.h	123;"	d
STATUS_WX86_EXCEPTION_LASTCHANCE	.\SpinAPI\src\ddk_headers\ntstatus.h	124;"	d
STATUS_WX86_FLOAT_STACK_CHECK	.\SpinAPI\src\ddk_headers\ntstatus.h	688;"	d
STATUS_WX86_INTERNAL_ERROR	.\SpinAPI\src\ddk_headers\ntstatus.h	687;"	d
STATUS_WX86_SINGLE_STEP	.\SpinAPI\src\ddk_headers\ntstatus.h	121;"	d
STATUS_WX86_UNSIMULATE	.\SpinAPI\src\ddk_headers\ntstatus.h	119;"	d
STEP	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	48;"	d	file:
STOP	.\SpinAPI\include\pulseblaster.h	24;"	d
STOP	.\SpinAPI\src\pulseblaster.h	24;"	d
STOP	.\mrispinapi.h	90;"	d
SUB	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	54;"	d
SUITE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} SUITE_TYPE;$/;"	t	typeref:enum:_SUITE_TYPE
SW	.\Sleator_apps\CPMG\cpmg.h	/^	double SW;                  \/\/kHz$/;"	m	struct:SCANPARAMS
SW	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double SW;$/;"	m	struct:SCANPARAMS
SW	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double SW;$/;"	m	struct:SCANPARAMS
SW	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double SW;$/;"	m	struct:SCANPARAMS
SW	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double SW;$/;"	m	struct:SCANPARAMS
SW	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	double SW;                  \/\/kHz$/;"	m	struct:SCANPARAMS
SW	.\proc_quick.py	/^                SW = float(temp[-1])$/;"	v
SW	.\swig\Hahn_echo\proc_echo.py	/^                SW = float(temp[-1])$/;"	v
SWAP	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	55;"	d
SWIGEXPORT	.\ppg_wrap.c	102;"	d	file:
SWIGEXPORT	.\ppg_wrap.c	104;"	d	file:
SWIGEXPORT	.\ppg_wrap.c	96;"	d	file:
SWIGEXPORT	.\ppg_wrap.c	98;"	d	file:
SWIGEXPORT	.\swig\Hahn_echo\.c	102;"	d	file:
SWIGEXPORT	.\swig\Hahn_echo\.c	104;"	d	file:
SWIGEXPORT	.\swig\Hahn_echo\.c	96;"	d	file:
SWIGEXPORT	.\swig\Hahn_echo\.c	98;"	d	file:
SWIGEXPORT	.\swig\Hahn_echo\Hahn_echo_wrap.c	102;"	d	file:
SWIGEXPORT	.\swig\Hahn_echo\Hahn_echo_wrap.c	104;"	d	file:
SWIGEXPORT	.\swig\Hahn_echo\Hahn_echo_wrap.c	96;"	d	file:
SWIGEXPORT	.\swig\Hahn_echo\Hahn_echo_wrap.c	98;"	d	file:
SWIGEXPORT	.\swig\example\example_wrap.c	102;"	d	file:
SWIGEXPORT	.\swig\example\example_wrap.c	104;"	d	file:
SWIGEXPORT	.\swig\example\example_wrap.c	96;"	d	file:
SWIGEXPORT	.\swig\example\example_wrap.c	98;"	d	file:
SWIGEXPORT	.\swig\example\get_rand_array\get_rand_array_wrap.c	102;"	d	file:
SWIGEXPORT	.\swig\example\get_rand_array\get_rand_array_wrap.c	104;"	d	file:
SWIGEXPORT	.\swig\example\get_rand_array\get_rand_array_wrap.c	96;"	d	file:
SWIGEXPORT	.\swig\example\get_rand_array\get_rand_array_wrap.c	98;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\ppg_lang_wrap.c	102;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\ppg_lang_wrap.c	104;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\ppg_lang_wrap.c	96;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\ppg_lang_wrap.c	98;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\temp\ppg_temp_wrap.c	102;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\temp\ppg_temp_wrap.c	104;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\temp\ppg_temp_wrap.c	96;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\temp\ppg_temp_wrap.c	98;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	102;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	104;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	96;"	d	file:
SWIGEXPORT	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	98;"	d	file:
SWIGINLINE	.\ppg_wrap.c	39;"	d	file:
SWIGINLINE	.\ppg_wrap.c	41;"	d	file:
SWIGINLINE	.\swig\Hahn_echo\.c	39;"	d	file:
SWIGINLINE	.\swig\Hahn_echo\.c	41;"	d	file:
SWIGINLINE	.\swig\Hahn_echo\Hahn_echo_wrap.c	39;"	d	file:
SWIGINLINE	.\swig\Hahn_echo\Hahn_echo_wrap.c	41;"	d	file:
SWIGINLINE	.\swig\example\example_wrap.c	39;"	d	file:
SWIGINLINE	.\swig\example\example_wrap.c	41;"	d	file:
SWIGINLINE	.\swig\example\get_rand_array\get_rand_array_wrap.c	39;"	d	file:
SWIGINLINE	.\swig\example\get_rand_array\get_rand_array_wrap.c	41;"	d	file:
SWIGINLINE	.\swig\ppg_lang\ppg_lang_wrap.c	39;"	d	file:
SWIGINLINE	.\swig\ppg_lang\ppg_lang_wrap.c	41;"	d	file:
SWIGINLINE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	39;"	d	file:
SWIGINLINE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	41;"	d	file:
SWIGINLINE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	39;"	d	file:
SWIGINLINE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	41;"	d	file:
SWIGINTERN	.\ppg_wrap.c	76;"	d	file:
SWIGINTERN	.\swig\Hahn_echo\.c	76;"	d	file:
SWIGINTERN	.\swig\Hahn_echo\Hahn_echo_wrap.c	76;"	d	file:
SWIGINTERN	.\swig\example\example_wrap.c	76;"	d	file:
SWIGINTERN	.\swig\example\get_rand_array\get_rand_array_wrap.c	76;"	d	file:
SWIGINTERN	.\swig\ppg_lang\ppg_lang_wrap.c	76;"	d	file:
SWIGINTERN	.\swig\ppg_lang\temp\ppg_temp_wrap.c	76;"	d	file:
SWIGINTERN	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	76;"	d	file:
SWIGINTERNINLINE	.\ppg_wrap.c	81;"	d	file:
SWIGINTERNINLINE	.\swig\Hahn_echo\.c	81;"	d	file:
SWIGINTERNINLINE	.\swig\Hahn_echo\Hahn_echo_wrap.c	81;"	d	file:
SWIGINTERNINLINE	.\swig\example\example_wrap.c	81;"	d	file:
SWIGINTERNINLINE	.\swig\example\get_rand_array\get_rand_array_wrap.c	81;"	d	file:
SWIGINTERNINLINE	.\swig\ppg_lang\ppg_lang_wrap.c	81;"	d	file:
SWIGINTERNINLINE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	81;"	d	file:
SWIGINTERNINLINE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	81;"	d	file:
SWIGPYTHON	.\ppg_wrap.c	13;"	d	file:
SWIGPYTHON	.\swig\Hahn_echo\.c	13;"	d	file:
SWIGPYTHON	.\swig\Hahn_echo\Hahn_echo_wrap.c	13;"	d	file:
SWIGPYTHON	.\swig\example\example_wrap.c	13;"	d	file:
SWIGPYTHON	.\swig\example\get_rand_array\get_rand_array_wrap.c	13;"	d	file:
SWIGPYTHON	.\swig\ppg_lang\ppg_lang_wrap.c	13;"	d	file:
SWIGPYTHON	.\swig\ppg_lang\temp\ppg_temp_wrap.c	13;"	d	file:
SWIGPYTHON	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	13;"	d	file:
SWIGPY_CAPSULE_NAME	.\ppg_wrap.c	949;"	d	file:
SWIGPY_CAPSULE_NAME	.\swig\Hahn_echo\.c	949;"	d	file:
SWIGPY_CAPSULE_NAME	.\swig\Hahn_echo\Hahn_echo_wrap.c	949;"	d	file:
SWIGPY_CAPSULE_NAME	.\swig\example\example_wrap.c	949;"	d	file:
SWIGPY_CAPSULE_NAME	.\swig\example\get_rand_array\get_rand_array_wrap.c	949;"	d	file:
SWIGPY_CAPSULE_NAME	.\swig\ppg_lang\ppg_lang_wrap.c	949;"	d	file:
SWIGPY_CAPSULE_NAME	.\swig\ppg_lang\temp\ppg_temp_wrap.c	949;"	d	file:
SWIGPY_CAPSULE_NAME	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	949;"	d	file:
SWIGPY_USE_CAPSULE	.\ppg_wrap.c	948;"	d	file:
SWIGPY_USE_CAPSULE	.\swig\Hahn_echo\.c	948;"	d	file:
SWIGPY_USE_CAPSULE	.\swig\Hahn_echo\Hahn_echo_wrap.c	948;"	d	file:
SWIGPY_USE_CAPSULE	.\swig\example\example_wrap.c	948;"	d	file:
SWIGPY_USE_CAPSULE	.\swig\example\get_rand_array\get_rand_array_wrap.c	948;"	d	file:
SWIGPY_USE_CAPSULE	.\swig\ppg_lang\ppg_lang_wrap.c	948;"	d	file:
SWIGPY_USE_CAPSULE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	948;"	d	file:
SWIGPY_USE_CAPSULE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	948;"	d	file:
SWIGRUNTIME	.\ppg_wrap.c	182;"	d	file:
SWIGRUNTIME	.\swig\Hahn_echo\.c	182;"	d	file:
SWIGRUNTIME	.\swig\Hahn_echo\Hahn_echo_wrap.c	182;"	d	file:
SWIGRUNTIME	.\swig\example\example_wrap.c	182;"	d	file:
SWIGRUNTIME	.\swig\example\get_rand_array\get_rand_array_wrap.c	182;"	d	file:
SWIGRUNTIME	.\swig\ppg_lang\ppg_lang_wrap.c	182;"	d	file:
SWIGRUNTIME	.\swig\ppg_lang\temp\ppg_temp_wrap.c	182;"	d	file:
SWIGRUNTIME	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	182;"	d	file:
SWIGRUNTIMEINLINE	.\ppg_wrap.c	186;"	d	file:
SWIGRUNTIMEINLINE	.\swig\Hahn_echo\.c	186;"	d	file:
SWIGRUNTIMEINLINE	.\swig\Hahn_echo\Hahn_echo_wrap.c	186;"	d	file:
SWIGRUNTIMEINLINE	.\swig\example\example_wrap.c	186;"	d	file:
SWIGRUNTIMEINLINE	.\swig\example\get_rand_array\get_rand_array_wrap.c	186;"	d	file:
SWIGRUNTIMEINLINE	.\swig\ppg_lang\ppg_lang_wrap.c	186;"	d	file:
SWIGRUNTIMEINLINE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	186;"	d	file:
SWIGRUNTIMEINLINE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	186;"	d	file:
SWIGSTDCALL	.\ppg_wrap.c	112;"	d	file:
SWIGSTDCALL	.\ppg_wrap.c	114;"	d	file:
SWIGSTDCALL	.\swig\Hahn_echo\.c	112;"	d	file:
SWIGSTDCALL	.\swig\Hahn_echo\.c	114;"	d	file:
SWIGSTDCALL	.\swig\Hahn_echo\Hahn_echo_wrap.c	112;"	d	file:
SWIGSTDCALL	.\swig\Hahn_echo\Hahn_echo_wrap.c	114;"	d	file:
SWIGSTDCALL	.\swig\example\example_wrap.c	112;"	d	file:
SWIGSTDCALL	.\swig\example\example_wrap.c	114;"	d	file:
SWIGSTDCALL	.\swig\example\get_rand_array\get_rand_array_wrap.c	112;"	d	file:
SWIGSTDCALL	.\swig\example\get_rand_array\get_rand_array_wrap.c	114;"	d	file:
SWIGSTDCALL	.\swig\ppg_lang\ppg_lang_wrap.c	112;"	d	file:
SWIGSTDCALL	.\swig\ppg_lang\ppg_lang_wrap.c	114;"	d	file:
SWIGSTDCALL	.\swig\ppg_lang\temp\ppg_temp_wrap.c	112;"	d	file:
SWIGSTDCALL	.\swig\ppg_lang\temp\ppg_temp_wrap.c	114;"	d	file:
SWIGSTDCALL	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	112;"	d	file:
SWIGSTDCALL	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	114;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\ppg_wrap.c	26;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\ppg_wrap.c	30;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\ppg_wrap.c	32;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\Hahn_echo\.c	26;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\Hahn_echo\.c	30;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\Hahn_echo\.c	32;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\Hahn_echo\Hahn_echo_wrap.c	26;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\Hahn_echo\Hahn_echo_wrap.c	30;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\Hahn_echo\Hahn_echo_wrap.c	32;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\example\example_wrap.c	26;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\example\example_wrap.c	30;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\example\example_wrap.c	32;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\example\get_rand_array\get_rand_array_wrap.c	26;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\example\get_rand_array\get_rand_array_wrap.c	30;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\example\get_rand_array\get_rand_array_wrap.c	32;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\ppg_lang\ppg_lang_wrap.c	26;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\ppg_lang\ppg_lang_wrap.c	30;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\ppg_lang\ppg_lang_wrap.c	32;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\ppg_lang\temp\ppg_temp_wrap.c	26;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\ppg_lang\temp\ppg_temp_wrap.c	30;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\ppg_lang\temp\ppg_temp_wrap.c	32;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	26;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	30;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	32;"	d	file:
SWIGTYPE_p___int64	.\swig\Hahn_echo\Hahn_echo_wrap.c	2982;"	d	file:
SWIGTYPE_p_char	.\ppg_wrap.c	2982;"	d	file:
SWIGTYPE_p_char	.\swig\Hahn_echo\.c	2982;"	d	file:
SWIGTYPE_p_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	2983;"	d	file:
SWIGTYPE_p_char	.\swig\example\example_wrap.c	2982;"	d	file:
SWIGTYPE_p_char	.\swig\example\get_rand_array\get_rand_array_wrap.c	2982;"	d	file:
SWIGTYPE_p_char	.\swig\ppg_lang\ppg_lang_wrap.c	2982;"	d	file:
SWIGTYPE_p_char	.\swig\ppg_lang\temp\ppg_temp_wrap.c	2982;"	d	file:
SWIGTYPE_p_char	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	2982;"	d	file:
SWIGTYPE_p_double	.\swig\example\get_rand_array\get_rand_array_wrap.c	2983;"	d	file:
SWIGTYPE_p_float	.\swig\Hahn_echo\Hahn_echo_wrap.c	2984;"	d	file:
SWIGTYPE_p_int	.\swig\Hahn_echo\Hahn_echo_wrap.c	2985;"	d	file:
SWIGTYPE_p_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	2986;"	d	file:
SWIGTYPE_p_p_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	2987;"	d	file:
SWIGTYPE_p_p_unsigned_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	2988;"	d	file:
SWIGTYPE_p_short	.\swig\Hahn_echo\Hahn_echo_wrap.c	2989;"	d	file:
SWIGTYPE_p_signed___int64	.\swig\Hahn_echo\Hahn_echo_wrap.c	2990;"	d	file:
SWIGTYPE_p_signed_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	2991;"	d	file:
SWIGTYPE_p_unsigned___int64	.\swig\Hahn_echo\Hahn_echo_wrap.c	2992;"	d	file:
SWIGTYPE_p_unsigned_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	2993;"	d	file:
SWIGTYPE_p_unsigned_int	.\swig\Hahn_echo\Hahn_echo_wrap.c	2994;"	d	file:
SWIGTYPE_p_unsigned_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	2995;"	d	file:
SWIGTYPE_p_unsigned_short	.\swig\Hahn_echo\Hahn_echo_wrap.c	2996;"	d	file:
SWIGUNUSED	.\ppg_wrap.c	49;"	d	file:
SWIGUNUSED	.\ppg_wrap.c	51;"	d	file:
SWIGUNUSED	.\ppg_wrap.c	54;"	d	file:
SWIGUNUSED	.\ppg_wrap.c	56;"	d	file:
SWIGUNUSED	.\swig\Hahn_echo\.c	49;"	d	file:
SWIGUNUSED	.\swig\Hahn_echo\.c	51;"	d	file:
SWIGUNUSED	.\swig\Hahn_echo\.c	54;"	d	file:
SWIGUNUSED	.\swig\Hahn_echo\.c	56;"	d	file:
SWIGUNUSED	.\swig\Hahn_echo\Hahn_echo_wrap.c	49;"	d	file:
SWIGUNUSED	.\swig\Hahn_echo\Hahn_echo_wrap.c	51;"	d	file:
SWIGUNUSED	.\swig\Hahn_echo\Hahn_echo_wrap.c	54;"	d	file:
SWIGUNUSED	.\swig\Hahn_echo\Hahn_echo_wrap.c	56;"	d	file:
SWIGUNUSED	.\swig\example\example_wrap.c	49;"	d	file:
SWIGUNUSED	.\swig\example\example_wrap.c	51;"	d	file:
SWIGUNUSED	.\swig\example\example_wrap.c	54;"	d	file:
SWIGUNUSED	.\swig\example\example_wrap.c	56;"	d	file:
SWIGUNUSED	.\swig\example\get_rand_array\get_rand_array_wrap.c	49;"	d	file:
SWIGUNUSED	.\swig\example\get_rand_array\get_rand_array_wrap.c	51;"	d	file:
SWIGUNUSED	.\swig\example\get_rand_array\get_rand_array_wrap.c	54;"	d	file:
SWIGUNUSED	.\swig\example\get_rand_array\get_rand_array_wrap.c	56;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\ppg_lang_wrap.c	49;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\ppg_lang_wrap.c	51;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\ppg_lang_wrap.c	54;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\ppg_lang_wrap.c	56;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\temp\ppg_temp_wrap.c	49;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\temp\ppg_temp_wrap.c	51;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\temp\ppg_temp_wrap.c	54;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\temp\ppg_temp_wrap.c	56;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	49;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	51;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	54;"	d	file:
SWIGUNUSED	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	56;"	d	file:
SWIGUNUSEDPARM	.\ppg_wrap.c	/^  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {$/;"	f
SWIGUNUSEDPARM	.\ppg_wrap.c	/^SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))$/;"	f
SWIGUNUSEDPARM	.\ppg_wrap.c	68;"	d	file:
SWIGUNUSEDPARM	.\ppg_wrap.c	70;"	d	file:
SWIGUNUSEDPARM	.\swig\Hahn_echo\.c	/^  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {$/;"	f
SWIGUNUSEDPARM	.\swig\Hahn_echo\.c	/^SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))$/;"	f
SWIGUNUSEDPARM	.\swig\Hahn_echo\.c	68;"	d	file:
SWIGUNUSEDPARM	.\swig\Hahn_echo\.c	70;"	d	file:
SWIGUNUSEDPARM	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {$/;"	f
SWIGUNUSEDPARM	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))$/;"	f
SWIGUNUSEDPARM	.\swig\Hahn_echo\Hahn_echo_wrap.c	68;"	d	file:
SWIGUNUSEDPARM	.\swig\Hahn_echo\Hahn_echo_wrap.c	70;"	d	file:
SWIGUNUSEDPARM	.\swig\example\example_wrap.c	/^  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {$/;"	f
SWIGUNUSEDPARM	.\swig\example\example_wrap.c	/^SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))$/;"	f
SWIGUNUSEDPARM	.\swig\example\example_wrap.c	68;"	d	file:
SWIGUNUSEDPARM	.\swig\example\example_wrap.c	70;"	d	file:
SWIGUNUSEDPARM	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {$/;"	f
SWIGUNUSEDPARM	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))$/;"	f
SWIGUNUSEDPARM	.\swig\example\get_rand_array\get_rand_array_wrap.c	68;"	d	file:
SWIGUNUSEDPARM	.\swig\example\get_rand_array\get_rand_array_wrap.c	70;"	d	file:
SWIGUNUSEDPARM	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {$/;"	f
SWIGUNUSEDPARM	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))$/;"	f
SWIGUNUSEDPARM	.\swig\ppg_lang\ppg_lang_wrap.c	68;"	d	file:
SWIGUNUSEDPARM	.\swig\ppg_lang\ppg_lang_wrap.c	70;"	d	file:
SWIGUNUSEDPARM	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {$/;"	f
SWIGUNUSEDPARM	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))$/;"	f
SWIGUNUSEDPARM	.\swig\ppg_lang\temp\ppg_temp_wrap.c	68;"	d	file:
SWIGUNUSEDPARM	.\swig\ppg_lang\temp\ppg_temp_wrap.c	70;"	d	file:
SWIGUNUSEDPARM	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {$/;"	f
SWIGUNUSEDPARM	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))$/;"	f
SWIGUNUSEDPARM	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	68;"	d	file:
SWIGUNUSEDPARM	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	70;"	d	file:
SWIGVERSION	.\ppg_wrap.c	3008;"	d	file:
SWIGVERSION	.\swig\Hahn_echo\.c	3008;"	d	file:
SWIGVERSION	.\swig\Hahn_echo\Hahn_echo_wrap.c	3022;"	d	file:
SWIGVERSION	.\swig\example\example_wrap.c	3008;"	d	file:
SWIGVERSION	.\swig\example\get_rand_array\get_rand_array_wrap.c	3009;"	d	file:
SWIGVERSION	.\swig\ppg_lang\ppg_lang_wrap.c	3008;"	d	file:
SWIGVERSION	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3008;"	d	file:
SWIGVERSION	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3008;"	d	file:
SWIG_AcquirePtr	.\ppg_wrap.c	1169;"	d	file:
SWIG_AcquirePtr	.\swig\Hahn_echo\.c	1169;"	d	file:
SWIG_AcquirePtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	1169;"	d	file:
SWIG_AcquirePtr	.\swig\example\example_wrap.c	1169;"	d	file:
SWIG_AcquirePtr	.\swig\example\get_rand_array\get_rand_array_wrap.c	1169;"	d	file:
SWIG_AcquirePtr	.\swig\ppg_lang\ppg_lang_wrap.c	1169;"	d	file:
SWIG_AcquirePtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1169;"	d	file:
SWIG_AcquirePtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1169;"	d	file:
SWIG_AddCast	.\ppg_wrap.c	/^SWIGINTERNINLINE int SWIG_AddCast(int r) {$/;"	f
SWIG_AddCast	.\ppg_wrap.c	322;"	d	file:
SWIG_AddCast	.\swig\Hahn_echo\.c	/^SWIGINTERNINLINE int SWIG_AddCast(int r) {$/;"	f
SWIG_AddCast	.\swig\Hahn_echo\.c	322;"	d	file:
SWIG_AddCast	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIGINTERNINLINE int SWIG_AddCast(int r) {$/;"	f
SWIG_AddCast	.\swig\Hahn_echo\Hahn_echo_wrap.c	322;"	d	file:
SWIG_AddCast	.\swig\example\example_wrap.c	/^SWIGINTERNINLINE int SWIG_AddCast(int r) {$/;"	f
SWIG_AddCast	.\swig\example\example_wrap.c	322;"	d	file:
SWIG_AddCast	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIGINTERNINLINE int SWIG_AddCast(int r) {$/;"	f
SWIG_AddCast	.\swig\example\get_rand_array\get_rand_array_wrap.c	322;"	d	file:
SWIG_AddCast	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIGINTERNINLINE int SWIG_AddCast(int r) {$/;"	f
SWIG_AddCast	.\swig\ppg_lang\ppg_lang_wrap.c	322;"	d	file:
SWIG_AddCast	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIGINTERNINLINE int SWIG_AddCast(int r) {$/;"	f
SWIG_AddCast	.\swig\ppg_lang\temp\ppg_temp_wrap.c	322;"	d	file:
SWIG_AddCast	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIGINTERNINLINE int SWIG_AddCast(int r) {$/;"	f
SWIG_AddCast	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	322;"	d	file:
SWIG_AddNewMask	.\ppg_wrap.c	298;"	d	file:
SWIG_AddNewMask	.\swig\Hahn_echo\.c	298;"	d	file:
SWIG_AddNewMask	.\swig\Hahn_echo\Hahn_echo_wrap.c	298;"	d	file:
SWIG_AddNewMask	.\swig\example\example_wrap.c	298;"	d	file:
SWIG_AddNewMask	.\swig\example\get_rand_array\get_rand_array_wrap.c	298;"	d	file:
SWIG_AddNewMask	.\swig\ppg_lang\ppg_lang_wrap.c	298;"	d	file:
SWIG_AddNewMask	.\swig\ppg_lang\temp\ppg_temp_wrap.c	298;"	d	file:
SWIG_AddNewMask	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	298;"	d	file:
SWIG_AddTmpMask	.\ppg_wrap.c	301;"	d	file:
SWIG_AddTmpMask	.\swig\Hahn_echo\.c	301;"	d	file:
SWIG_AddTmpMask	.\swig\Hahn_echo\Hahn_echo_wrap.c	301;"	d	file:
SWIG_AddTmpMask	.\swig\example\example_wrap.c	301;"	d	file:
SWIG_AddTmpMask	.\swig\example\get_rand_array\get_rand_array_wrap.c	301;"	d	file:
SWIG_AddTmpMask	.\swig\ppg_lang\ppg_lang_wrap.c	301;"	d	file:
SWIG_AddTmpMask	.\swig\ppg_lang\temp\ppg_temp_wrap.c	301;"	d	file:
SWIG_AddTmpMask	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	301;"	d	file:
SWIG_ArgError	.\ppg_wrap.c	284;"	d	file:
SWIG_ArgError	.\swig\Hahn_echo\.c	284;"	d	file:
SWIG_ArgError	.\swig\Hahn_echo\Hahn_echo_wrap.c	284;"	d	file:
SWIG_ArgError	.\swig\example\example_wrap.c	284;"	d	file:
SWIG_ArgError	.\swig\example\get_rand_array\get_rand_array_wrap.c	284;"	d	file:
SWIG_ArgError	.\swig\ppg_lang\ppg_lang_wrap.c	284;"	d	file:
SWIG_ArgError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	284;"	d	file:
SWIG_ArgError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	284;"	d	file:
SWIG_AsCharPtrAndSize	.\ppg_wrap.c	/^SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)$/;"	f
SWIG_AsCharPtrAndSize	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)$/;"	f
SWIG_AsCharPtrAndSize	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)$/;"	f
SWIG_AsCharPtrAndSize	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)$/;"	f
SWIG_AsCharPtrAndSize	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)$/;"	f
SWIG_AsVal_double	.\ppg_wrap.c	/^SWIG_AsVal_double (PyObject *obj, double *val)$/;"	f
SWIG_AsVal_double	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_AsVal_double (PyObject *obj, double *val)$/;"	f
SWIG_AsVal_double	.\swig\example\example_wrap.c	/^SWIG_AsVal_double (PyObject *obj, double *val)$/;"	f
SWIG_AsVal_double	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_AsVal_double (PyObject *obj, double *val)$/;"	f
SWIG_AsVal_double	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_AsVal_double (PyObject *obj, double *val)$/;"	f
SWIG_AsVal_double	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_AsVal_double (PyObject *obj, double *val)$/;"	f
SWIG_AsVal_double	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_AsVal_double (PyObject *obj, double *val)$/;"	f
SWIG_AsVal_int	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_AsVal_int (PyObject * obj, int *val)$/;"	f
SWIG_AsVal_int	.\swig\example\example_wrap.c	/^SWIG_AsVal_int (PyObject * obj, int *val)$/;"	f
SWIG_AsVal_int	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_AsVal_int (PyObject * obj, int *val)$/;"	f
SWIG_AsVal_int	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_AsVal_int (PyObject * obj, int *val)$/;"	f
SWIG_AsVal_int	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_AsVal_int (PyObject * obj, int *val)$/;"	f
SWIG_AsVal_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_AsVal_long (PyObject *obj, long* val)$/;"	f
SWIG_AsVal_long	.\swig\example\example_wrap.c	/^SWIG_AsVal_long (PyObject *obj, long* val)$/;"	f
SWIG_AsVal_long	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_AsVal_long (PyObject *obj, long* val)$/;"	f
SWIG_AsVal_long	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_AsVal_long (PyObject *obj, long* val)$/;"	f
SWIG_AsVal_long	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_AsVal_long (PyObject *obj, long* val)$/;"	f
SWIG_AsVal_unsigned_SS_int	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)$/;"	f
SWIG_AsVal_unsigned_SS_int	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)$/;"	f
SWIG_AsVal_unsigned_SS_int	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)$/;"	f
SWIG_AsVal_unsigned_SS_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) $/;"	f
SWIG_AsVal_unsigned_SS_long	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) $/;"	f
SWIG_AsVal_unsigned_SS_long	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) $/;"	f
SWIG_AttributeError	.\ppg_wrap.c	736;"	d	file:
SWIG_AttributeError	.\swig\Hahn_echo\.c	736;"	d	file:
SWIG_AttributeError	.\swig\Hahn_echo\Hahn_echo_wrap.c	736;"	d	file:
SWIG_AttributeError	.\swig\example\example_wrap.c	736;"	d	file:
SWIG_AttributeError	.\swig\example\get_rand_array\get_rand_array_wrap.c	736;"	d	file:
SWIG_AttributeError	.\swig\ppg_lang\ppg_lang_wrap.c	736;"	d	file:
SWIG_AttributeError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	736;"	d	file:
SWIG_AttributeError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	736;"	d	file:
SWIG_BADOBJ	.\ppg_wrap.c	293;"	d	file:
SWIG_BADOBJ	.\swig\Hahn_echo\.c	293;"	d	file:
SWIG_BADOBJ	.\swig\Hahn_echo\Hahn_echo_wrap.c	293;"	d	file:
SWIG_BADOBJ	.\swig\example\example_wrap.c	293;"	d	file:
SWIG_BADOBJ	.\swig\example\get_rand_array\get_rand_array_wrap.c	293;"	d	file:
SWIG_BADOBJ	.\swig\ppg_lang\ppg_lang_wrap.c	293;"	d	file:
SWIG_BADOBJ	.\swig\ppg_lang\temp\ppg_temp_wrap.c	293;"	d	file:
SWIG_BADOBJ	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	293;"	d	file:
SWIG_BUFFER_SIZE	.\ppg_wrap.c	191;"	d	file:
SWIG_BUFFER_SIZE	.\swig\Hahn_echo\.c	191;"	d	file:
SWIG_BUFFER_SIZE	.\swig\Hahn_echo\Hahn_echo_wrap.c	191;"	d	file:
SWIG_BUFFER_SIZE	.\swig\example\example_wrap.c	191;"	d	file:
SWIG_BUFFER_SIZE	.\swig\example\get_rand_array\get_rand_array_wrap.c	191;"	d	file:
SWIG_BUFFER_SIZE	.\swig\ppg_lang\ppg_lang_wrap.c	191;"	d	file:
SWIG_BUFFER_SIZE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	191;"	d	file:
SWIG_BUFFER_SIZE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	191;"	d	file:
SWIG_BUILTIN_INIT	.\ppg_wrap.c	1381;"	d	file:
SWIG_BUILTIN_INIT	.\swig\Hahn_echo\.c	1381;"	d	file:
SWIG_BUILTIN_INIT	.\swig\Hahn_echo\Hahn_echo_wrap.c	1381;"	d	file:
SWIG_BUILTIN_INIT	.\swig\example\example_wrap.c	1381;"	d	file:
SWIG_BUILTIN_INIT	.\swig\example\get_rand_array\get_rand_array_wrap.c	1381;"	d	file:
SWIG_BUILTIN_INIT	.\swig\ppg_lang\ppg_lang_wrap.c	1381;"	d	file:
SWIG_BUILTIN_INIT	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1381;"	d	file:
SWIG_BUILTIN_INIT	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1381;"	d	file:
SWIG_BUILTIN_TP_INIT	.\ppg_wrap.c	1380;"	d	file:
SWIG_BUILTIN_TP_INIT	.\swig\Hahn_echo\.c	1380;"	d	file:
SWIG_BUILTIN_TP_INIT	.\swig\Hahn_echo\Hahn_echo_wrap.c	1380;"	d	file:
SWIG_BUILTIN_TP_INIT	.\swig\example\example_wrap.c	1380;"	d	file:
SWIG_BUILTIN_TP_INIT	.\swig\example\get_rand_array\get_rand_array_wrap.c	1380;"	d	file:
SWIG_BUILTIN_TP_INIT	.\swig\ppg_lang\ppg_lang_wrap.c	1380;"	d	file:
SWIG_BUILTIN_TP_INIT	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1380;"	d	file:
SWIG_BUILTIN_TP_INIT	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1380;"	d	file:
SWIG_CASTRANKLIMIT	.\ppg_wrap.c	287;"	d	file:
SWIG_CASTRANKLIMIT	.\swig\Hahn_echo\.c	287;"	d	file:
SWIG_CASTRANKLIMIT	.\swig\Hahn_echo\Hahn_echo_wrap.c	287;"	d	file:
SWIG_CASTRANKLIMIT	.\swig\example\example_wrap.c	287;"	d	file:
SWIG_CASTRANKLIMIT	.\swig\example\get_rand_array\get_rand_array_wrap.c	287;"	d	file:
SWIG_CASTRANKLIMIT	.\swig\ppg_lang\ppg_lang_wrap.c	287;"	d	file:
SWIG_CASTRANKLIMIT	.\swig\ppg_lang\temp\ppg_temp_wrap.c	287;"	d	file:
SWIG_CASTRANKLIMIT	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	287;"	d	file:
SWIG_CASTRANKMASK	.\ppg_wrap.c	313;"	d	file:
SWIG_CASTRANKMASK	.\swig\Hahn_echo\.c	313;"	d	file:
SWIG_CASTRANKMASK	.\swig\Hahn_echo\Hahn_echo_wrap.c	313;"	d	file:
SWIG_CASTRANKMASK	.\swig\example\example_wrap.c	313;"	d	file:
SWIG_CASTRANKMASK	.\swig\example\get_rand_array\get_rand_array_wrap.c	313;"	d	file:
SWIG_CASTRANKMASK	.\swig\ppg_lang\ppg_lang_wrap.c	313;"	d	file:
SWIG_CASTRANKMASK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	313;"	d	file:
SWIG_CASTRANKMASK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	313;"	d	file:
SWIG_CAST_NEW_MEMORY	.\ppg_wrap.c	196;"	d	file:
SWIG_CAST_NEW_MEMORY	.\swig\Hahn_echo\.c	196;"	d	file:
SWIG_CAST_NEW_MEMORY	.\swig\Hahn_echo\Hahn_echo_wrap.c	196;"	d	file:
SWIG_CAST_NEW_MEMORY	.\swig\example\example_wrap.c	196;"	d	file:
SWIG_CAST_NEW_MEMORY	.\swig\example\get_rand_array\get_rand_array_wrap.c	196;"	d	file:
SWIG_CAST_NEW_MEMORY	.\swig\ppg_lang\ppg_lang_wrap.c	196;"	d	file:
SWIG_CAST_NEW_MEMORY	.\swig\ppg_lang\temp\ppg_temp_wrap.c	196;"	d	file:
SWIG_CAST_NEW_MEMORY	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	196;"	d	file:
SWIG_CanCastAsInteger	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_CanCastAsInteger(double *d, double min, double max) {$/;"	f
SWIG_CanCastAsInteger	.\swig\example\example_wrap.c	/^SWIG_CanCastAsInteger(double *d, double min, double max) {$/;"	f
SWIG_CanCastAsInteger	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_CanCastAsInteger(double *d, double min, double max) {$/;"	f
SWIG_CanCastAsInteger	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_CanCastAsInteger(double *d, double min, double max) {$/;"	f
SWIG_CanCastAsInteger	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_CanCastAsInteger(double *d, double min, double max) {$/;"	f
SWIG_CastRank	.\ppg_wrap.c	314;"	d	file:
SWIG_CastRank	.\swig\Hahn_echo\.c	314;"	d	file:
SWIG_CastRank	.\swig\Hahn_echo\Hahn_echo_wrap.c	314;"	d	file:
SWIG_CastRank	.\swig\example\example_wrap.c	314;"	d	file:
SWIG_CastRank	.\swig\example\get_rand_array\get_rand_array_wrap.c	314;"	d	file:
SWIG_CastRank	.\swig\ppg_lang\ppg_lang_wrap.c	314;"	d	file:
SWIG_CastRank	.\swig\ppg_lang\temp\ppg_temp_wrap.c	314;"	d	file:
SWIG_CastRank	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	314;"	d	file:
SWIG_CheckImplicit	.\ppg_wrap.c	1168;"	d	file:
SWIG_CheckImplicit	.\swig\Hahn_echo\.c	1168;"	d	file:
SWIG_CheckImplicit	.\swig\Hahn_echo\Hahn_echo_wrap.c	1168;"	d	file:
SWIG_CheckImplicit	.\swig\example\example_wrap.c	1168;"	d	file:
SWIG_CheckImplicit	.\swig\example\get_rand_array\get_rand_array_wrap.c	1168;"	d	file:
SWIG_CheckImplicit	.\swig\ppg_lang\ppg_lang_wrap.c	1168;"	d	file:
SWIG_CheckImplicit	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1168;"	d	file:
SWIG_CheckImplicit	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1168;"	d	file:
SWIG_CheckState	.\ppg_wrap.c	/^SWIGINTERNINLINE int SWIG_CheckState(int r) {$/;"	f
SWIG_CheckState	.\ppg_wrap.c	323;"	d	file:
SWIG_CheckState	.\swig\Hahn_echo\.c	/^SWIGINTERNINLINE int SWIG_CheckState(int r) {$/;"	f
SWIG_CheckState	.\swig\Hahn_echo\.c	323;"	d	file:
SWIG_CheckState	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIGINTERNINLINE int SWIG_CheckState(int r) {$/;"	f
SWIG_CheckState	.\swig\Hahn_echo\Hahn_echo_wrap.c	323;"	d	file:
SWIG_CheckState	.\swig\example\example_wrap.c	/^SWIGINTERNINLINE int SWIG_CheckState(int r) {$/;"	f
SWIG_CheckState	.\swig\example\example_wrap.c	323;"	d	file:
SWIG_CheckState	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIGINTERNINLINE int SWIG_CheckState(int r) {$/;"	f
SWIG_CheckState	.\swig\example\get_rand_array\get_rand_array_wrap.c	323;"	d	file:
SWIG_CheckState	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIGINTERNINLINE int SWIG_CheckState(int r) {$/;"	f
SWIG_CheckState	.\swig\ppg_lang\ppg_lang_wrap.c	323;"	d	file:
SWIG_CheckState	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIGINTERNINLINE int SWIG_CheckState(int r) {$/;"	f
SWIG_CheckState	.\swig\ppg_lang\temp\ppg_temp_wrap.c	323;"	d	file:
SWIG_CheckState	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIGINTERNINLINE int SWIG_CheckState(int r) {$/;"	f
SWIG_CheckState	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	323;"	d	file:
SWIG_ConvertFunctionPtr	.\ppg_wrap.c	1181;"	d	file:
SWIG_ConvertFunctionPtr	.\swig\Hahn_echo\.c	1181;"	d	file:
SWIG_ConvertFunctionPtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	1181;"	d	file:
SWIG_ConvertFunctionPtr	.\swig\example\example_wrap.c	1181;"	d	file:
SWIG_ConvertFunctionPtr	.\swig\example\get_rand_array\get_rand_array_wrap.c	1181;"	d	file:
SWIG_ConvertFunctionPtr	.\swig\ppg_lang\ppg_lang_wrap.c	1181;"	d	file:
SWIG_ConvertFunctionPtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1181;"	d	file:
SWIG_ConvertFunctionPtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1181;"	d	file:
SWIG_ConvertInstance	.\ppg_wrap.c	1177;"	d	file:
SWIG_ConvertInstance	.\swig\Hahn_echo\.c	1177;"	d	file:
SWIG_ConvertInstance	.\swig\Hahn_echo\Hahn_echo_wrap.c	1177;"	d	file:
SWIG_ConvertInstance	.\swig\example\example_wrap.c	1177;"	d	file:
SWIG_ConvertInstance	.\swig\example\get_rand_array\get_rand_array_wrap.c	1177;"	d	file:
SWIG_ConvertInstance	.\swig\ppg_lang\ppg_lang_wrap.c	1177;"	d	file:
SWIG_ConvertInstance	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1177;"	d	file:
SWIG_ConvertInstance	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1177;"	d	file:
SWIG_ConvertMember	.\ppg_wrap.c	1185;"	d	file:
SWIG_ConvertMember	.\swig\Hahn_echo\.c	1185;"	d	file:
SWIG_ConvertMember	.\swig\Hahn_echo\Hahn_echo_wrap.c	1185;"	d	file:
SWIG_ConvertMember	.\swig\example\example_wrap.c	1185;"	d	file:
SWIG_ConvertMember	.\swig\example\get_rand_array\get_rand_array_wrap.c	1185;"	d	file:
SWIG_ConvertMember	.\swig\ppg_lang\ppg_lang_wrap.c	1185;"	d	file:
SWIG_ConvertMember	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1185;"	d	file:
SWIG_ConvertMember	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1185;"	d	file:
SWIG_ConvertPacked	.\ppg_wrap.c	1173;"	d	file:
SWIG_ConvertPacked	.\swig\Hahn_echo\.c	1173;"	d	file:
SWIG_ConvertPacked	.\swig\Hahn_echo\Hahn_echo_wrap.c	1173;"	d	file:
SWIG_ConvertPacked	.\swig\example\example_wrap.c	1173;"	d	file:
SWIG_ConvertPacked	.\swig\example\get_rand_array\get_rand_array_wrap.c	1173;"	d	file:
SWIG_ConvertPacked	.\swig\ppg_lang\ppg_lang_wrap.c	1173;"	d	file:
SWIG_ConvertPacked	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1173;"	d	file:
SWIG_ConvertPacked	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1173;"	d	file:
SWIG_ConvertPtr	.\ppg_wrap.c	1157;"	d	file:
SWIG_ConvertPtr	.\swig\Hahn_echo\.c	1157;"	d	file:
SWIG_ConvertPtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	1157;"	d	file:
SWIG_ConvertPtr	.\swig\example\example_wrap.c	1157;"	d	file:
SWIG_ConvertPtr	.\swig\example\get_rand_array\get_rand_array_wrap.c	1157;"	d	file:
SWIG_ConvertPtr	.\swig\ppg_lang\ppg_lang_wrap.c	1157;"	d	file:
SWIG_ConvertPtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1157;"	d	file:
SWIG_ConvertPtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1157;"	d	file:
SWIG_ConvertPtrAndOwn	.\ppg_wrap.c	1158;"	d	file:
SWIG_ConvertPtrAndOwn	.\swig\Hahn_echo\.c	1158;"	d	file:
SWIG_ConvertPtrAndOwn	.\swig\Hahn_echo\Hahn_echo_wrap.c	1158;"	d	file:
SWIG_ConvertPtrAndOwn	.\swig\example\example_wrap.c	1158;"	d	file:
SWIG_ConvertPtrAndOwn	.\swig\example\get_rand_array\get_rand_array_wrap.c	1158;"	d	file:
SWIG_ConvertPtrAndOwn	.\swig\ppg_lang\ppg_lang_wrap.c	1158;"	d	file:
SWIG_ConvertPtrAndOwn	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1158;"	d	file:
SWIG_ConvertPtrAndOwn	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1158;"	d	file:
SWIG_DelNewMask	.\ppg_wrap.c	299;"	d	file:
SWIG_DelNewMask	.\swig\Hahn_echo\.c	299;"	d	file:
SWIG_DelNewMask	.\swig\Hahn_echo\Hahn_echo_wrap.c	299;"	d	file:
SWIG_DelNewMask	.\swig\example\example_wrap.c	299;"	d	file:
SWIG_DelNewMask	.\swig\example\get_rand_array\get_rand_array_wrap.c	299;"	d	file:
SWIG_DelNewMask	.\swig\ppg_lang\ppg_lang_wrap.c	299;"	d	file:
SWIG_DelNewMask	.\swig\ppg_lang\temp\ppg_temp_wrap.c	299;"	d	file:
SWIG_DelNewMask	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	299;"	d	file:
SWIG_DelTmpMask	.\ppg_wrap.c	302;"	d	file:
SWIG_DelTmpMask	.\swig\Hahn_echo\.c	302;"	d	file:
SWIG_DelTmpMask	.\swig\Hahn_echo\Hahn_echo_wrap.c	302;"	d	file:
SWIG_DelTmpMask	.\swig\example\example_wrap.c	302;"	d	file:
SWIG_DelTmpMask	.\swig\example\get_rand_array\get_rand_array_wrap.c	302;"	d	file:
SWIG_DelTmpMask	.\swig\ppg_lang\ppg_lang_wrap.c	302;"	d	file:
SWIG_DelTmpMask	.\swig\ppg_lang\temp\ppg_temp_wrap.c	302;"	d	file:
SWIG_DelTmpMask	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	302;"	d	file:
SWIG_DivisionByZero	.\ppg_wrap.c	731;"	d	file:
SWIG_DivisionByZero	.\swig\Hahn_echo\.c	731;"	d	file:
SWIG_DivisionByZero	.\swig\Hahn_echo\Hahn_echo_wrap.c	731;"	d	file:
SWIG_DivisionByZero	.\swig\example\example_wrap.c	731;"	d	file:
SWIG_DivisionByZero	.\swig\example\get_rand_array\get_rand_array_wrap.c	731;"	d	file:
SWIG_DivisionByZero	.\swig\ppg_lang\ppg_lang_wrap.c	731;"	d	file:
SWIG_DivisionByZero	.\swig\ppg_lang\temp\ppg_temp_wrap.c	731;"	d	file:
SWIG_DivisionByZero	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	731;"	d	file:
SWIG_ERROR	.\ppg_wrap.c	282;"	d	file:
SWIG_ERROR	.\swig\Hahn_echo\.c	282;"	d	file:
SWIG_ERROR	.\swig\Hahn_echo\Hahn_echo_wrap.c	282;"	d	file:
SWIG_ERROR	.\swig\example\example_wrap.c	282;"	d	file:
SWIG_ERROR	.\swig\example\get_rand_array\get_rand_array_wrap.c	282;"	d	file:
SWIG_ERROR	.\swig\ppg_lang\ppg_lang_wrap.c	282;"	d	file:
SWIG_ERROR	.\swig\ppg_lang\temp\ppg_temp_wrap.c	282;"	d	file:
SWIG_ERROR	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	282;"	d	file:
SWIG_EXPAND_AND_QUOTE_STRING	.\ppg_wrap.c	166;"	d	file:
SWIG_EXPAND_AND_QUOTE_STRING	.\swig\Hahn_echo\.c	166;"	d	file:
SWIG_EXPAND_AND_QUOTE_STRING	.\swig\Hahn_echo\Hahn_echo_wrap.c	166;"	d	file:
SWIG_EXPAND_AND_QUOTE_STRING	.\swig\example\example_wrap.c	166;"	d	file:
SWIG_EXPAND_AND_QUOTE_STRING	.\swig\example\get_rand_array\get_rand_array_wrap.c	166;"	d	file:
SWIG_EXPAND_AND_QUOTE_STRING	.\swig\ppg_lang\ppg_lang_wrap.c	166;"	d	file:
SWIG_EXPAND_AND_QUOTE_STRING	.\swig\ppg_lang\temp\ppg_temp_wrap.c	166;"	d	file:
SWIG_EXPAND_AND_QUOTE_STRING	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	166;"	d	file:
SWIG_Error	.\ppg_wrap.c	1198;"	d	file:
SWIG_Error	.\swig\Hahn_echo\.c	1198;"	d	file:
SWIG_Error	.\swig\Hahn_echo\Hahn_echo_wrap.c	1198;"	d	file:
SWIG_Error	.\swig\example\example_wrap.c	1198;"	d	file:
SWIG_Error	.\swig\example\get_rand_array\get_rand_array_wrap.c	1198;"	d	file:
SWIG_Error	.\swig\ppg_lang\ppg_lang_wrap.c	1198;"	d	file:
SWIG_Error	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1198;"	d	file:
SWIG_Error	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1198;"	d	file:
SWIG_ErrorType	.\ppg_wrap.c	1197;"	d	file:
SWIG_ErrorType	.\swig\Hahn_echo\.c	1197;"	d	file:
SWIG_ErrorType	.\swig\Hahn_echo\Hahn_echo_wrap.c	1197;"	d	file:
SWIG_ErrorType	.\swig\example\example_wrap.c	1197;"	d	file:
SWIG_ErrorType	.\swig\example\get_rand_array\get_rand_array_wrap.c	1197;"	d	file:
SWIG_ErrorType	.\swig\ppg_lang\ppg_lang_wrap.c	1197;"	d	file:
SWIG_ErrorType	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1197;"	d	file:
SWIG_ErrorType	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1197;"	d	file:
SWIG_FILE_WITH_INIT	.\swig\Hahn_echo\Hahn_echo_wrap.c	3037;"	d	file:
SWIG_FILE_WITH_INIT	.\swig\example\get_rand_array\get_rand_array_wrap.c	3017;"	d	file:
SWIG_FromCharPtr	.\swig\Hahn_echo\.c	/^SWIG_FromCharPtr(const char *cptr)$/;"	f
SWIG_FromCharPtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_FromCharPtr(const char *cptr)$/;"	f
SWIG_FromCharPtr	.\swig\example\example_wrap.c	/^SWIG_FromCharPtr(const char *cptr)$/;"	f
SWIG_FromCharPtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_FromCharPtr(const char *cptr)$/;"	f
SWIG_FromCharPtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_FromCharPtr(const char *cptr)$/;"	f
SWIG_FromCharPtrAndSize	.\swig\Hahn_echo\.c	/^SWIG_FromCharPtrAndSize(const char* carray, size_t size)$/;"	f
SWIG_FromCharPtrAndSize	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_FromCharPtrAndSize(const char* carray, size_t size)$/;"	f
SWIG_FromCharPtrAndSize	.\swig\example\example_wrap.c	/^SWIG_FromCharPtrAndSize(const char* carray, size_t size)$/;"	f
SWIG_FromCharPtrAndSize	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_FromCharPtrAndSize(const char* carray, size_t size)$/;"	f
SWIG_FromCharPtrAndSize	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_FromCharPtrAndSize(const char* carray, size_t size)$/;"	f
SWIG_From_double	.\swig\Hahn_echo\Hahn_echo_wrap.c	3313;"	d	file:
SWIG_From_double	.\swig\example\example_wrap.c	3068;"	d	file:
SWIG_From_int	.\ppg_wrap.c	/^  SWIG_From_int  (int value)$/;"	f
SWIG_From_int	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  SWIG_From_int  (int value)$/;"	f
SWIG_From_int	.\swig\example\example_wrap.c	/^  SWIG_From_int  (int value)$/;"	f
SWIG_From_int	.\swig\ppg_lang\ppg_lang_wrap.c	/^  SWIG_From_int  (int value)$/;"	f
SWIG_From_int	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  SWIG_From_int  (int value)$/;"	f
SWIG_From_int	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  SWIG_From_int  (int value)$/;"	f
SWIG_GetModule	.\ppg_wrap.c	1191;"	d	file:
SWIG_GetModule	.\swig\Hahn_echo\.c	1191;"	d	file:
SWIG_GetModule	.\swig\Hahn_echo\Hahn_echo_wrap.c	1191;"	d	file:
SWIG_GetModule	.\swig\example\example_wrap.c	1191;"	d	file:
SWIG_GetModule	.\swig\example\get_rand_array\get_rand_array_wrap.c	1191;"	d	file:
SWIG_GetModule	.\swig\ppg_lang\ppg_lang_wrap.c	1191;"	d	file:
SWIG_GetModule	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1191;"	d	file:
SWIG_GetModule	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1191;"	d	file:
SWIG_IOError	.\ppg_wrap.c	727;"	d	file:
SWIG_IOError	.\swig\Hahn_echo\.c	727;"	d	file:
SWIG_IOError	.\swig\Hahn_echo\Hahn_echo_wrap.c	727;"	d	file:
SWIG_IOError	.\swig\example\example_wrap.c	727;"	d	file:
SWIG_IOError	.\swig\example\get_rand_array\get_rand_array_wrap.c	727;"	d	file:
SWIG_IOError	.\swig\ppg_lang\ppg_lang_wrap.c	727;"	d	file:
SWIG_IOError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	727;"	d	file:
SWIG_IOError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	727;"	d	file:
SWIG_IndexError	.\ppg_wrap.c	729;"	d	file:
SWIG_IndexError	.\swig\Hahn_echo\.c	729;"	d	file:
SWIG_IndexError	.\swig\Hahn_echo\Hahn_echo_wrap.c	729;"	d	file:
SWIG_IndexError	.\swig\example\example_wrap.c	729;"	d	file:
SWIG_IndexError	.\swig\example\get_rand_array\get_rand_array_wrap.c	729;"	d	file:
SWIG_IndexError	.\swig\ppg_lang\ppg_lang_wrap.c	729;"	d	file:
SWIG_IndexError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	729;"	d	file:
SWIG_IndexError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	729;"	d	file:
SWIG_InitializeModule	.\ppg_wrap.c	/^SWIG_InitializeModule(void *clientdata) {$/;"	f
SWIG_InitializeModule	.\swig\Hahn_echo\.c	/^SWIG_InitializeModule(void *clientdata) {$/;"	f
SWIG_InitializeModule	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_InitializeModule(void *clientdata) {$/;"	f
SWIG_InitializeModule	.\swig\example\example_wrap.c	/^SWIG_InitializeModule(void *clientdata) {$/;"	f
SWIG_InitializeModule	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_InitializeModule(void *clientdata) {$/;"	f
SWIG_InitializeModule	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_InitializeModule(void *clientdata) {$/;"	f
SWIG_InitializeModule	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_InitializeModule(void *clientdata) {$/;"	f
SWIG_InitializeModule	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_InitializeModule(void *clientdata) {$/;"	f
SWIG_InstallConstants	.\ppg_wrap.c	3525;"	d	file:
SWIG_InstallConstants	.\swig\Hahn_echo\.c	3353;"	d	file:
SWIG_InstallConstants	.\swig\Hahn_echo\Hahn_echo_wrap.c	4534;"	d	file:
SWIG_InstallConstants	.\swig\example\example_wrap.c	3595;"	d	file:
SWIG_InstallConstants	.\swig\example\get_rand_array\get_rand_array_wrap.c	3969;"	d	file:
SWIG_InstallConstants	.\swig\ppg_lang\ppg_lang_wrap.c	3525;"	d	file:
SWIG_InstallConstants	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3865;"	d	file:
SWIG_InstallConstants	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3901;"	d	file:
SWIG_InternalNewPointerObj	.\ppg_wrap.c	1166;"	d	file:
SWIG_InternalNewPointerObj	.\swig\Hahn_echo\.c	1166;"	d	file:
SWIG_InternalNewPointerObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	1166;"	d	file:
SWIG_InternalNewPointerObj	.\swig\example\example_wrap.c	1166;"	d	file:
SWIG_InternalNewPointerObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	1166;"	d	file:
SWIG_InternalNewPointerObj	.\swig\ppg_lang\ppg_lang_wrap.c	1166;"	d	file:
SWIG_InternalNewPointerObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1166;"	d	file:
SWIG_InternalNewPointerObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1166;"	d	file:
SWIG_IsNewObj	.\ppg_wrap.c	300;"	d	file:
SWIG_IsNewObj	.\swig\Hahn_echo\.c	300;"	d	file:
SWIG_IsNewObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	300;"	d	file:
SWIG_IsNewObj	.\swig\example\example_wrap.c	300;"	d	file:
SWIG_IsNewObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	300;"	d	file:
SWIG_IsNewObj	.\swig\ppg_lang\ppg_lang_wrap.c	300;"	d	file:
SWIG_IsNewObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	300;"	d	file:
SWIG_IsNewObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	300;"	d	file:
SWIG_IsOK	.\ppg_wrap.c	283;"	d	file:
SWIG_IsOK	.\swig\Hahn_echo\.c	283;"	d	file:
SWIG_IsOK	.\swig\Hahn_echo\Hahn_echo_wrap.c	283;"	d	file:
SWIG_IsOK	.\swig\example\example_wrap.c	283;"	d	file:
SWIG_IsOK	.\swig\example\get_rand_array\get_rand_array_wrap.c	283;"	d	file:
SWIG_IsOK	.\swig\ppg_lang\ppg_lang_wrap.c	283;"	d	file:
SWIG_IsOK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	283;"	d	file:
SWIG_IsOK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	283;"	d	file:
SWIG_IsTmpObj	.\ppg_wrap.c	303;"	d	file:
SWIG_IsTmpObj	.\swig\Hahn_echo\.c	303;"	d	file:
SWIG_IsTmpObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	303;"	d	file:
SWIG_IsTmpObj	.\swig\example\example_wrap.c	303;"	d	file:
SWIG_IsTmpObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	303;"	d	file:
SWIG_IsTmpObj	.\swig\ppg_lang\ppg_lang_wrap.c	303;"	d	file:
SWIG_IsTmpObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	303;"	d	file:
SWIG_IsTmpObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	303;"	d	file:
SWIG_MAXCASTRANK	.\ppg_wrap.c	311;"	d	file:
SWIG_MAXCASTRANK	.\swig\Hahn_echo\.c	311;"	d	file:
SWIG_MAXCASTRANK	.\swig\Hahn_echo\Hahn_echo_wrap.c	311;"	d	file:
SWIG_MAXCASTRANK	.\swig\example\example_wrap.c	311;"	d	file:
SWIG_MAXCASTRANK	.\swig\example\get_rand_array\get_rand_array_wrap.c	311;"	d	file:
SWIG_MAXCASTRANK	.\swig\ppg_lang\ppg_lang_wrap.c	311;"	d	file:
SWIG_MAXCASTRANK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	311;"	d	file:
SWIG_MAXCASTRANK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	311;"	d	file:
SWIG_MangledTypeQuery	.\ppg_wrap.c	2986;"	d	file:
SWIG_MangledTypeQuery	.\swig\Hahn_echo\.c	2986;"	d	file:
SWIG_MangledTypeQuery	.\swig\Hahn_echo\Hahn_echo_wrap.c	3000;"	d	file:
SWIG_MangledTypeQuery	.\swig\example\example_wrap.c	2986;"	d	file:
SWIG_MangledTypeQuery	.\swig\example\get_rand_array\get_rand_array_wrap.c	2987;"	d	file:
SWIG_MangledTypeQuery	.\swig\ppg_lang\ppg_lang_wrap.c	2986;"	d	file:
SWIG_MangledTypeQuery	.\swig\ppg_lang\temp\ppg_temp_wrap.c	2986;"	d	file:
SWIG_MangledTypeQuery	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	2986;"	d	file:
SWIG_MangledTypeQueryModule	.\ppg_wrap.c	/^SWIG_MangledTypeQueryModule(swig_module_info *start,$/;"	f
SWIG_MangledTypeQueryModule	.\swig\Hahn_echo\.c	/^SWIG_MangledTypeQueryModule(swig_module_info *start,$/;"	f
SWIG_MangledTypeQueryModule	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_MangledTypeQueryModule(swig_module_info *start,$/;"	f
SWIG_MangledTypeQueryModule	.\swig\example\example_wrap.c	/^SWIG_MangledTypeQueryModule(swig_module_info *start,$/;"	f
SWIG_MangledTypeQueryModule	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_MangledTypeQueryModule(swig_module_info *start,$/;"	f
SWIG_MangledTypeQueryModule	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_MangledTypeQueryModule(swig_module_info *start,$/;"	f
SWIG_MangledTypeQueryModule	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_MangledTypeQueryModule(swig_module_info *start,$/;"	f
SWIG_MangledTypeQueryModule	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_MangledTypeQueryModule(swig_module_info *start,$/;"	f
SWIG_MemoryError	.\ppg_wrap.c	737;"	d	file:
SWIG_MemoryError	.\swig\Hahn_echo\.c	737;"	d	file:
SWIG_MemoryError	.\swig\Hahn_echo\Hahn_echo_wrap.c	737;"	d	file:
SWIG_MemoryError	.\swig\example\example_wrap.c	737;"	d	file:
SWIG_MemoryError	.\swig\example\get_rand_array\get_rand_array_wrap.c	737;"	d	file:
SWIG_MemoryError	.\swig\ppg_lang\ppg_lang_wrap.c	737;"	d	file:
SWIG_MemoryError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	737;"	d	file:
SWIG_MemoryError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	737;"	d	file:
SWIG_MustGetPtr	.\ppg_wrap.c	2810;"	d	file:
SWIG_MustGetPtr	.\swig\Hahn_echo\.c	2810;"	d	file:
SWIG_MustGetPtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	2810;"	d	file:
SWIG_MustGetPtr	.\swig\example\example_wrap.c	2810;"	d	file:
SWIG_MustGetPtr	.\swig\example\get_rand_array\get_rand_array_wrap.c	2810;"	d	file:
SWIG_MustGetPtr	.\swig\ppg_lang\ppg_lang_wrap.c	2810;"	d	file:
SWIG_MustGetPtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	2810;"	d	file:
SWIG_MustGetPtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	2810;"	d	file:
SWIG_NEWOBJ	.\ppg_wrap.c	295;"	d	file:
SWIG_NEWOBJ	.\swig\Hahn_echo\.c	295;"	d	file:
SWIG_NEWOBJ	.\swig\Hahn_echo\Hahn_echo_wrap.c	295;"	d	file:
SWIG_NEWOBJ	.\swig\example\example_wrap.c	295;"	d	file:
SWIG_NEWOBJ	.\swig\example\get_rand_array\get_rand_array_wrap.c	295;"	d	file:
SWIG_NEWOBJ	.\swig\ppg_lang\ppg_lang_wrap.c	295;"	d	file:
SWIG_NEWOBJ	.\swig\ppg_lang\temp\ppg_temp_wrap.c	295;"	d	file:
SWIG_NEWOBJ	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	295;"	d	file:
SWIG_NEWOBJMASK	.\ppg_wrap.c	289;"	d	file:
SWIG_NEWOBJMASK	.\swig\Hahn_echo\.c	289;"	d	file:
SWIG_NEWOBJMASK	.\swig\Hahn_echo\Hahn_echo_wrap.c	289;"	d	file:
SWIG_NEWOBJMASK	.\swig\example\example_wrap.c	289;"	d	file:
SWIG_NEWOBJMASK	.\swig\example\get_rand_array\get_rand_array_wrap.c	289;"	d	file:
SWIG_NEWOBJMASK	.\swig\ppg_lang\ppg_lang_wrap.c	289;"	d	file:
SWIG_NEWOBJMASK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	289;"	d	file:
SWIG_NEWOBJMASK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	289;"	d	file:
SWIG_NewClientData	.\ppg_wrap.c	1193;"	d	file:
SWIG_NewClientData	.\swig\Hahn_echo\.c	1193;"	d	file:
SWIG_NewClientData	.\swig\Hahn_echo\Hahn_echo_wrap.c	1193;"	d	file:
SWIG_NewClientData	.\swig\example\example_wrap.c	1193;"	d	file:
SWIG_NewClientData	.\swig\example\get_rand_array\get_rand_array_wrap.c	1193;"	d	file:
SWIG_NewClientData	.\swig\ppg_lang\ppg_lang_wrap.c	1193;"	d	file:
SWIG_NewClientData	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1193;"	d	file:
SWIG_NewClientData	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1193;"	d	file:
SWIG_NewFunctionPtrObj	.\ppg_wrap.c	1182;"	d	file:
SWIG_NewFunctionPtrObj	.\swig\Hahn_echo\.c	1182;"	d	file:
SWIG_NewFunctionPtrObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	1182;"	d	file:
SWIG_NewFunctionPtrObj	.\swig\example\example_wrap.c	1182;"	d	file:
SWIG_NewFunctionPtrObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	1182;"	d	file:
SWIG_NewFunctionPtrObj	.\swig\ppg_lang\ppg_lang_wrap.c	1182;"	d	file:
SWIG_NewFunctionPtrObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1182;"	d	file:
SWIG_NewFunctionPtrObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1182;"	d	file:
SWIG_NewInstanceObj	.\ppg_wrap.c	1178;"	d	file:
SWIG_NewInstanceObj	.\swig\Hahn_echo\.c	1178;"	d	file:
SWIG_NewInstanceObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	1178;"	d	file:
SWIG_NewInstanceObj	.\swig\example\example_wrap.c	1178;"	d	file:
SWIG_NewInstanceObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	1178;"	d	file:
SWIG_NewInstanceObj	.\swig\ppg_lang\ppg_lang_wrap.c	1178;"	d	file:
SWIG_NewInstanceObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1178;"	d	file:
SWIG_NewInstanceObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1178;"	d	file:
SWIG_NewMemberObj	.\ppg_wrap.c	1186;"	d	file:
SWIG_NewMemberObj	.\swig\Hahn_echo\.c	1186;"	d	file:
SWIG_NewMemberObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	1186;"	d	file:
SWIG_NewMemberObj	.\swig\example\example_wrap.c	1186;"	d	file:
SWIG_NewMemberObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	1186;"	d	file:
SWIG_NewMemberObj	.\swig\ppg_lang\ppg_lang_wrap.c	1186;"	d	file:
SWIG_NewMemberObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1186;"	d	file:
SWIG_NewMemberObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1186;"	d	file:
SWIG_NewPackedObj	.\ppg_wrap.c	1174;"	d	file:
SWIG_NewPackedObj	.\swig\Hahn_echo\.c	1174;"	d	file:
SWIG_NewPackedObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	1174;"	d	file:
SWIG_NewPackedObj	.\swig\example\example_wrap.c	1174;"	d	file:
SWIG_NewPackedObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	1174;"	d	file:
SWIG_NewPackedObj	.\swig\ppg_lang\ppg_lang_wrap.c	1174;"	d	file:
SWIG_NewPackedObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1174;"	d	file:
SWIG_NewPackedObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1174;"	d	file:
SWIG_NewPointerObj	.\ppg_wrap.c	1161;"	d	file:
SWIG_NewPointerObj	.\ppg_wrap.c	1163;"	d	file:
SWIG_NewPointerObj	.\swig\Hahn_echo\.c	1161;"	d	file:
SWIG_NewPointerObj	.\swig\Hahn_echo\.c	1163;"	d	file:
SWIG_NewPointerObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	1161;"	d	file:
SWIG_NewPointerObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	1163;"	d	file:
SWIG_NewPointerObj	.\swig\example\example_wrap.c	1161;"	d	file:
SWIG_NewPointerObj	.\swig\example\example_wrap.c	1163;"	d	file:
SWIG_NewPointerObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	1161;"	d	file:
SWIG_NewPointerObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	1163;"	d	file:
SWIG_NewPointerObj	.\swig\ppg_lang\ppg_lang_wrap.c	1161;"	d	file:
SWIG_NewPointerObj	.\swig\ppg_lang\ppg_lang_wrap.c	1163;"	d	file:
SWIG_NewPointerObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1161;"	d	file:
SWIG_NewPointerObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1163;"	d	file:
SWIG_NewPointerObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1161;"	d	file:
SWIG_NewPointerObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1163;"	d	file:
SWIG_NullReferenceError	.\ppg_wrap.c	738;"	d	file:
SWIG_NullReferenceError	.\swig\Hahn_echo\.c	738;"	d	file:
SWIG_NullReferenceError	.\swig\Hahn_echo\Hahn_echo_wrap.c	738;"	d	file:
SWIG_NullReferenceError	.\swig\example\example_wrap.c	738;"	d	file:
SWIG_NullReferenceError	.\swig\example\get_rand_array\get_rand_array_wrap.c	738;"	d	file:
SWIG_NullReferenceError	.\swig\ppg_lang\ppg_lang_wrap.c	738;"	d	file:
SWIG_NullReferenceError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	738;"	d	file:
SWIG_NullReferenceError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	738;"	d	file:
SWIG_OK	.\ppg_wrap.c	281;"	d	file:
SWIG_OK	.\swig\Hahn_echo\.c	281;"	d	file:
SWIG_OK	.\swig\Hahn_echo\Hahn_echo_wrap.c	281;"	d	file:
SWIG_OK	.\swig\example\example_wrap.c	281;"	d	file:
SWIG_OK	.\swig\example\get_rand_array\get_rand_array_wrap.c	281;"	d	file:
SWIG_OK	.\swig\ppg_lang\ppg_lang_wrap.c	281;"	d	file:
SWIG_OK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	281;"	d	file:
SWIG_OK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	281;"	d	file:
SWIG_OLDOBJ	.\ppg_wrap.c	294;"	d	file:
SWIG_OLDOBJ	.\swig\Hahn_echo\.c	294;"	d	file:
SWIG_OLDOBJ	.\swig\Hahn_echo\Hahn_echo_wrap.c	294;"	d	file:
SWIG_OLDOBJ	.\swig\example\example_wrap.c	294;"	d	file:
SWIG_OLDOBJ	.\swig\example\get_rand_array\get_rand_array_wrap.c	294;"	d	file:
SWIG_OLDOBJ	.\swig\ppg_lang\ppg_lang_wrap.c	294;"	d	file:
SWIG_OLDOBJ	.\swig\ppg_lang\temp\ppg_temp_wrap.c	294;"	d	file:
SWIG_OLDOBJ	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	294;"	d	file:
SWIG_OverflowError	.\ppg_wrap.c	732;"	d	file:
SWIG_OverflowError	.\swig\Hahn_echo\.c	732;"	d	file:
SWIG_OverflowError	.\swig\Hahn_echo\Hahn_echo_wrap.c	732;"	d	file:
SWIG_OverflowError	.\swig\example\example_wrap.c	732;"	d	file:
SWIG_OverflowError	.\swig\example\get_rand_array\get_rand_array_wrap.c	732;"	d	file:
SWIG_OverflowError	.\swig\ppg_lang\ppg_lang_wrap.c	732;"	d	file:
SWIG_OverflowError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	732;"	d	file:
SWIG_OverflowError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	732;"	d	file:
SWIG_POINTER_DISOWN	.\ppg_wrap.c	195;"	d	file:
SWIG_POINTER_DISOWN	.\swig\Hahn_echo\.c	195;"	d	file:
SWIG_POINTER_DISOWN	.\swig\Hahn_echo\Hahn_echo_wrap.c	195;"	d	file:
SWIG_POINTER_DISOWN	.\swig\example\example_wrap.c	195;"	d	file:
SWIG_POINTER_DISOWN	.\swig\example\get_rand_array\get_rand_array_wrap.c	195;"	d	file:
SWIG_POINTER_DISOWN	.\swig\ppg_lang\ppg_lang_wrap.c	195;"	d	file:
SWIG_POINTER_DISOWN	.\swig\ppg_lang\temp\ppg_temp_wrap.c	195;"	d	file:
SWIG_POINTER_DISOWN	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	195;"	d	file:
SWIG_POINTER_EXCEPTION	.\ppg_wrap.c	2808;"	d	file:
SWIG_POINTER_EXCEPTION	.\swig\Hahn_echo\.c	2808;"	d	file:
SWIG_POINTER_EXCEPTION	.\swig\Hahn_echo\Hahn_echo_wrap.c	2808;"	d	file:
SWIG_POINTER_EXCEPTION	.\swig\example\example_wrap.c	2808;"	d	file:
SWIG_POINTER_EXCEPTION	.\swig\example\get_rand_array\get_rand_array_wrap.c	2808;"	d	file:
SWIG_POINTER_EXCEPTION	.\swig\ppg_lang\ppg_lang_wrap.c	2808;"	d	file:
SWIG_POINTER_EXCEPTION	.\swig\ppg_lang\temp\ppg_temp_wrap.c	2808;"	d	file:
SWIG_POINTER_EXCEPTION	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	2808;"	d	file:
SWIG_POINTER_IMPLICIT_CONV	.\ppg_wrap.c	1378;"	d	file:
SWIG_POINTER_IMPLICIT_CONV	.\swig\Hahn_echo\.c	1378;"	d	file:
SWIG_POINTER_IMPLICIT_CONV	.\swig\Hahn_echo\Hahn_echo_wrap.c	1378;"	d	file:
SWIG_POINTER_IMPLICIT_CONV	.\swig\example\example_wrap.c	1378;"	d	file:
SWIG_POINTER_IMPLICIT_CONV	.\swig\example\get_rand_array\get_rand_array_wrap.c	1378;"	d	file:
SWIG_POINTER_IMPLICIT_CONV	.\swig\ppg_lang\ppg_lang_wrap.c	1378;"	d	file:
SWIG_POINTER_IMPLICIT_CONV	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1378;"	d	file:
SWIG_POINTER_IMPLICIT_CONV	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1378;"	d	file:
SWIG_POINTER_NEW	.\ppg_wrap.c	1376;"	d	file:
SWIG_POINTER_NEW	.\swig\Hahn_echo\.c	1376;"	d	file:
SWIG_POINTER_NEW	.\swig\Hahn_echo\Hahn_echo_wrap.c	1376;"	d	file:
SWIG_POINTER_NEW	.\swig\example\example_wrap.c	1376;"	d	file:
SWIG_POINTER_NEW	.\swig\example\get_rand_array\get_rand_array_wrap.c	1376;"	d	file:
SWIG_POINTER_NEW	.\swig\ppg_lang\ppg_lang_wrap.c	1376;"	d	file:
SWIG_POINTER_NEW	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1376;"	d	file:
SWIG_POINTER_NEW	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1376;"	d	file:
SWIG_POINTER_NOSHADOW	.\ppg_wrap.c	1375;"	d	file:
SWIG_POINTER_NOSHADOW	.\swig\Hahn_echo\.c	1375;"	d	file:
SWIG_POINTER_NOSHADOW	.\swig\Hahn_echo\Hahn_echo_wrap.c	1375;"	d	file:
SWIG_POINTER_NOSHADOW	.\swig\example\example_wrap.c	1375;"	d	file:
SWIG_POINTER_NOSHADOW	.\swig\example\get_rand_array\get_rand_array_wrap.c	1375;"	d	file:
SWIG_POINTER_NOSHADOW	.\swig\ppg_lang\ppg_lang_wrap.c	1375;"	d	file:
SWIG_POINTER_NOSHADOW	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1375;"	d	file:
SWIG_POINTER_NOSHADOW	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1375;"	d	file:
SWIG_POINTER_OWN	.\ppg_wrap.c	199;"	d	file:
SWIG_POINTER_OWN	.\swig\Hahn_echo\.c	199;"	d	file:
SWIG_POINTER_OWN	.\swig\Hahn_echo\Hahn_echo_wrap.c	199;"	d	file:
SWIG_POINTER_OWN	.\swig\example\example_wrap.c	199;"	d	file:
SWIG_POINTER_OWN	.\swig\example\get_rand_array\get_rand_array_wrap.c	199;"	d	file:
SWIG_POINTER_OWN	.\swig\ppg_lang\ppg_lang_wrap.c	199;"	d	file:
SWIG_POINTER_OWN	.\swig\ppg_lang\temp\ppg_temp_wrap.c	199;"	d	file:
SWIG_POINTER_OWN	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	199;"	d	file:
SWIG_PYBUFFER_SIZE	.\ppg_wrap.c	826;"	d	file:
SWIG_PYBUFFER_SIZE	.\swig\Hahn_echo\.c	826;"	d	file:
SWIG_PYBUFFER_SIZE	.\swig\Hahn_echo\Hahn_echo_wrap.c	826;"	d	file:
SWIG_PYBUFFER_SIZE	.\swig\example\example_wrap.c	826;"	d	file:
SWIG_PYBUFFER_SIZE	.\swig\example\get_rand_array\get_rand_array_wrap.c	826;"	d	file:
SWIG_PYBUFFER_SIZE	.\swig\ppg_lang\ppg_lang_wrap.c	826;"	d	file:
SWIG_PYBUFFER_SIZE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	826;"	d	file:
SWIG_PYBUFFER_SIZE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	826;"	d	file:
SWIG_PYTHON_BUILD_NONE	.\ppg_wrap.c	1391;"	d	file:
SWIG_PYTHON_BUILD_NONE	.\swig\Hahn_echo\.c	1391;"	d	file:
SWIG_PYTHON_BUILD_NONE	.\swig\Hahn_echo\Hahn_echo_wrap.c	1391;"	d	file:
SWIG_PYTHON_BUILD_NONE	.\swig\example\example_wrap.c	1391;"	d	file:
SWIG_PYTHON_BUILD_NONE	.\swig\example\get_rand_array\get_rand_array_wrap.c	1391;"	d	file:
SWIG_PYTHON_BUILD_NONE	.\swig\ppg_lang\ppg_lang_wrap.c	1391;"	d	file:
SWIG_PYTHON_BUILD_NONE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1391;"	d	file:
SWIG_PYTHON_BUILD_NONE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1391;"	d	file:
SWIG_PYTHON_DIRECTOR_NO_VTABLE	.\ppg_wrap.c	16;"	d	file:
SWIG_PYTHON_DIRECTOR_NO_VTABLE	.\swig\Hahn_echo\.c	16;"	d	file:
SWIG_PYTHON_DIRECTOR_NO_VTABLE	.\swig\Hahn_echo\Hahn_echo_wrap.c	16;"	d	file:
SWIG_PYTHON_DIRECTOR_NO_VTABLE	.\swig\example\example_wrap.c	16;"	d	file:
SWIG_PYTHON_DIRECTOR_NO_VTABLE	.\swig\example\get_rand_array\get_rand_array_wrap.c	16;"	d	file:
SWIG_PYTHON_DIRECTOR_NO_VTABLE	.\swig\ppg_lang\ppg_lang_wrap.c	16;"	d	file:
SWIG_PYTHON_DIRECTOR_NO_VTABLE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	16;"	d	file:
SWIG_PYTHON_DIRECTOR_NO_VTABLE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	16;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\ppg_wrap.c	1042;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\ppg_wrap.c	1073;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\ppg_wrap.c	1089;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\Hahn_echo\.c	1042;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\Hahn_echo\.c	1073;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\Hahn_echo\.c	1089;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\Hahn_echo\Hahn_echo_wrap.c	1042;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\Hahn_echo\Hahn_echo_wrap.c	1073;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\Hahn_echo\Hahn_echo_wrap.c	1089;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\example\example_wrap.c	1042;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\example\example_wrap.c	1073;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\example\example_wrap.c	1089;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\example\get_rand_array\get_rand_array_wrap.c	1042;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\example\get_rand_array\get_rand_array_wrap.c	1073;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\example\get_rand_array\get_rand_array_wrap.c	1089;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\ppg_lang\ppg_lang_wrap.c	1042;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\ppg_lang\ppg_lang_wrap.c	1073;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\ppg_lang\ppg_lang_wrap.c	1089;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1042;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1073;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1089;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1042;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1073;"	d	file:
SWIG_PYTHON_INITIALIZE_THREADS	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1089;"	d	file:
SWIG_PYTHON_SLOW_GETSET_THIS	.\ppg_wrap.c	2238;"	d	file:
SWIG_PYTHON_SLOW_GETSET_THIS	.\swig\Hahn_echo\.c	2238;"	d	file:
SWIG_PYTHON_SLOW_GETSET_THIS	.\swig\Hahn_echo\Hahn_echo_wrap.c	2238;"	d	file:
SWIG_PYTHON_SLOW_GETSET_THIS	.\swig\example\example_wrap.c	2238;"	d	file:
SWIG_PYTHON_SLOW_GETSET_THIS	.\swig\example\get_rand_array\get_rand_array_wrap.c	2238;"	d	file:
SWIG_PYTHON_SLOW_GETSET_THIS	.\swig\ppg_lang\ppg_lang_wrap.c	2238;"	d	file:
SWIG_PYTHON_SLOW_GETSET_THIS	.\swig\ppg_lang\temp\ppg_temp_wrap.c	2238;"	d	file:
SWIG_PYTHON_SLOW_GETSET_THIS	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	2238;"	d	file:
SWIG_PYTHON_THREADS	.\ppg_wrap.c	1031;"	d	file:
SWIG_PYTHON_THREADS	.\swig\Hahn_echo\.c	1031;"	d	file:
SWIG_PYTHON_THREADS	.\swig\Hahn_echo\Hahn_echo_wrap.c	1031;"	d	file:
SWIG_PYTHON_THREADS	.\swig\example\example_wrap.c	1031;"	d	file:
SWIG_PYTHON_THREADS	.\swig\example\get_rand_array\get_rand_array_wrap.c	1031;"	d	file:
SWIG_PYTHON_THREADS	.\swig\ppg_lang\ppg_lang_wrap.c	1031;"	d	file:
SWIG_PYTHON_THREADS	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1031;"	d	file:
SWIG_PYTHON_THREADS	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1031;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\ppg_wrap.c	1063;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\ppg_wrap.c	1068;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\ppg_wrap.c	1082;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\ppg_wrap.c	1092;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\Hahn_echo\.c	1063;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\Hahn_echo\.c	1068;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\Hahn_echo\.c	1082;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\Hahn_echo\.c	1092;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\Hahn_echo\Hahn_echo_wrap.c	1063;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\Hahn_echo\Hahn_echo_wrap.c	1068;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\Hahn_echo\Hahn_echo_wrap.c	1082;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\Hahn_echo\Hahn_echo_wrap.c	1092;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\example\example_wrap.c	1063;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\example\example_wrap.c	1068;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\example\example_wrap.c	1082;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\example\example_wrap.c	1092;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\example\get_rand_array\get_rand_array_wrap.c	1063;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\example\get_rand_array\get_rand_array_wrap.c	1068;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\example\get_rand_array\get_rand_array_wrap.c	1082;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\example\get_rand_array\get_rand_array_wrap.c	1092;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\ppg_lang_wrap.c	1063;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\ppg_lang_wrap.c	1068;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\ppg_lang_wrap.c	1082;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\ppg_lang_wrap.c	1092;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1063;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1068;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1082;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1092;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1063;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1068;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1082;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_ALLOW	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1092;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\ppg_wrap.c	1061;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\ppg_wrap.c	1066;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\ppg_wrap.c	1076;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\ppg_wrap.c	1090;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\Hahn_echo\.c	1061;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\Hahn_echo\.c	1066;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\Hahn_echo\.c	1076;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\Hahn_echo\.c	1090;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\Hahn_echo\Hahn_echo_wrap.c	1061;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\Hahn_echo\Hahn_echo_wrap.c	1066;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\Hahn_echo\Hahn_echo_wrap.c	1076;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\Hahn_echo\Hahn_echo_wrap.c	1090;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\example\example_wrap.c	1061;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\example\example_wrap.c	1066;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\example\example_wrap.c	1076;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\example\example_wrap.c	1090;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\example\get_rand_array\get_rand_array_wrap.c	1061;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\example\get_rand_array\get_rand_array_wrap.c	1066;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\example\get_rand_array\get_rand_array_wrap.c	1076;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\example\get_rand_array\get_rand_array_wrap.c	1090;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\ppg_lang_wrap.c	1061;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\ppg_lang_wrap.c	1066;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\ppg_lang_wrap.c	1076;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\ppg_lang_wrap.c	1090;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1061;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1066;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1076;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1090;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1061;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1066;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1076;"	d	file:
SWIG_PYTHON_THREAD_BEGIN_BLOCK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1090;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\ppg_wrap.c	1064;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\ppg_wrap.c	1069;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\ppg_wrap.c	1085;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\ppg_wrap.c	1093;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\Hahn_echo\.c	1064;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\Hahn_echo\.c	1069;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\Hahn_echo\.c	1085;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\Hahn_echo\.c	1093;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\Hahn_echo\Hahn_echo_wrap.c	1064;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\Hahn_echo\Hahn_echo_wrap.c	1069;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\Hahn_echo\Hahn_echo_wrap.c	1085;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\Hahn_echo\Hahn_echo_wrap.c	1093;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\example\example_wrap.c	1064;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\example\example_wrap.c	1069;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\example\example_wrap.c	1085;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\example\example_wrap.c	1093;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\example\get_rand_array\get_rand_array_wrap.c	1064;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\example\get_rand_array\get_rand_array_wrap.c	1069;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\example\get_rand_array\get_rand_array_wrap.c	1085;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\example\get_rand_array\get_rand_array_wrap.c	1093;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\ppg_lang_wrap.c	1064;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\ppg_lang_wrap.c	1069;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\ppg_lang_wrap.c	1085;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\ppg_lang_wrap.c	1093;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1064;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1069;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1085;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1093;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1064;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1069;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1085;"	d	file:
SWIG_PYTHON_THREAD_END_ALLOW	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1093;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\ppg_wrap.c	1062;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\ppg_wrap.c	1067;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\ppg_wrap.c	1079;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\ppg_wrap.c	1091;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\Hahn_echo\.c	1062;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\Hahn_echo\.c	1067;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\Hahn_echo\.c	1079;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\Hahn_echo\.c	1091;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\Hahn_echo\Hahn_echo_wrap.c	1062;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\Hahn_echo\Hahn_echo_wrap.c	1067;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\Hahn_echo\Hahn_echo_wrap.c	1079;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\Hahn_echo\Hahn_echo_wrap.c	1091;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\example\example_wrap.c	1062;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\example\example_wrap.c	1067;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\example\example_wrap.c	1079;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\example\example_wrap.c	1091;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\example\get_rand_array\get_rand_array_wrap.c	1062;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\example\get_rand_array\get_rand_array_wrap.c	1067;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\example\get_rand_array\get_rand_array_wrap.c	1079;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\example\get_rand_array\get_rand_array_wrap.c	1091;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\ppg_lang_wrap.c	1062;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\ppg_lang_wrap.c	1067;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\ppg_lang_wrap.c	1079;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\ppg_lang_wrap.c	1091;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1062;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1067;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1079;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1091;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1062;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1067;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1079;"	d	file:
SWIG_PYTHON_THREAD_END_BLOCK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1091;"	d	file:
SWIG_PYTHON_USE_GIL	.\ppg_wrap.c	1037;"	d	file:
SWIG_PYTHON_USE_GIL	.\swig\Hahn_echo\.c	1037;"	d	file:
SWIG_PYTHON_USE_GIL	.\swig\Hahn_echo\Hahn_echo_wrap.c	1037;"	d	file:
SWIG_PYTHON_USE_GIL	.\swig\example\example_wrap.c	1037;"	d	file:
SWIG_PYTHON_USE_GIL	.\swig\example\get_rand_array\get_rand_array_wrap.c	1037;"	d	file:
SWIG_PYTHON_USE_GIL	.\swig\ppg_lang\ppg_lang_wrap.c	1037;"	d	file:
SWIG_PYTHON_USE_GIL	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1037;"	d	file:
SWIG_PYTHON_USE_GIL	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1037;"	d	file:
SWIG_PY_BINARY	.\ppg_wrap.c	1110;"	d	file:
SWIG_PY_BINARY	.\swig\Hahn_echo\.c	1110;"	d	file:
SWIG_PY_BINARY	.\swig\Hahn_echo\Hahn_echo_wrap.c	1110;"	d	file:
SWIG_PY_BINARY	.\swig\example\example_wrap.c	1110;"	d	file:
SWIG_PY_BINARY	.\swig\example\get_rand_array\get_rand_array_wrap.c	1110;"	d	file:
SWIG_PY_BINARY	.\swig\ppg_lang\ppg_lang_wrap.c	1110;"	d	file:
SWIG_PY_BINARY	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1110;"	d	file:
SWIG_PY_BINARY	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1110;"	d	file:
SWIG_PY_POINTER	.\ppg_wrap.c	1109;"	d	file:
SWIG_PY_POINTER	.\swig\Hahn_echo\.c	1109;"	d	file:
SWIG_PY_POINTER	.\swig\Hahn_echo\Hahn_echo_wrap.c	1109;"	d	file:
SWIG_PY_POINTER	.\swig\example\example_wrap.c	1109;"	d	file:
SWIG_PY_POINTER	.\swig\example\get_rand_array\get_rand_array_wrap.c	1109;"	d	file:
SWIG_PY_POINTER	.\swig\ppg_lang\ppg_lang_wrap.c	1109;"	d	file:
SWIG_PY_POINTER	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1109;"	d	file:
SWIG_PY_POINTER	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1109;"	d	file:
SWIG_PackData	.\ppg_wrap.c	/^SWIG_PackData(char *c, void *ptr, size_t sz) {$/;"	f
SWIG_PackData	.\swig\Hahn_echo\.c	/^SWIG_PackData(char *c, void *ptr, size_t sz) {$/;"	f
SWIG_PackData	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_PackData(char *c, void *ptr, size_t sz) {$/;"	f
SWIG_PackData	.\swig\example\example_wrap.c	/^SWIG_PackData(char *c, void *ptr, size_t sz) {$/;"	f
SWIG_PackData	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_PackData(char *c, void *ptr, size_t sz) {$/;"	f
SWIG_PackData	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_PackData(char *c, void *ptr, size_t sz) {$/;"	f
SWIG_PackData	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_PackData(char *c, void *ptr, size_t sz) {$/;"	f
SWIG_PackData	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_PackData(char *c, void *ptr, size_t sz) {$/;"	f
SWIG_PackDataName	.\ppg_wrap.c	/^SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {$/;"	f
SWIG_PackDataName	.\swig\Hahn_echo\.c	/^SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {$/;"	f
SWIG_PackDataName	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {$/;"	f
SWIG_PackDataName	.\swig\example\example_wrap.c	/^SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {$/;"	f
SWIG_PackDataName	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {$/;"	f
SWIG_PackDataName	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {$/;"	f
SWIG_PackDataName	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {$/;"	f
SWIG_PackDataName	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {$/;"	f
SWIG_PackVoidPtr	.\ppg_wrap.c	/^SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {$/;"	f
SWIG_PackVoidPtr	.\swig\Hahn_echo\.c	/^SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {$/;"	f
SWIG_PackVoidPtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {$/;"	f
SWIG_PackVoidPtr	.\swig\example\example_wrap.c	/^SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {$/;"	f
SWIG_PackVoidPtr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {$/;"	f
SWIG_PackVoidPtr	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {$/;"	f
SWIG_PackVoidPtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {$/;"	f
SWIG_PackVoidPtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {$/;"	f
SWIG_PropagateClientData	.\ppg_wrap.c	/^SWIG_PropagateClientData(void) {$/;"	f
SWIG_PropagateClientData	.\swig\Hahn_echo\.c	/^SWIG_PropagateClientData(void) {$/;"	f
SWIG_PropagateClientData	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_PropagateClientData(void) {$/;"	f
SWIG_PropagateClientData	.\swig\example\example_wrap.c	/^SWIG_PropagateClientData(void) {$/;"	f
SWIG_PropagateClientData	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_PropagateClientData(void) {$/;"	f
SWIG_PropagateClientData	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_PropagateClientData(void) {$/;"	f
SWIG_PropagateClientData	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_PropagateClientData(void) {$/;"	f
SWIG_PropagateClientData	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_PropagateClientData(void) {$/;"	f
SWIG_Py_None	.\ppg_wrap.c	/^SWIG_Py_None(void)$/;"	f
SWIG_Py_None	.\swig\Hahn_echo\.c	/^SWIG_Py_None(void)$/;"	f
SWIG_Py_None	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Py_None(void)$/;"	f
SWIG_Py_None	.\swig\example\example_wrap.c	/^SWIG_Py_None(void)$/;"	f
SWIG_Py_None	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Py_None(void)$/;"	f
SWIG_Py_None	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Py_None(void)$/;"	f
SWIG_Py_None	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Py_None(void)$/;"	f
SWIG_Py_None	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Py_None(void)$/;"	f
SWIG_Py_Void	.\ppg_wrap.c	/^SWIG_Py_Void(void)$/;"	f
SWIG_Py_Void	.\swig\Hahn_echo\.c	/^SWIG_Py_Void(void)$/;"	f
SWIG_Py_Void	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Py_Void(void)$/;"	f
SWIG_Py_Void	.\swig\example\example_wrap.c	/^SWIG_Py_Void(void)$/;"	f
SWIG_Py_Void	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Py_Void(void)$/;"	f
SWIG_Py_Void	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Py_Void(void)$/;"	f
SWIG_Py_Void	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Py_Void(void)$/;"	f
SWIG_Py_Void	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Py_Void(void)$/;"	f
SWIG_Python_AcquirePtr	.\ppg_wrap.c	/^SWIG_Python_AcquirePtr(PyObject *obj, int own) {$/;"	f
SWIG_Python_AcquirePtr	.\swig\Hahn_echo\.c	/^SWIG_Python_AcquirePtr(PyObject *obj, int own) {$/;"	f
SWIG_Python_AcquirePtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_AcquirePtr(PyObject *obj, int own) {$/;"	f
SWIG_Python_AcquirePtr	.\swig\example\example_wrap.c	/^SWIG_Python_AcquirePtr(PyObject *obj, int own) {$/;"	f
SWIG_Python_AcquirePtr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_AcquirePtr(PyObject *obj, int own) {$/;"	f
SWIG_Python_AcquirePtr	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_AcquirePtr(PyObject *obj, int own) {$/;"	f
SWIG_Python_AcquirePtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_AcquirePtr(PyObject *obj, int own) {$/;"	f
SWIG_Python_AcquirePtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_AcquirePtr(PyObject *obj, int own) {$/;"	f
SWIG_Python_AddErrMesg	.\ppg_wrap.c	/^SWIG_Python_AddErrMesg(const char* mesg, int infront)$/;"	f
SWIG_Python_AddErrMesg	.\swig\Hahn_echo\.c	/^SWIG_Python_AddErrMesg(const char* mesg, int infront)$/;"	f
SWIG_Python_AddErrMesg	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_AddErrMesg(const char* mesg, int infront)$/;"	f
SWIG_Python_AddErrMesg	.\swig\example\example_wrap.c	/^SWIG_Python_AddErrMesg(const char* mesg, int infront)$/;"	f
SWIG_Python_AddErrMesg	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_AddErrMesg(const char* mesg, int infront)$/;"	f
SWIG_Python_AddErrMesg	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_AddErrMesg(const char* mesg, int infront)$/;"	f
SWIG_Python_AddErrMesg	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_AddErrMesg(const char* mesg, int infront)$/;"	f
SWIG_Python_AddErrMesg	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_AddErrMesg(const char* mesg, int infront)$/;"	f
SWIG_Python_AddErrorMsg	.\ppg_wrap.c	/^SWIG_Python_AddErrorMsg(const char* mesg)$/;"	f
SWIG_Python_AddErrorMsg	.\swig\Hahn_echo\.c	/^SWIG_Python_AddErrorMsg(const char* mesg)$/;"	f
SWIG_Python_AddErrorMsg	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_AddErrorMsg(const char* mesg)$/;"	f
SWIG_Python_AddErrorMsg	.\swig\example\example_wrap.c	/^SWIG_Python_AddErrorMsg(const char* mesg)$/;"	f
SWIG_Python_AddErrorMsg	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_AddErrorMsg(const char* mesg)$/;"	f
SWIG_Python_AddErrorMsg	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_AddErrorMsg(const char* mesg)$/;"	f
SWIG_Python_AddErrorMsg	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_AddErrorMsg(const char* mesg)$/;"	f
SWIG_Python_AddErrorMsg	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_AddErrorMsg(const char* mesg)$/;"	f
SWIG_Python_AppendOutput	.\ppg_wrap.c	/^SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {$/;"	f
SWIG_Python_AppendOutput	.\swig\Hahn_echo\.c	/^SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {$/;"	f
SWIG_Python_AppendOutput	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {$/;"	f
SWIG_Python_AppendOutput	.\swig\example\example_wrap.c	/^SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {$/;"	f
SWIG_Python_AppendOutput	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {$/;"	f
SWIG_Python_AppendOutput	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {$/;"	f
SWIG_Python_AppendOutput	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {$/;"	f
SWIG_Python_AppendOutput	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {$/;"	f
SWIG_Python_ArgFail	.\ppg_wrap.c	/^SWIG_Python_ArgFail(int argnum)$/;"	f
SWIG_Python_ArgFail	.\swig\Hahn_echo\.c	/^SWIG_Python_ArgFail(int argnum)$/;"	f
SWIG_Python_ArgFail	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_ArgFail(int argnum)$/;"	f
SWIG_Python_ArgFail	.\swig\example\example_wrap.c	/^SWIG_Python_ArgFail(int argnum)$/;"	f
SWIG_Python_ArgFail	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_ArgFail(int argnum)$/;"	f
SWIG_Python_ArgFail	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_ArgFail(int argnum)$/;"	f
SWIG_Python_ArgFail	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_ArgFail(int argnum)$/;"	f
SWIG_Python_ArgFail	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_ArgFail(int argnum)$/;"	f
SWIG_Python_CallFunctor	.\ppg_wrap.c	1355;"	d	file:
SWIG_Python_CallFunctor	.\ppg_wrap.c	1357;"	d	file:
SWIG_Python_CallFunctor	.\swig\Hahn_echo\.c	1355;"	d	file:
SWIG_Python_CallFunctor	.\swig\Hahn_echo\.c	1357;"	d	file:
SWIG_Python_CallFunctor	.\swig\Hahn_echo\Hahn_echo_wrap.c	1355;"	d	file:
SWIG_Python_CallFunctor	.\swig\Hahn_echo\Hahn_echo_wrap.c	1357;"	d	file:
SWIG_Python_CallFunctor	.\swig\example\example_wrap.c	1355;"	d	file:
SWIG_Python_CallFunctor	.\swig\example\example_wrap.c	1357;"	d	file:
SWIG_Python_CallFunctor	.\swig\example\get_rand_array\get_rand_array_wrap.c	1355;"	d	file:
SWIG_Python_CallFunctor	.\swig\example\get_rand_array\get_rand_array_wrap.c	1357;"	d	file:
SWIG_Python_CallFunctor	.\swig\ppg_lang\ppg_lang_wrap.c	1355;"	d	file:
SWIG_Python_CallFunctor	.\swig\ppg_lang\ppg_lang_wrap.c	1357;"	d	file:
SWIG_Python_CallFunctor	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1355;"	d	file:
SWIG_Python_CallFunctor	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1357;"	d	file:
SWIG_Python_CallFunctor	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1355;"	d	file:
SWIG_Python_CallFunctor	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1357;"	d	file:
SWIG_Python_CheckImplicit	.\ppg_wrap.c	/^SWIG_Python_CheckImplicit(swig_type_info *ty)$/;"	f
SWIG_Python_CheckImplicit	.\swig\Hahn_echo\.c	/^SWIG_Python_CheckImplicit(swig_type_info *ty)$/;"	f
SWIG_Python_CheckImplicit	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_CheckImplicit(swig_type_info *ty)$/;"	f
SWIG_Python_CheckImplicit	.\swig\example\example_wrap.c	/^SWIG_Python_CheckImplicit(swig_type_info *ty)$/;"	f
SWIG_Python_CheckImplicit	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_CheckImplicit(swig_type_info *ty)$/;"	f
SWIG_Python_CheckImplicit	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_CheckImplicit(swig_type_info *ty)$/;"	f
SWIG_Python_CheckImplicit	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_CheckImplicit(swig_type_info *ty)$/;"	f
SWIG_Python_CheckImplicit	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_CheckImplicit(swig_type_info *ty)$/;"	f
SWIG_Python_ConvertFunctionPtr	.\ppg_wrap.c	/^SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertFunctionPtr	.\swig\Hahn_echo\.c	/^SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertFunctionPtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertFunctionPtr	.\swig\example\example_wrap.c	/^SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertFunctionPtr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertFunctionPtr	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertFunctionPtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertFunctionPtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertPacked	.\ppg_wrap.c	/^SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertPacked	.\swig\Hahn_echo\.c	/^SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertPacked	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertPacked	.\swig\example\example_wrap.c	/^SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertPacked	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertPacked	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertPacked	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertPacked	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {$/;"	f
SWIG_Python_ConvertPtr	.\ppg_wrap.c	1156;"	d	file:
SWIG_Python_ConvertPtr	.\swig\Hahn_echo\.c	1156;"	d	file:
SWIG_Python_ConvertPtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	1156;"	d	file:
SWIG_Python_ConvertPtr	.\swig\example\example_wrap.c	1156;"	d	file:
SWIG_Python_ConvertPtr	.\swig\example\get_rand_array\get_rand_array_wrap.c	1156;"	d	file:
SWIG_Python_ConvertPtr	.\swig\ppg_lang\ppg_lang_wrap.c	1156;"	d	file:
SWIG_Python_ConvertPtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1156;"	d	file:
SWIG_Python_ConvertPtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1156;"	d	file:
SWIG_Python_ConvertPtrAndOwn	.\ppg_wrap.c	/^SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {$/;"	f
SWIG_Python_ConvertPtrAndOwn	.\swig\Hahn_echo\.c	/^SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {$/;"	f
SWIG_Python_ConvertPtrAndOwn	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {$/;"	f
SWIG_Python_ConvertPtrAndOwn	.\swig\example\example_wrap.c	/^SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {$/;"	f
SWIG_Python_ConvertPtrAndOwn	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {$/;"	f
SWIG_Python_ConvertPtrAndOwn	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {$/;"	f
SWIG_Python_ConvertPtrAndOwn	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {$/;"	f
SWIG_Python_ConvertPtrAndOwn	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {$/;"	f
SWIG_Python_DestroyModule	.\ppg_wrap.c	/^SWIG_Python_DestroyModule(PyObject *obj)$/;"	f
SWIG_Python_DestroyModule	.\swig\Hahn_echo\.c	/^SWIG_Python_DestroyModule(PyObject *obj)$/;"	f
SWIG_Python_DestroyModule	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_DestroyModule(PyObject *obj)$/;"	f
SWIG_Python_DestroyModule	.\swig\example\example_wrap.c	/^SWIG_Python_DestroyModule(PyObject *obj)$/;"	f
SWIG_Python_DestroyModule	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_DestroyModule(PyObject *obj)$/;"	f
SWIG_Python_DestroyModule	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_DestroyModule(PyObject *obj)$/;"	f
SWIG_Python_DestroyModule	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_DestroyModule(PyObject *obj)$/;"	f
SWIG_Python_DestroyModule	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_DestroyModule(PyObject *obj)$/;"	f
SWIG_Python_ErrorType	.\ppg_wrap.c	/^SWIG_Python_ErrorType(int code) {$/;"	f
SWIG_Python_ErrorType	.\swig\Hahn_echo\.c	/^SWIG_Python_ErrorType(int code) {$/;"	f
SWIG_Python_ErrorType	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_ErrorType(int code) {$/;"	f
SWIG_Python_ErrorType	.\swig\example\example_wrap.c	/^SWIG_Python_ErrorType(int code) {$/;"	f
SWIG_Python_ErrorType	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_ErrorType(int code) {$/;"	f
SWIG_Python_ErrorType	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_ErrorType(int code) {$/;"	f
SWIG_Python_ErrorType	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_ErrorType(int code) {$/;"	f
SWIG_Python_ErrorType	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_ErrorType(int code) {$/;"	f
SWIG_Python_ExceptionType	.\ppg_wrap.c	/^SWIG_Python_ExceptionType(swig_type_info *desc) {$/;"	f
SWIG_Python_ExceptionType	.\swig\Hahn_echo\.c	/^SWIG_Python_ExceptionType(swig_type_info *desc) {$/;"	f
SWIG_Python_ExceptionType	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_ExceptionType(swig_type_info *desc) {$/;"	f
SWIG_Python_ExceptionType	.\swig\example\example_wrap.c	/^SWIG_Python_ExceptionType(swig_type_info *desc) {$/;"	f
SWIG_Python_ExceptionType	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_ExceptionType(swig_type_info *desc) {$/;"	f
SWIG_Python_ExceptionType	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_ExceptionType(swig_type_info *desc) {$/;"	f
SWIG_Python_ExceptionType	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_ExceptionType(swig_type_info *desc) {$/;"	f
SWIG_Python_ExceptionType	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_ExceptionType(swig_type_info *desc) {$/;"	f
SWIG_Python_FixMethods	.\ppg_wrap.c	/^  SWIG_Python_FixMethods(PyMethodDef *methods,$/;"	f
SWIG_Python_FixMethods	.\swig\Hahn_echo\.c	/^  SWIG_Python_FixMethods(PyMethodDef *methods,$/;"	f
SWIG_Python_FixMethods	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  SWIG_Python_FixMethods(PyMethodDef *methods,$/;"	f
SWIG_Python_FixMethods	.\swig\example\example_wrap.c	/^  SWIG_Python_FixMethods(PyMethodDef *methods,$/;"	f
SWIG_Python_FixMethods	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  SWIG_Python_FixMethods(PyMethodDef *methods,$/;"	f
SWIG_Python_FixMethods	.\swig\ppg_lang\ppg_lang_wrap.c	/^  SWIG_Python_FixMethods(PyMethodDef *methods,$/;"	f
SWIG_Python_FixMethods	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  SWIG_Python_FixMethods(PyMethodDef *methods,$/;"	f
SWIG_Python_FixMethods	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  SWIG_Python_FixMethods(PyMethodDef *methods,$/;"	f
SWIG_Python_GetModule	.\ppg_wrap.c	/^SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {$/;"	f
SWIG_Python_GetModule	.\swig\Hahn_echo\.c	/^SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {$/;"	f
SWIG_Python_GetModule	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {$/;"	f
SWIG_Python_GetModule	.\swig\example\example_wrap.c	/^SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {$/;"	f
SWIG_Python_GetModule	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {$/;"	f
SWIG_Python_GetModule	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {$/;"	f
SWIG_Python_GetModule	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {$/;"	f
SWIG_Python_GetModule	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {$/;"	f
SWIG_Python_GetSwigThis	.\ppg_wrap.c	/^SWIG_Python_GetSwigThis(PyObject *pyobj) $/;"	f
SWIG_Python_GetSwigThis	.\swig\Hahn_echo\.c	/^SWIG_Python_GetSwigThis(PyObject *pyobj) $/;"	f
SWIG_Python_GetSwigThis	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_GetSwigThis(PyObject *pyobj) $/;"	f
SWIG_Python_GetSwigThis	.\swig\example\example_wrap.c	/^SWIG_Python_GetSwigThis(PyObject *pyobj) $/;"	f
SWIG_Python_GetSwigThis	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_GetSwigThis(PyObject *pyobj) $/;"	f
SWIG_Python_GetSwigThis	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_GetSwigThis(PyObject *pyobj) $/;"	f
SWIG_Python_GetSwigThis	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_GetSwigThis(PyObject *pyobj) $/;"	f
SWIG_Python_GetSwigThis	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_GetSwigThis(PyObject *pyobj) $/;"	f
SWIG_Python_InitShadowInstance	.\ppg_wrap.c	/^SWIG_Python_InitShadowInstance(PyObject *args) {$/;"	f
SWIG_Python_InitShadowInstance	.\swig\Hahn_echo\.c	/^SWIG_Python_InitShadowInstance(PyObject *args) {$/;"	f
SWIG_Python_InitShadowInstance	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_InitShadowInstance(PyObject *args) {$/;"	f
SWIG_Python_InitShadowInstance	.\swig\example\example_wrap.c	/^SWIG_Python_InitShadowInstance(PyObject *args) {$/;"	f
SWIG_Python_InitShadowInstance	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_InitShadowInstance(PyObject *args) {$/;"	f
SWIG_Python_InitShadowInstance	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_InitShadowInstance(PyObject *args) {$/;"	f
SWIG_Python_InitShadowInstance	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_InitShadowInstance(PyObject *args) {$/;"	f
SWIG_Python_InitShadowInstance	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_InitShadowInstance(PyObject *args) {$/;"	f
SWIG_Python_InstallConstants	.\ppg_wrap.c	/^  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {$/;"	f
SWIG_Python_InstallConstants	.\swig\Hahn_echo\.c	/^  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {$/;"	f
SWIG_Python_InstallConstants	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {$/;"	f
SWIG_Python_InstallConstants	.\swig\example\example_wrap.c	/^  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {$/;"	f
SWIG_Python_InstallConstants	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {$/;"	f
SWIG_Python_InstallConstants	.\swig\ppg_lang\ppg_lang_wrap.c	/^  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {$/;"	f
SWIG_Python_InstallConstants	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {$/;"	f
SWIG_Python_InstallConstants	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {$/;"	f
SWIG_Python_MustGetPtr	.\ppg_wrap.c	/^SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {$/;"	f
SWIG_Python_MustGetPtr	.\swig\Hahn_echo\.c	/^SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {$/;"	f
SWIG_Python_MustGetPtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {$/;"	f
SWIG_Python_MustGetPtr	.\swig\example\example_wrap.c	/^SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {$/;"	f
SWIG_Python_MustGetPtr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {$/;"	f
SWIG_Python_MustGetPtr	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {$/;"	f
SWIG_Python_MustGetPtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {$/;"	f
SWIG_Python_MustGetPtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {$/;"	f
SWIG_Python_NewPackedObj	.\ppg_wrap.c	/^SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {$/;"	f
SWIG_Python_NewPackedObj	.\swig\Hahn_echo\.c	/^SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {$/;"	f
SWIG_Python_NewPackedObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {$/;"	f
SWIG_Python_NewPackedObj	.\swig\example\example_wrap.c	/^SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {$/;"	f
SWIG_Python_NewPackedObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {$/;"	f
SWIG_Python_NewPackedObj	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {$/;"	f
SWIG_Python_NewPackedObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {$/;"	f
SWIG_Python_NewPackedObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {$/;"	f
SWIG_Python_NewPointerObj	.\ppg_wrap.c	/^SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {$/;"	f
SWIG_Python_NewPointerObj	.\swig\Hahn_echo\.c	/^SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {$/;"	f
SWIG_Python_NewPointerObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {$/;"	f
SWIG_Python_NewPointerObj	.\swig\example\example_wrap.c	/^SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {$/;"	f
SWIG_Python_NewPointerObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {$/;"	f
SWIG_Python_NewPointerObj	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {$/;"	f
SWIG_Python_NewPointerObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {$/;"	f
SWIG_Python_NewPointerObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {$/;"	f
SWIG_Python_NewShadowInstance	.\ppg_wrap.c	/^SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)$/;"	f
SWIG_Python_NewShadowInstance	.\swig\Hahn_echo\.c	/^SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)$/;"	f
SWIG_Python_NewShadowInstance	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)$/;"	f
SWIG_Python_NewShadowInstance	.\swig\example\example_wrap.c	/^SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)$/;"	f
SWIG_Python_NewShadowInstance	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)$/;"	f
SWIG_Python_NewShadowInstance	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)$/;"	f
SWIG_Python_NewShadowInstance	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)$/;"	f
SWIG_Python_NewShadowInstance	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)$/;"	f
SWIG_Python_NonDynamicSetAttr	.\ppg_wrap.c	/^SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {$/;"	f
SWIG_Python_NonDynamicSetAttr	.\swig\Hahn_echo\.c	/^SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {$/;"	f
SWIG_Python_NonDynamicSetAttr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {$/;"	f
SWIG_Python_NonDynamicSetAttr	.\swig\example\example_wrap.c	/^SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {$/;"	f
SWIG_Python_NonDynamicSetAttr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {$/;"	f
SWIG_Python_NonDynamicSetAttr	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {$/;"	f
SWIG_Python_NonDynamicSetAttr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {$/;"	f
SWIG_Python_NonDynamicSetAttr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {$/;"	f
SWIG_Python_Raise	.\ppg_wrap.c	1221;"	d	file:
SWIG_Python_Raise	.\swig\Hahn_echo\.c	1221;"	d	file:
SWIG_Python_Raise	.\swig\Hahn_echo\Hahn_echo_wrap.c	1221;"	d	file:
SWIG_Python_Raise	.\swig\example\example_wrap.c	1221;"	d	file:
SWIG_Python_Raise	.\swig\example\get_rand_array\get_rand_array_wrap.c	1221;"	d	file:
SWIG_Python_Raise	.\swig\ppg_lang\ppg_lang_wrap.c	1221;"	d	file:
SWIG_Python_Raise	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1221;"	d	file:
SWIG_Python_Raise	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1221;"	d	file:
SWIG_Python_SetConstant	.\ppg_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\ppg_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\Hahn_echo\.c	/^SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\Hahn_echo\.c	/^SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\example\example_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\example\example_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetConstant	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   $/;"	f
SWIG_Python_SetErrorMsg	.\ppg_wrap.c	/^SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {$/;"	f
SWIG_Python_SetErrorMsg	.\swig\Hahn_echo\.c	/^SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {$/;"	f
SWIG_Python_SetErrorMsg	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {$/;"	f
SWIG_Python_SetErrorMsg	.\swig\example\example_wrap.c	/^SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {$/;"	f
SWIG_Python_SetErrorMsg	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {$/;"	f
SWIG_Python_SetErrorMsg	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {$/;"	f
SWIG_Python_SetErrorMsg	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {$/;"	f
SWIG_Python_SetErrorMsg	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {$/;"	f
SWIG_Python_SetErrorObj	.\ppg_wrap.c	/^SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {$/;"	f
SWIG_Python_SetErrorObj	.\swig\Hahn_echo\.c	/^SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {$/;"	f
SWIG_Python_SetErrorObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {$/;"	f
SWIG_Python_SetErrorObj	.\swig\example\example_wrap.c	/^SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {$/;"	f
SWIG_Python_SetErrorObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {$/;"	f
SWIG_Python_SetErrorObj	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {$/;"	f
SWIG_Python_SetErrorObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {$/;"	f
SWIG_Python_SetErrorObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {$/;"	f
SWIG_Python_SetModule	.\ppg_wrap.c	/^SWIG_Python_SetModule(swig_module_info *swig_module) {$/;"	f
SWIG_Python_SetModule	.\swig\Hahn_echo\.c	/^SWIG_Python_SetModule(swig_module_info *swig_module) {$/;"	f
SWIG_Python_SetModule	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_SetModule(swig_module_info *swig_module) {$/;"	f
SWIG_Python_SetModule	.\swig\example\example_wrap.c	/^SWIG_Python_SetModule(swig_module_info *swig_module) {$/;"	f
SWIG_Python_SetModule	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_SetModule(swig_module_info *swig_module) {$/;"	f
SWIG_Python_SetModule	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_SetModule(swig_module_info *swig_module) {$/;"	f
SWIG_Python_SetModule	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_SetModule(swig_module_info *swig_module) {$/;"	f
SWIG_Python_SetModule	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_SetModule(swig_module_info *swig_module) {$/;"	f
SWIG_Python_SetSwigThis	.\ppg_wrap.c	/^SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)$/;"	f
SWIG_Python_SetSwigThis	.\swig\Hahn_echo\.c	/^SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)$/;"	f
SWIG_Python_SetSwigThis	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)$/;"	f
SWIG_Python_SetSwigThis	.\swig\example\example_wrap.c	/^SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)$/;"	f
SWIG_Python_SetSwigThis	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)$/;"	f
SWIG_Python_SetSwigThis	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)$/;"	f
SWIG_Python_SetSwigThis	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)$/;"	f
SWIG_Python_SetSwigThis	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)$/;"	f
SWIG_Python_TypeCache	.\ppg_wrap.c	/^SWIG_Python_TypeCache(void) {$/;"	f
SWIG_Python_TypeCache	.\swig\Hahn_echo\.c	/^SWIG_Python_TypeCache(void) {$/;"	f
SWIG_Python_TypeCache	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_TypeCache(void) {$/;"	f
SWIG_Python_TypeCache	.\swig\example\example_wrap.c	/^SWIG_Python_TypeCache(void) {$/;"	f
SWIG_Python_TypeCache	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_TypeCache(void) {$/;"	f
SWIG_Python_TypeCache	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_TypeCache(void) {$/;"	f
SWIG_Python_TypeCache	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_TypeCache(void) {$/;"	f
SWIG_Python_TypeCache	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_TypeCache(void) {$/;"	f
SWIG_Python_TypeError	.\ppg_wrap.c	/^SWIG_Python_TypeError(const char *type, PyObject *obj)$/;"	f
SWIG_Python_TypeError	.\swig\Hahn_echo\.c	/^SWIG_Python_TypeError(const char *type, PyObject *obj)$/;"	f
SWIG_Python_TypeError	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_TypeError(const char *type, PyObject *obj)$/;"	f
SWIG_Python_TypeError	.\swig\example\example_wrap.c	/^SWIG_Python_TypeError(const char *type, PyObject *obj)$/;"	f
SWIG_Python_TypeError	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_TypeError(const char *type, PyObject *obj)$/;"	f
SWIG_Python_TypeError	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_TypeError(const char *type, PyObject *obj)$/;"	f
SWIG_Python_TypeError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_TypeError(const char *type, PyObject *obj)$/;"	f
SWIG_Python_TypeError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_TypeError(const char *type, PyObject *obj)$/;"	f
SWIG_Python_TypeQuery	.\ppg_wrap.c	/^SWIG_Python_TypeQuery(const char *type)$/;"	f
SWIG_Python_TypeQuery	.\swig\Hahn_echo\.c	/^SWIG_Python_TypeQuery(const char *type)$/;"	f
SWIG_Python_TypeQuery	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_TypeQuery(const char *type)$/;"	f
SWIG_Python_TypeQuery	.\swig\example\example_wrap.c	/^SWIG_Python_TypeQuery(const char *type)$/;"	f
SWIG_Python_TypeQuery	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_TypeQuery(const char *type)$/;"	f
SWIG_Python_TypeQuery	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_TypeQuery(const char *type)$/;"	f
SWIG_Python_TypeQuery	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_TypeQuery(const char *type)$/;"	f
SWIG_Python_TypeQuery	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_TypeQuery(const char *type)$/;"	f
SWIG_Python_UnpackTuple	.\ppg_wrap.c	/^SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)$/;"	f
SWIG_Python_UnpackTuple	.\swig\Hahn_echo\.c	/^SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)$/;"	f
SWIG_Python_UnpackTuple	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)$/;"	f
SWIG_Python_UnpackTuple	.\swig\example\example_wrap.c	/^SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)$/;"	f
SWIG_Python_UnpackTuple	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)$/;"	f
SWIG_Python_UnpackTuple	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)$/;"	f
SWIG_Python_UnpackTuple	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)$/;"	f
SWIG_Python_UnpackTuple	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)$/;"	f
SWIG_Python_addvarlink	.\ppg_wrap.c	/^  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {$/;"	f
SWIG_Python_addvarlink	.\swig\Hahn_echo\.c	/^  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {$/;"	f
SWIG_Python_addvarlink	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {$/;"	f
SWIG_Python_addvarlink	.\swig\example\example_wrap.c	/^  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {$/;"	f
SWIG_Python_addvarlink	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {$/;"	f
SWIG_Python_addvarlink	.\swig\ppg_lang\ppg_lang_wrap.c	/^  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {$/;"	f
SWIG_Python_addvarlink	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {$/;"	f
SWIG_Python_addvarlink	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {$/;"	f
SWIG_Python_newvarlink	.\ppg_wrap.c	/^  SWIG_Python_newvarlink(void) {$/;"	f
SWIG_Python_newvarlink	.\swig\Hahn_echo\.c	/^  SWIG_Python_newvarlink(void) {$/;"	f
SWIG_Python_newvarlink	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  SWIG_Python_newvarlink(void) {$/;"	f
SWIG_Python_newvarlink	.\swig\example\example_wrap.c	/^  SWIG_Python_newvarlink(void) {$/;"	f
SWIG_Python_newvarlink	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  SWIG_Python_newvarlink(void) {$/;"	f
SWIG_Python_newvarlink	.\swig\ppg_lang\ppg_lang_wrap.c	/^  SWIG_Python_newvarlink(void) {$/;"	f
SWIG_Python_newvarlink	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  SWIG_Python_newvarlink(void) {$/;"	f
SWIG_Python_newvarlink	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  SWIG_Python_newvarlink(void) {$/;"	f
SWIG_Python_str_AsChar	.\ppg_wrap.c	/^SWIG_Python_str_AsChar(PyObject *str)$/;"	f
SWIG_Python_str_AsChar	.\swig\Hahn_echo\.c	/^SWIG_Python_str_AsChar(PyObject *str)$/;"	f
SWIG_Python_str_AsChar	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_str_AsChar(PyObject *str)$/;"	f
SWIG_Python_str_AsChar	.\swig\example\example_wrap.c	/^SWIG_Python_str_AsChar(PyObject *str)$/;"	f
SWIG_Python_str_AsChar	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_str_AsChar(PyObject *str)$/;"	f
SWIG_Python_str_AsChar	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_str_AsChar(PyObject *str)$/;"	f
SWIG_Python_str_AsChar	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_str_AsChar(PyObject *str)$/;"	f
SWIG_Python_str_AsChar	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_str_AsChar(PyObject *str)$/;"	f
SWIG_Python_str_DelForPy3	.\ppg_wrap.c	797;"	d	file:
SWIG_Python_str_DelForPy3	.\ppg_wrap.c	799;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\Hahn_echo\.c	797;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\Hahn_echo\.c	799;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\Hahn_echo\Hahn_echo_wrap.c	797;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\Hahn_echo\Hahn_echo_wrap.c	799;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\example\example_wrap.c	797;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\example\example_wrap.c	799;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\example\get_rand_array\get_rand_array_wrap.c	797;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\example\get_rand_array\get_rand_array_wrap.c	799;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\ppg_lang\ppg_lang_wrap.c	797;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\ppg_lang\ppg_lang_wrap.c	799;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\ppg_lang\temp\ppg_temp_wrap.c	797;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\ppg_lang\temp\ppg_temp_wrap.c	799;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	797;"	d	file:
SWIG_Python_str_DelForPy3	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	799;"	d	file:
SWIG_Python_str_FromChar	.\ppg_wrap.c	/^SWIG_Python_str_FromChar(const char *c)$/;"	f
SWIG_Python_str_FromChar	.\swig\Hahn_echo\.c	/^SWIG_Python_str_FromChar(const char *c)$/;"	f
SWIG_Python_str_FromChar	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_Python_str_FromChar(const char *c)$/;"	f
SWIG_Python_str_FromChar	.\swig\example\example_wrap.c	/^SWIG_Python_str_FromChar(const char *c)$/;"	f
SWIG_Python_str_FromChar	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_Python_str_FromChar(const char *c)$/;"	f
SWIG_Python_str_FromChar	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_Python_str_FromChar(const char *c)$/;"	f
SWIG_Python_str_FromChar	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_Python_str_FromChar(const char *c)$/;"	f
SWIG_Python_str_FromChar	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_Python_str_FromChar(const char *c)$/;"	f
SWIG_Python_str_FromFormat	.\ppg_wrap.c	769;"	d	file:
SWIG_Python_str_FromFormat	.\ppg_wrap.c	771;"	d	file:
SWIG_Python_str_FromFormat	.\swig\Hahn_echo\.c	769;"	d	file:
SWIG_Python_str_FromFormat	.\swig\Hahn_echo\.c	771;"	d	file:
SWIG_Python_str_FromFormat	.\swig\Hahn_echo\Hahn_echo_wrap.c	769;"	d	file:
SWIG_Python_str_FromFormat	.\swig\Hahn_echo\Hahn_echo_wrap.c	771;"	d	file:
SWIG_Python_str_FromFormat	.\swig\example\example_wrap.c	769;"	d	file:
SWIG_Python_str_FromFormat	.\swig\example\example_wrap.c	771;"	d	file:
SWIG_Python_str_FromFormat	.\swig\example\get_rand_array\get_rand_array_wrap.c	769;"	d	file:
SWIG_Python_str_FromFormat	.\swig\example\get_rand_array\get_rand_array_wrap.c	771;"	d	file:
SWIG_Python_str_FromFormat	.\swig\ppg_lang\ppg_lang_wrap.c	769;"	d	file:
SWIG_Python_str_FromFormat	.\swig\ppg_lang\ppg_lang_wrap.c	771;"	d	file:
SWIG_Python_str_FromFormat	.\swig\ppg_lang\temp\ppg_temp_wrap.c	769;"	d	file:
SWIG_Python_str_FromFormat	.\swig\ppg_lang\temp\ppg_temp_wrap.c	771;"	d	file:
SWIG_Python_str_FromFormat	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	769;"	d	file:
SWIG_Python_str_FromFormat	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	771;"	d	file:
SWIG_QUOTE_STRING	.\ppg_wrap.c	165;"	d	file:
SWIG_QUOTE_STRING	.\swig\Hahn_echo\.c	165;"	d	file:
SWIG_QUOTE_STRING	.\swig\Hahn_echo\Hahn_echo_wrap.c	165;"	d	file:
SWIG_QUOTE_STRING	.\swig\example\example_wrap.c	165;"	d	file:
SWIG_QUOTE_STRING	.\swig\example\get_rand_array\get_rand_array_wrap.c	165;"	d	file:
SWIG_QUOTE_STRING	.\swig\ppg_lang\ppg_lang_wrap.c	165;"	d	file:
SWIG_QUOTE_STRING	.\swig\ppg_lang\temp\ppg_temp_wrap.c	165;"	d	file:
SWIG_QUOTE_STRING	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	165;"	d	file:
SWIG_RUNTIME_VERSION	.\ppg_wrap.c	161;"	d	file:
SWIG_RUNTIME_VERSION	.\swig\Hahn_echo\.c	161;"	d	file:
SWIG_RUNTIME_VERSION	.\swig\Hahn_echo\Hahn_echo_wrap.c	161;"	d	file:
SWIG_RUNTIME_VERSION	.\swig\example\example_wrap.c	161;"	d	file:
SWIG_RUNTIME_VERSION	.\swig\example\get_rand_array\get_rand_array_wrap.c	161;"	d	file:
SWIG_RUNTIME_VERSION	.\swig\ppg_lang\ppg_lang_wrap.c	161;"	d	file:
SWIG_RUNTIME_VERSION	.\swig\ppg_lang\temp\ppg_temp_wrap.c	161;"	d	file:
SWIG_RUNTIME_VERSION	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	161;"	d	file:
SWIG_RuntimeError	.\ppg_wrap.c	728;"	d	file:
SWIG_RuntimeError	.\swig\Hahn_echo\.c	728;"	d	file:
SWIG_RuntimeError	.\swig\Hahn_echo\Hahn_echo_wrap.c	728;"	d	file:
SWIG_RuntimeError	.\swig\example\example_wrap.c	728;"	d	file:
SWIG_RuntimeError	.\swig\example\get_rand_array\get_rand_array_wrap.c	728;"	d	file:
SWIG_RuntimeError	.\swig\ppg_lang\ppg_lang_wrap.c	728;"	d	file:
SWIG_RuntimeError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	728;"	d	file:
SWIG_RuntimeError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	728;"	d	file:
SWIG_STATIC_POINTER	.\ppg_wrap.c	1365;"	d	file:
SWIG_STATIC_POINTER	.\ppg_wrap.c	1367;"	d	file:
SWIG_STATIC_POINTER	.\swig\Hahn_echo\.c	1365;"	d	file:
SWIG_STATIC_POINTER	.\swig\Hahn_echo\.c	1367;"	d	file:
SWIG_STATIC_POINTER	.\swig\Hahn_echo\Hahn_echo_wrap.c	1365;"	d	file:
SWIG_STATIC_POINTER	.\swig\Hahn_echo\Hahn_echo_wrap.c	1367;"	d	file:
SWIG_STATIC_POINTER	.\swig\example\example_wrap.c	1365;"	d	file:
SWIG_STATIC_POINTER	.\swig\example\example_wrap.c	1367;"	d	file:
SWIG_STATIC_POINTER	.\swig\example\get_rand_array\get_rand_array_wrap.c	1365;"	d	file:
SWIG_STATIC_POINTER	.\swig\example\get_rand_array\get_rand_array_wrap.c	1367;"	d	file:
SWIG_STATIC_POINTER	.\swig\ppg_lang\ppg_lang_wrap.c	1365;"	d	file:
SWIG_STATIC_POINTER	.\swig\ppg_lang\ppg_lang_wrap.c	1367;"	d	file:
SWIG_STATIC_POINTER	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1365;"	d	file:
SWIG_STATIC_POINTER	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1367;"	d	file:
SWIG_STATIC_POINTER	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1365;"	d	file:
SWIG_STATIC_POINTER	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1367;"	d	file:
SWIG_SetErrorMsg	.\ppg_wrap.c	1196;"	d	file:
SWIG_SetErrorMsg	.\swig\Hahn_echo\.c	1196;"	d	file:
SWIG_SetErrorMsg	.\swig\Hahn_echo\Hahn_echo_wrap.c	1196;"	d	file:
SWIG_SetErrorMsg	.\swig\example\example_wrap.c	1196;"	d	file:
SWIG_SetErrorMsg	.\swig\example\get_rand_array\get_rand_array_wrap.c	1196;"	d	file:
SWIG_SetErrorMsg	.\swig\ppg_lang\ppg_lang_wrap.c	1196;"	d	file:
SWIG_SetErrorMsg	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1196;"	d	file:
SWIG_SetErrorMsg	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1196;"	d	file:
SWIG_SetErrorObj	.\ppg_wrap.c	1195;"	d	file:
SWIG_SetErrorObj	.\swig\Hahn_echo\.c	1195;"	d	file:
SWIG_SetErrorObj	.\swig\Hahn_echo\Hahn_echo_wrap.c	1195;"	d	file:
SWIG_SetErrorObj	.\swig\example\example_wrap.c	1195;"	d	file:
SWIG_SetErrorObj	.\swig\example\get_rand_array\get_rand_array_wrap.c	1195;"	d	file:
SWIG_SetErrorObj	.\swig\ppg_lang\ppg_lang_wrap.c	1195;"	d	file:
SWIG_SetErrorObj	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1195;"	d	file:
SWIG_SetErrorObj	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1195;"	d	file:
SWIG_SetModule	.\ppg_wrap.c	1192;"	d	file:
SWIG_SetModule	.\swig\Hahn_echo\.c	1192;"	d	file:
SWIG_SetModule	.\swig\Hahn_echo\Hahn_echo_wrap.c	1192;"	d	file:
SWIG_SetModule	.\swig\example\example_wrap.c	1192;"	d	file:
SWIG_SetModule	.\swig\example\get_rand_array\get_rand_array_wrap.c	1192;"	d	file:
SWIG_SetModule	.\swig\ppg_lang\ppg_lang_wrap.c	1192;"	d	file:
SWIG_SetModule	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1192;"	d	file:
SWIG_SetModule	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1192;"	d	file:
SWIG_SyntaxError	.\ppg_wrap.c	733;"	d	file:
SWIG_SyntaxError	.\swig\Hahn_echo\.c	733;"	d	file:
SWIG_SyntaxError	.\swig\Hahn_echo\Hahn_echo_wrap.c	733;"	d	file:
SWIG_SyntaxError	.\swig\example\example_wrap.c	733;"	d	file:
SWIG_SyntaxError	.\swig\example\get_rand_array\get_rand_array_wrap.c	733;"	d	file:
SWIG_SyntaxError	.\swig\ppg_lang\ppg_lang_wrap.c	733;"	d	file:
SWIG_SyntaxError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	733;"	d	file:
SWIG_SyntaxError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	733;"	d	file:
SWIG_SystemError	.\ppg_wrap.c	735;"	d	file:
SWIG_SystemError	.\swig\Hahn_echo\.c	735;"	d	file:
SWIG_SystemError	.\swig\Hahn_echo\Hahn_echo_wrap.c	735;"	d	file:
SWIG_SystemError	.\swig\example\example_wrap.c	735;"	d	file:
SWIG_SystemError	.\swig\example\get_rand_array\get_rand_array_wrap.c	735;"	d	file:
SWIG_SystemError	.\swig\ppg_lang\ppg_lang_wrap.c	735;"	d	file:
SWIG_SystemError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	735;"	d	file:
SWIG_SystemError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	735;"	d	file:
SWIG_TMPOBJ	.\ppg_wrap.c	296;"	d	file:
SWIG_TMPOBJ	.\swig\Hahn_echo\.c	296;"	d	file:
SWIG_TMPOBJ	.\swig\Hahn_echo\Hahn_echo_wrap.c	296;"	d	file:
SWIG_TMPOBJ	.\swig\example\example_wrap.c	296;"	d	file:
SWIG_TMPOBJ	.\swig\example\get_rand_array\get_rand_array_wrap.c	296;"	d	file:
SWIG_TMPOBJ	.\swig\ppg_lang\ppg_lang_wrap.c	296;"	d	file:
SWIG_TMPOBJ	.\swig\ppg_lang\temp\ppg_temp_wrap.c	296;"	d	file:
SWIG_TMPOBJ	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	296;"	d	file:
SWIG_TMPOBJMASK	.\ppg_wrap.c	291;"	d	file:
SWIG_TMPOBJMASK	.\swig\Hahn_echo\.c	291;"	d	file:
SWIG_TMPOBJMASK	.\swig\Hahn_echo\Hahn_echo_wrap.c	291;"	d	file:
SWIG_TMPOBJMASK	.\swig\example\example_wrap.c	291;"	d	file:
SWIG_TMPOBJMASK	.\swig\example\get_rand_array\get_rand_array_wrap.c	291;"	d	file:
SWIG_TMPOBJMASK	.\swig\ppg_lang\ppg_lang_wrap.c	291;"	d	file:
SWIG_TMPOBJMASK	.\swig\ppg_lang\temp\ppg_temp_wrap.c	291;"	d	file:
SWIG_TMPOBJMASK	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	291;"	d	file:
SWIG_TYPE_TABLE_NAME	.\ppg_wrap.c	167;"	d	file:
SWIG_TYPE_TABLE_NAME	.\ppg_wrap.c	169;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\Hahn_echo\.c	167;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\Hahn_echo\.c	169;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\Hahn_echo\Hahn_echo_wrap.c	167;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\Hahn_echo\Hahn_echo_wrap.c	169;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\example\example_wrap.c	167;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\example\example_wrap.c	169;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\example\get_rand_array\get_rand_array_wrap.c	167;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\example\get_rand_array\get_rand_array_wrap.c	169;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\ppg_lang\ppg_lang_wrap.c	167;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\ppg_lang\ppg_lang_wrap.c	169;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\ppg_lang\temp\ppg_temp_wrap.c	167;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\ppg_lang\temp\ppg_temp_wrap.c	169;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	167;"	d	file:
SWIG_TYPE_TABLE_NAME	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	169;"	d	file:
SWIG_This	.\ppg_wrap.c	/^SWIG_This(void)$/;"	f
SWIG_This	.\swig\Hahn_echo\.c	/^SWIG_This(void)$/;"	f
SWIG_This	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_This(void)$/;"	f
SWIG_This	.\swig\example\example_wrap.c	/^SWIG_This(void)$/;"	f
SWIG_This	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_This(void)$/;"	f
SWIG_This	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_This(void)$/;"	f
SWIG_This	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_This(void)$/;"	f
SWIG_This	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_This(void)$/;"	f
SWIG_TypeCast	.\ppg_wrap.c	/^SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {$/;"	f
SWIG_TypeCast	.\swig\Hahn_echo\.c	/^SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {$/;"	f
SWIG_TypeCast	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {$/;"	f
SWIG_TypeCast	.\swig\example\example_wrap.c	/^SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {$/;"	f
SWIG_TypeCast	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {$/;"	f
SWIG_TypeCast	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {$/;"	f
SWIG_TypeCast	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {$/;"	f
SWIG_TypeCast	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {$/;"	f
SWIG_TypeCheck	.\ppg_wrap.c	/^SWIG_TypeCheck(const char *c, swig_type_info *ty) {$/;"	f
SWIG_TypeCheck	.\swig\Hahn_echo\.c	/^SWIG_TypeCheck(const char *c, swig_type_info *ty) {$/;"	f
SWIG_TypeCheck	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeCheck(const char *c, swig_type_info *ty) {$/;"	f
SWIG_TypeCheck	.\swig\example\example_wrap.c	/^SWIG_TypeCheck(const char *c, swig_type_info *ty) {$/;"	f
SWIG_TypeCheck	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeCheck(const char *c, swig_type_info *ty) {$/;"	f
SWIG_TypeCheck	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeCheck(const char *c, swig_type_info *ty) {$/;"	f
SWIG_TypeCheck	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeCheck(const char *c, swig_type_info *ty) {$/;"	f
SWIG_TypeCheck	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeCheck(const char *c, swig_type_info *ty) {$/;"	f
SWIG_TypeCheckStruct	.\ppg_wrap.c	/^SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {$/;"	f
SWIG_TypeCheckStruct	.\swig\Hahn_echo\.c	/^SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {$/;"	f
SWIG_TypeCheckStruct	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {$/;"	f
SWIG_TypeCheckStruct	.\swig\example\example_wrap.c	/^SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {$/;"	f
SWIG_TypeCheckStruct	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {$/;"	f
SWIG_TypeCheckStruct	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {$/;"	f
SWIG_TypeCheckStruct	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {$/;"	f
SWIG_TypeCheckStruct	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {$/;"	f
SWIG_TypeClientData	.\ppg_wrap.c	/^SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeClientData	.\swig\Hahn_echo\.c	/^SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeClientData	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeClientData	.\swig\example\example_wrap.c	/^SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeClientData	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeClientData	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeClientData	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeClientData	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeCmp	.\ppg_wrap.c	/^SWIG_TypeCmp(const char *nb, const char *tb) {$/;"	f
SWIG_TypeCmp	.\swig\Hahn_echo\.c	/^SWIG_TypeCmp(const char *nb, const char *tb) {$/;"	f
SWIG_TypeCmp	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeCmp(const char *nb, const char *tb) {$/;"	f
SWIG_TypeCmp	.\swig\example\example_wrap.c	/^SWIG_TypeCmp(const char *nb, const char *tb) {$/;"	f
SWIG_TypeCmp	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeCmp(const char *nb, const char *tb) {$/;"	f
SWIG_TypeCmp	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeCmp(const char *nb, const char *tb) {$/;"	f
SWIG_TypeCmp	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeCmp(const char *nb, const char *tb) {$/;"	f
SWIG_TypeCmp	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeCmp(const char *nb, const char *tb) {$/;"	f
SWIG_TypeDynamicCast	.\ppg_wrap.c	/^SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {$/;"	f
SWIG_TypeDynamicCast	.\swig\Hahn_echo\.c	/^SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {$/;"	f
SWIG_TypeDynamicCast	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {$/;"	f
SWIG_TypeDynamicCast	.\swig\example\example_wrap.c	/^SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {$/;"	f
SWIG_TypeDynamicCast	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {$/;"	f
SWIG_TypeDynamicCast	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {$/;"	f
SWIG_TypeDynamicCast	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {$/;"	f
SWIG_TypeDynamicCast	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {$/;"	f
SWIG_TypeEquiv	.\ppg_wrap.c	/^SWIG_TypeEquiv(const char *nb, const char *tb) {$/;"	f
SWIG_TypeEquiv	.\swig\Hahn_echo\.c	/^SWIG_TypeEquiv(const char *nb, const char *tb) {$/;"	f
SWIG_TypeEquiv	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeEquiv(const char *nb, const char *tb) {$/;"	f
SWIG_TypeEquiv	.\swig\example\example_wrap.c	/^SWIG_TypeEquiv(const char *nb, const char *tb) {$/;"	f
SWIG_TypeEquiv	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeEquiv(const char *nb, const char *tb) {$/;"	f
SWIG_TypeEquiv	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeEquiv(const char *nb, const char *tb) {$/;"	f
SWIG_TypeEquiv	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeEquiv(const char *nb, const char *tb) {$/;"	f
SWIG_TypeEquiv	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeEquiv(const char *nb, const char *tb) {$/;"	f
SWIG_TypeError	.\ppg_wrap.c	730;"	d	file:
SWIG_TypeError	.\swig\Hahn_echo\.c	730;"	d	file:
SWIG_TypeError	.\swig\Hahn_echo\Hahn_echo_wrap.c	730;"	d	file:
SWIG_TypeError	.\swig\example\example_wrap.c	730;"	d	file:
SWIG_TypeError	.\swig\example\get_rand_array\get_rand_array_wrap.c	730;"	d	file:
SWIG_TypeError	.\swig\ppg_lang\ppg_lang_wrap.c	730;"	d	file:
SWIG_TypeError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	730;"	d	file:
SWIG_TypeError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	730;"	d	file:
SWIG_TypeName	.\ppg_wrap.c	/^SWIG_TypeName(const swig_type_info *ty) {$/;"	f
SWIG_TypeName	.\swig\Hahn_echo\.c	/^SWIG_TypeName(const swig_type_info *ty) {$/;"	f
SWIG_TypeName	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeName(const swig_type_info *ty) {$/;"	f
SWIG_TypeName	.\swig\example\example_wrap.c	/^SWIG_TypeName(const swig_type_info *ty) {$/;"	f
SWIG_TypeName	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeName(const swig_type_info *ty) {$/;"	f
SWIG_TypeName	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeName(const swig_type_info *ty) {$/;"	f
SWIG_TypeName	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeName(const swig_type_info *ty) {$/;"	f
SWIG_TypeName	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeName(const swig_type_info *ty) {$/;"	f
SWIG_TypeNameComp	.\ppg_wrap.c	/^SWIG_TypeNameComp(const char *f1, const char *l1,$/;"	f
SWIG_TypeNameComp	.\swig\Hahn_echo\.c	/^SWIG_TypeNameComp(const char *f1, const char *l1,$/;"	f
SWIG_TypeNameComp	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeNameComp(const char *f1, const char *l1,$/;"	f
SWIG_TypeNameComp	.\swig\example\example_wrap.c	/^SWIG_TypeNameComp(const char *f1, const char *l1,$/;"	f
SWIG_TypeNameComp	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeNameComp(const char *f1, const char *l1,$/;"	f
SWIG_TypeNameComp	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeNameComp(const char *f1, const char *l1,$/;"	f
SWIG_TypeNameComp	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeNameComp(const char *f1, const char *l1,$/;"	f
SWIG_TypeNameComp	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeNameComp(const char *f1, const char *l1,$/;"	f
SWIG_TypeNewClientData	.\ppg_wrap.c	/^SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeNewClientData	.\swig\Hahn_echo\.c	/^SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeNewClientData	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeNewClientData	.\swig\example\example_wrap.c	/^SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeNewClientData	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeNewClientData	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeNewClientData	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeNewClientData	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypePrettyName	.\ppg_wrap.c	/^SWIG_TypePrettyName(const swig_type_info *type) {$/;"	f
SWIG_TypePrettyName	.\swig\Hahn_echo\.c	/^SWIG_TypePrettyName(const swig_type_info *type) {$/;"	f
SWIG_TypePrettyName	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypePrettyName(const swig_type_info *type) {$/;"	f
SWIG_TypePrettyName	.\swig\example\example_wrap.c	/^SWIG_TypePrettyName(const swig_type_info *type) {$/;"	f
SWIG_TypePrettyName	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypePrettyName(const swig_type_info *type) {$/;"	f
SWIG_TypePrettyName	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypePrettyName(const swig_type_info *type) {$/;"	f
SWIG_TypePrettyName	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypePrettyName(const swig_type_info *type) {$/;"	f
SWIG_TypePrettyName	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypePrettyName(const swig_type_info *type) {$/;"	f
SWIG_TypeQuery	.\ppg_wrap.c	2985;"	d	file:
SWIG_TypeQuery	.\swig\Hahn_echo\.c	2985;"	d	file:
SWIG_TypeQuery	.\swig\Hahn_echo\Hahn_echo_wrap.c	2999;"	d	file:
SWIG_TypeQuery	.\swig\example\example_wrap.c	2985;"	d	file:
SWIG_TypeQuery	.\swig\example\get_rand_array\get_rand_array_wrap.c	2986;"	d	file:
SWIG_TypeQuery	.\swig\ppg_lang\ppg_lang_wrap.c	2985;"	d	file:
SWIG_TypeQuery	.\swig\ppg_lang\temp\ppg_temp_wrap.c	2985;"	d	file:
SWIG_TypeQuery	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	2985;"	d	file:
SWIG_TypeQueryModule	.\ppg_wrap.c	/^SWIG_TypeQueryModule(swig_module_info *start,$/;"	f
SWIG_TypeQueryModule	.\swig\Hahn_echo\.c	/^SWIG_TypeQueryModule(swig_module_info *start,$/;"	f
SWIG_TypeQueryModule	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_TypeQueryModule(swig_module_info *start,$/;"	f
SWIG_TypeQueryModule	.\swig\example\example_wrap.c	/^SWIG_TypeQueryModule(swig_module_info *start,$/;"	f
SWIG_TypeQueryModule	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_TypeQueryModule(swig_module_info *start,$/;"	f
SWIG_TypeQueryModule	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_TypeQueryModule(swig_module_info *start,$/;"	f
SWIG_TypeQueryModule	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_TypeQueryModule(swig_module_info *start,$/;"	f
SWIG_TypeQueryModule	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_TypeQueryModule(swig_module_info *start,$/;"	f
SWIG_TypeRank	.\ppg_wrap.c	308;"	d	file:
SWIG_TypeRank	.\swig\Hahn_echo\.c	308;"	d	file:
SWIG_TypeRank	.\swig\Hahn_echo\Hahn_echo_wrap.c	308;"	d	file:
SWIG_TypeRank	.\swig\example\example_wrap.c	308;"	d	file:
SWIG_TypeRank	.\swig\example\get_rand_array\get_rand_array_wrap.c	308;"	d	file:
SWIG_TypeRank	.\swig\ppg_lang\ppg_lang_wrap.c	308;"	d	file:
SWIG_TypeRank	.\swig\ppg_lang\temp\ppg_temp_wrap.c	308;"	d	file:
SWIG_TypeRank	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	308;"	d	file:
SWIG_UnknownError	.\ppg_wrap.c	726;"	d	file:
SWIG_UnknownError	.\swig\Hahn_echo\.c	726;"	d	file:
SWIG_UnknownError	.\swig\Hahn_echo\Hahn_echo_wrap.c	726;"	d	file:
SWIG_UnknownError	.\swig\example\example_wrap.c	726;"	d	file:
SWIG_UnknownError	.\swig\example\get_rand_array\get_rand_array_wrap.c	726;"	d	file:
SWIG_UnknownError	.\swig\ppg_lang\ppg_lang_wrap.c	726;"	d	file:
SWIG_UnknownError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	726;"	d	file:
SWIG_UnknownError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	726;"	d	file:
SWIG_UnpackData	.\ppg_wrap.c	/^SWIG_UnpackData(const char *c, void *ptr, size_t sz) {$/;"	f
SWIG_UnpackData	.\swig\Hahn_echo\.c	/^SWIG_UnpackData(const char *c, void *ptr, size_t sz) {$/;"	f
SWIG_UnpackData	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_UnpackData(const char *c, void *ptr, size_t sz) {$/;"	f
SWIG_UnpackData	.\swig\example\example_wrap.c	/^SWIG_UnpackData(const char *c, void *ptr, size_t sz) {$/;"	f
SWIG_UnpackData	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_UnpackData(const char *c, void *ptr, size_t sz) {$/;"	f
SWIG_UnpackData	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_UnpackData(const char *c, void *ptr, size_t sz) {$/;"	f
SWIG_UnpackData	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_UnpackData(const char *c, void *ptr, size_t sz) {$/;"	f
SWIG_UnpackData	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_UnpackData(const char *c, void *ptr, size_t sz) {$/;"	f
SWIG_UnpackDataName	.\ppg_wrap.c	/^SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {$/;"	f
SWIG_UnpackDataName	.\swig\Hahn_echo\.c	/^SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {$/;"	f
SWIG_UnpackDataName	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {$/;"	f
SWIG_UnpackDataName	.\swig\example\example_wrap.c	/^SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {$/;"	f
SWIG_UnpackDataName	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {$/;"	f
SWIG_UnpackDataName	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {$/;"	f
SWIG_UnpackDataName	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {$/;"	f
SWIG_UnpackDataName	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {$/;"	f
SWIG_UnpackVoidPtr	.\ppg_wrap.c	/^SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {$/;"	f
SWIG_UnpackVoidPtr	.\swig\Hahn_echo\.c	/^SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {$/;"	f
SWIG_UnpackVoidPtr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {$/;"	f
SWIG_UnpackVoidPtr	.\swig\example\example_wrap.c	/^SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {$/;"	f
SWIG_UnpackVoidPtr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {$/;"	f
SWIG_UnpackVoidPtr	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {$/;"	f
SWIG_UnpackVoidPtr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {$/;"	f
SWIG_UnpackVoidPtr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {$/;"	f
SWIG_VERSION	.\ppg_wrap.c	3009;"	d	file:
SWIG_VERSION	.\swig\Hahn_echo\.c	3009;"	d	file:
SWIG_VERSION	.\swig\Hahn_echo\Hahn_echo_wrap.c	3023;"	d	file:
SWIG_VERSION	.\swig\example\example_wrap.c	3009;"	d	file:
SWIG_VERSION	.\swig\example\get_rand_array\get_rand_array_wrap.c	3010;"	d	file:
SWIG_VERSION	.\swig\ppg_lang\ppg_lang_wrap.c	3009;"	d	file:
SWIG_VERSION	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3009;"	d	file:
SWIG_VERSION	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3009;"	d	file:
SWIG_ValueError	.\ppg_wrap.c	734;"	d	file:
SWIG_ValueError	.\swig\Hahn_echo\.c	734;"	d	file:
SWIG_ValueError	.\swig\Hahn_echo\Hahn_echo_wrap.c	734;"	d	file:
SWIG_ValueError	.\swig\example\example_wrap.c	734;"	d	file:
SWIG_ValueError	.\swig\example\get_rand_array\get_rand_array_wrap.c	734;"	d	file:
SWIG_ValueError	.\swig\ppg_lang\ppg_lang_wrap.c	734;"	d	file:
SWIG_ValueError	.\swig\ppg_lang\temp\ppg_temp_wrap.c	734;"	d	file:
SWIG_ValueError	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	734;"	d	file:
SWIG_addvarlink	.\ppg_wrap.c	3524;"	d	file:
SWIG_addvarlink	.\swig\Hahn_echo\.c	3352;"	d	file:
SWIG_addvarlink	.\swig\Hahn_echo\Hahn_echo_wrap.c	4533;"	d	file:
SWIG_addvarlink	.\swig\example\example_wrap.c	3594;"	d	file:
SWIG_addvarlink	.\swig\example\get_rand_array\get_rand_array_wrap.c	3968;"	d	file:
SWIG_addvarlink	.\swig\ppg_lang\ppg_lang_wrap.c	3524;"	d	file:
SWIG_addvarlink	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3864;"	d	file:
SWIG_addvarlink	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3900;"	d	file:
SWIG_arg_fail	.\ppg_wrap.c	2809;"	d	file:
SWIG_arg_fail	.\swig\Hahn_echo\.c	2809;"	d	file:
SWIG_arg_fail	.\swig\Hahn_echo\Hahn_echo_wrap.c	2809;"	d	file:
SWIG_arg_fail	.\swig\example\example_wrap.c	2809;"	d	file:
SWIG_arg_fail	.\swig\example\get_rand_array\get_rand_array_wrap.c	2809;"	d	file:
SWIG_arg_fail	.\swig\ppg_lang\ppg_lang_wrap.c	2809;"	d	file:
SWIG_arg_fail	.\swig\ppg_lang\temp\ppg_temp_wrap.c	2809;"	d	file:
SWIG_arg_fail	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	2809;"	d	file:
SWIG_as_voidptr	.\ppg_wrap.c	3012;"	d	file:
SWIG_as_voidptr	.\swig\Hahn_echo\.c	3012;"	d	file:
SWIG_as_voidptr	.\swig\Hahn_echo\Hahn_echo_wrap.c	3026;"	d	file:
SWIG_as_voidptr	.\swig\example\example_wrap.c	3012;"	d	file:
SWIG_as_voidptr	.\swig\example\get_rand_array\get_rand_array_wrap.c	3013;"	d	file:
SWIG_as_voidptr	.\swig\ppg_lang\ppg_lang_wrap.c	3012;"	d	file:
SWIG_as_voidptr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3012;"	d	file:
SWIG_as_voidptr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3012;"	d	file:
SWIG_as_voidptrptr	.\ppg_wrap.c	3013;"	d	file:
SWIG_as_voidptrptr	.\swig\Hahn_echo\.c	3013;"	d	file:
SWIG_as_voidptrptr	.\swig\Hahn_echo\Hahn_echo_wrap.c	3027;"	d	file:
SWIG_as_voidptrptr	.\swig\example\example_wrap.c	3013;"	d	file:
SWIG_as_voidptrptr	.\swig\example\get_rand_array\get_rand_array_wrap.c	3014;"	d	file:
SWIG_as_voidptrptr	.\swig\ppg_lang\ppg_lang_wrap.c	3013;"	d	file:
SWIG_as_voidptrptr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3013;"	d	file:
SWIG_as_voidptrptr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3013;"	d	file:
SWIG_contract_assert	.\ppg_wrap.c	2976;"	d	file:
SWIG_contract_assert	.\swig\Hahn_echo\.c	2976;"	d	file:
SWIG_contract_assert	.\swig\Hahn_echo\Hahn_echo_wrap.c	2976;"	d	file:
SWIG_contract_assert	.\swig\example\example_wrap.c	2976;"	d	file:
SWIG_contract_assert	.\swig\example\get_rand_array\get_rand_array_wrap.c	2976;"	d	file:
SWIG_contract_assert	.\swig\ppg_lang\ppg_lang_wrap.c	2976;"	d	file:
SWIG_contract_assert	.\swig\ppg_lang\temp\ppg_temp_wrap.c	2976;"	d	file:
SWIG_contract_assert	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	2976;"	d	file:
SWIG_exception_fail	.\ppg_wrap.c	2974;"	d	file:
SWIG_exception_fail	.\swig\Hahn_echo\.c	2974;"	d	file:
SWIG_exception_fail	.\swig\Hahn_echo\Hahn_echo_wrap.c	2974;"	d	file:
SWIG_exception_fail	.\swig\example\example_wrap.c	2974;"	d	file:
SWIG_exception_fail	.\swig\example\get_rand_array\get_rand_array_wrap.c	2974;"	d	file:
SWIG_exception_fail	.\swig\ppg_lang\ppg_lang_wrap.c	2974;"	d	file:
SWIG_exception_fail	.\swig\ppg_lang\temp\ppg_temp_wrap.c	2974;"	d	file:
SWIG_exception_fail	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	2974;"	d	file:
SWIG_fail	.\ppg_wrap.c	1199;"	d	file:
SWIG_fail	.\swig\Hahn_echo\.c	1199;"	d	file:
SWIG_fail	.\swig\Hahn_echo\Hahn_echo_wrap.c	1199;"	d	file:
SWIG_fail	.\swig\example\example_wrap.c	1199;"	d	file:
SWIG_fail	.\swig\example\get_rand_array\get_rand_array_wrap.c	1199;"	d	file:
SWIG_fail	.\swig\ppg_lang\ppg_lang_wrap.c	1199;"	d	file:
SWIG_fail	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1199;"	d	file:
SWIG_fail	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1199;"	d	file:
SWIG_globals	.\ppg_wrap.c	/^  SWIG_globals(void) {$/;"	f
SWIG_globals	.\swig\Hahn_echo\.c	/^  SWIG_globals(void) {$/;"	f
SWIG_globals	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  SWIG_globals(void) {$/;"	f
SWIG_globals	.\swig\example\example_wrap.c	/^  SWIG_globals(void) {$/;"	f
SWIG_globals	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  SWIG_globals(void) {$/;"	f
SWIG_globals	.\swig\ppg_lang\ppg_lang_wrap.c	/^  SWIG_globals(void) {$/;"	f
SWIG_globals	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  SWIG_globals(void) {$/;"	f
SWIG_globals	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  SWIG_globals(void) {$/;"	f
SWIG_init	.\ppg_wrap.c	/^SWIG_init(void) {$/;"	f
SWIG_init	.\ppg_wrap.c	3000;"	d	file:
SWIG_init	.\ppg_wrap.c	3003;"	d	file:
SWIG_init	.\swig\Hahn_echo\.c	/^SWIG_init(void) {$/;"	f
SWIG_init	.\swig\Hahn_echo\.c	3000;"	d	file:
SWIG_init	.\swig\Hahn_echo\.c	3003;"	d	file:
SWIG_init	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_init(void) {$/;"	f
SWIG_init	.\swig\Hahn_echo\Hahn_echo_wrap.c	3014;"	d	file:
SWIG_init	.\swig\Hahn_echo\Hahn_echo_wrap.c	3017;"	d	file:
SWIG_init	.\swig\example\example_wrap.c	/^SWIG_init(void) {$/;"	f
SWIG_init	.\swig\example\example_wrap.c	3000;"	d	file:
SWIG_init	.\swig\example\example_wrap.c	3003;"	d	file:
SWIG_init	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SWIG_init(void) {$/;"	f
SWIG_init	.\swig\example\get_rand_array\get_rand_array_wrap.c	3001;"	d	file:
SWIG_init	.\swig\example\get_rand_array\get_rand_array_wrap.c	3004;"	d	file:
SWIG_init	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_init(void) {$/;"	f
SWIG_init	.\swig\ppg_lang\ppg_lang_wrap.c	3000;"	d	file:
SWIG_init	.\swig\ppg_lang\ppg_lang_wrap.c	3003;"	d	file:
SWIG_init	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_init(void) {$/;"	f
SWIG_init	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3000;"	d	file:
SWIG_init	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3003;"	d	file:
SWIG_init	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_init(void) {$/;"	f
SWIG_init	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3000;"	d	file:
SWIG_init	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3003;"	d	file:
SWIG_name	.\ppg_wrap.c	3006;"	d	file:
SWIG_name	.\swig\Hahn_echo\.c	3006;"	d	file:
SWIG_name	.\swig\Hahn_echo\Hahn_echo_wrap.c	3020;"	d	file:
SWIG_name	.\swig\example\example_wrap.c	3006;"	d	file:
SWIG_name	.\swig\example\get_rand_array\get_rand_array_wrap.c	3007;"	d	file:
SWIG_name	.\swig\ppg_lang\ppg_lang_wrap.c	3006;"	d	file:
SWIG_name	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3006;"	d	file:
SWIG_name	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3006;"	d	file:
SWIG_newvarlink	.\ppg_wrap.c	3523;"	d	file:
SWIG_newvarlink	.\swig\Hahn_echo\.c	3351;"	d	file:
SWIG_newvarlink	.\swig\Hahn_echo\Hahn_echo_wrap.c	4532;"	d	file:
SWIG_newvarlink	.\swig\example\example_wrap.c	3593;"	d	file:
SWIG_newvarlink	.\swig\example\get_rand_array\get_rand_array_wrap.c	3967;"	d	file:
SWIG_newvarlink	.\swig\ppg_lang\ppg_lang_wrap.c	3523;"	d	file:
SWIG_newvarlink	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3863;"	d	file:
SWIG_newvarlink	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3899;"	d	file:
SWIG_pchar_descriptor	.\ppg_wrap.c	/^SWIG_pchar_descriptor(void)$/;"	f
SWIG_pchar_descriptor	.\swig\Hahn_echo\.c	/^SWIG_pchar_descriptor(void)$/;"	f
SWIG_pchar_descriptor	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SWIG_pchar_descriptor(void)$/;"	f
SWIG_pchar_descriptor	.\swig\example\example_wrap.c	/^SWIG_pchar_descriptor(void)$/;"	f
SWIG_pchar_descriptor	.\swig\ppg_lang\ppg_lang_wrap.c	/^SWIG_pchar_descriptor(void)$/;"	f
SWIG_pchar_descriptor	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SWIG_pchar_descriptor(void)$/;"	f
SWIG_pchar_descriptor	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SWIG_pchar_descriptor(void)$/;"	f
SW_MHZ	.\adc_offset.c	8;"	d	file:
SW_kHz	.\CPMG.h	/^    double SW_kHz;$/;"	m	struct:SCANPARAMS
SW_kHz	.\Field_Sweep.h	/^    double SW_kHz;$/;"	m	struct:SCANPARAMS
SW_kHz	.\Hahn_echo.h	/^    double SW_kHz;$/;"	m	struct:SCANPARAMS
SW_kHz	.\IR.h	/^    double SW_kHz;$/;"	m	struct:SCANPARAMS
SW_kHz	.\JFAB_Hahn_echo_hardcode.c	/^    double SW_kHz;$/;"	m	struct:SCANPARAMS	file:
SW_kHz	.\nutation.h	/^    double SW_kHz;$/;"	m	struct:SCANPARAMS
SW_kHz	.\nutation90.h	/^    double SW_kHz;$/;"	m	struct:SCANPARAMS
SW_kHz	.\p90.h	/^    double SW_kHz;$/;"	m	struct:SCANPARAMS
SW_kHz	.\swig\Hahn_echo\run_Hahn_echo.py	/^SW_kHz = 50.0$/;"	v
SYMBOLIC_LINK_ALL_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	746;"	d
SYMBOLIC_LINK_QUERY	.\SpinAPI\src\ddk_headers\winddk.h	745;"	d
SYNCH_LEVEL	.\SpinAPI\src\ddk_headers\winddk.h	3713;"	d
Save	.\SpinAPI\interpreter\src\gui.cpp	/^int Save()$/;"	f
SaveAs	.\SpinAPI\interpreter\src\gui.cpp	/^int SaveAs()$/;"	f
SaveChanges	.\SpinAPI\interpreter\src\gui.cpp	/^int SaveChanges()$/;"	f
SaveOutput	.\SpinAPI\interpreter\src\gui.cpp	/^int SaveOutput()$/;"	f
ScatterGather	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  ScatterGather;$/;"	m	struct:_DEVICE_DESCRIPTION
Scsi	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Scsi;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon64
ScsiAdapter	.\SpinAPI\src\ddk_headers\winddk.h	/^  ScsiAdapter,$/;"	e	enum:_CONFIGURATION_TYPE
ScsiPortCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  ScsiPortCount;$/;"	m	struct:_CONFIGURATION_INFORMATION
Second	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Second;$/;"	m	struct:_TIME_FIELDS
SecondaryBus	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  SecondaryBus;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
SecondaryBus	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  SecondaryBus;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
SecondaryCache	.\SpinAPI\src\ddk_headers\winddk.h	/^  SecondaryCache,$/;"	e	enum:_CONFIGURATION_TYPE
SecondaryDcache	.\SpinAPI\src\ddk_headers\winddk.h	/^  SecondaryDcache,$/;"	e	enum:_CONFIGURATION_TYPE
SecondaryIcache	.\SpinAPI\src\ddk_headers\winddk.h	/^  SecondaryIcache,$/;"	e	enum:_CONFIGURATION_TYPE
SecondaryLatency	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  SecondaryLatency;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
SecondaryLatency	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  SecondaryLatency;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
SecondaryStatus	.\SpinAPI\src\ddk_headers\winddk.h	/^        USHORT  SecondaryStatus;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
SecondaryStatus	.\SpinAPI\src\ddk_headers\winddk.h	/^        USHORT  SecondaryStatus;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
SectionObjectPointer	.\SpinAPI\src\ddk_headers\winddk.h	/^  PSECTION_OBJECT_POINTERS  SectionObjectPointer;$/;"	m	struct:_FILE_OBJECT
SectorLengthCode	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  SectorLengthCode;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
SectorPerTrack	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  SectorPerTrack;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
SectorSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  SectorSize;$/;"	m	struct:_DEVICE_OBJECT
SectorsPerTrack	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  SectorsPerTrack;$/;"	m	struct:_CM_INT13_DRIVE_PARAMETER
SecurityContext	.\SpinAPI\src\ddk_headers\winddk.h	/^      PIO_SECURITY_CONTEXT  SecurityContext;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon51
SecurityDescriptor	.\SpinAPI\src\ddk_headers\winddk.h	/^      PSECURITY_DESCRIPTOR  SecurityDescriptor;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon61
SecurityDescriptor	.\SpinAPI\src\ddk_headers\winddk.h	/^  PSECURITY_DESCRIPTOR  SecurityDescriptor;$/;"	m	struct:_ACCESS_STATE
SecurityDescriptor	.\SpinAPI\src\ddk_headers\winddk.h	/^  PSECURITY_DESCRIPTOR  SecurityDescriptor;$/;"	m	struct:_DEVICE_OBJECT
SecurityEvaluated	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  SecurityEvaluated;$/;"	m	struct:_ACCESS_STATE
SecurityInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^      SECURITY_INFORMATION  SecurityInformation;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon60
SecurityInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^      SECURITY_INFORMATION  SecurityInformation;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon61
SecurityQos	.\SpinAPI\src\ddk_headers\winddk.h	/^  PSECURITY_QUALITY_OF_SERVICE  SecurityQos;$/;"	m	struct:_IO_SECURITY_CONTEXT
SegmentList	.\SpinAPI\src\ddk_headers\winnt4.h	/^  SINGLE_LIST_ENTRY  SegmentList;$/;"	m	struct:_ZONE_HEADER
SegmentList	.\SpinAPI\src\ddk_headers\winnt4.h	/^  SINGLE_LIST_ENTRY  SegmentList;$/;"	m	struct:_ZONE_SEGMENT_HEADER
Selections	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Selections[26];$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
Self	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _KPCR  *Self;          \/* 1C *\/$/;"	m	struct:_KPCR	typeref:struct:_KPCR::_KPCR
Self	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _NT_TIB *Self;         \/* 18 *\/$/;"	m	struct:_KPCR_TIB	typeref:struct:_KPCR_TIB::_NT_TIB
SelfPowerConsumedD0	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  SelfPowerConsumedD0[3];$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
SelfPowered	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR SelfPowered;			\/\/ 0 = bus powered, 1 = self powered$/;"	m	struct:ft_eeprom_header
SelfPowered	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD SelfPowered;			\/\/ 0 = bus powered, 1 = self powered$/;"	m	struct:ft_program_data
SequenceD1	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SequenceD1;$/;"	m	struct:_POWER_SEQUENCE
SequenceD2	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SequenceD2;$/;"	m	struct:_POWER_SEQUENCE
SequenceD3	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SequenceD3;$/;"	m	struct:_POWER_SEQUENCE
SequenceNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^	ULONG  SequenceNumber; $/;"	m	struct:_IO_ERROR_LOG_PACKET
SerNumEnable	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR SerNumEnable;			\/\/ non-zero if serial number to be used$/;"	m	struct:ft_eeprom_header
SerNumEnable	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR SerNumEnable;			\/\/ non-zero if serial number to be used$/;"	m	struct:ft_program_data
SerNumEnable5	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR SerNumEnable5;		\/\/ non-zero if serial number to be used$/;"	m	struct:ft_program_data
SerNumEnable7	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR SerNumEnable7;		\/\/ non-zero if serial number to be used$/;"	m	struct:ft_program_data
SerNumEnable8	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR SerNumEnable8;		\/\/ non-zero if serial number to be used$/;"	m	struct:ft_program_data
SerNumEnableH	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR SerNumEnableH;		\/\/ non-zero if serial number to be used$/;"	m	struct:ft_program_data
SerNumEnableR	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR SerNumEnableR;		\/\/ non-zero if serial number to be used$/;"	m	struct:ft_program_data
SerialController	.\SpinAPI\src\ddk_headers\winddk.h	/^  SerialController,$/;"	e	enum:_CONFIGURATION_TYPE
SerialCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SerialCount;$/;"	m	struct:_CONFIGURATION_INFORMATION
SerialNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SerialNumber;$/;"	m	struct:_VPB
SerialNumber	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char *SerialNumber;			\/\/ "FT000001" if fixed, or NULL$/;"	m	struct:ft_program_data
SerialNumber	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char SerialNumber[16];$/;"	m	struct:_ft_device_list_info_node
ServiceCounterTable	.\SpinAPI\src\ddk_headers\winddk.h	/^	PULONG  ServiceCounterTable;$/;"	m	struct:_SSDT_ENTRY
ServiceKeyName	.\SpinAPI\src\ddk_headers\winddk.h	/^  UNICODE_STRING  ServiceKeyName;$/;"	m	struct:_DRIVER_EXTENSION
SetBusData	.\SpinAPI\src\ddk_headers\winddk.h	/^  PGET_SET_DEVICE_DATA  SetBusData;$/;"	m	struct:_BUS_INTERFACE_STANDARD
SetFile	.\SpinAPI\src\ddk_headers\winddk.h	/^    } SetFile;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon55
SetLock	.\SpinAPI\src\ddk_headers\winddk.h	/^    } SetLock;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon70
SetMember	.\SpinAPI\src\ddk_headers\winddk.h	/^  KAFFINITY  SetMember;         \/* 48 *\/$/;"	m	struct:_KPCR
SetName	.\SpinAPI\interpreter\src\gui.cpp	/^void SetName()$/;"	f
SetSecurity	.\SpinAPI\src\ddk_headers\winddk.h	/^    } SetSecurity;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon61
SetSecurityDescriptor	.\SpinAPI\src\ddk_headers\winddk.h	/^  SetSecurityDescriptor,$/;"	e	enum:_SECURITY_OPERATION_CODE
SetupPacket	.\SpinAPI\src\cyioctl.h	/^        SETUP_PACKET SetupPacket;$/;"	m	union:_SINGLE_TRANSFER::__anon15
SgiInternalConfiguration	.\SpinAPI\src\ddk_headers\win2k.h	/^  SgiInternalConfiguration,$/;"	e	enum:_BUS_DATA_TYPE
ShareAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^      USHORT  ShareAccess;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon51
ShareDisposition	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  ShareDisposition;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR
ShareDisposition	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR ShareDisposition;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR
Shared	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Shared : 1;$/;"	m	struct:_EISA_IRQ_DESCRIPTOR
Shared	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Shared : 1;$/;"	m	struct:_EISA_MEMORY_TYPE
Shared	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Shared : 1;$/;"	m	struct:_EISA_PORT_DESCRIPTOR
Shared	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR Shared : 1;$/;"	m	struct:_DMA_CONFIGURATION_BYTE0
SharedCacheMap	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  SharedCacheMap;$/;"	m	struct:_SECTION_OBJECT_POINTERS
SharedDelete	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  SharedDelete;$/;"	m	struct:_FILE_OBJECT
SharedDelete	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SharedDelete;$/;"	m	struct:_SHARE_ACCESS
SharedRead	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  SharedRead;$/;"	m	struct:_FILE_OBJECT
SharedRead	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SharedRead;$/;"	m	struct:_SHARE_ACCESS
SharedUserData	.\SpinAPI\src\ddk_headers\winddk.h	3782;"	d
SharedWaiters	.\SpinAPI\src\ddk_headers\winddk.h	/^  PKSEMAPHORE  SharedWaiters;$/;"	m	struct:_ERESOURCE
SharedWrite	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  SharedWrite;$/;"	m	struct:_FILE_OBJECT
SharedWrite	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SharedWrite;$/;"	m	struct:_SHARE_ACCESS
ShowReadMe	.\SpinAPI\interpreter\src\gui.cpp	/^void ShowReadMe()$/;"	f
ShutdownType	.\SpinAPI\src\ddk_headers\winddk.h	/^      POWER_ACTION POINTER_ALIGNMENT  ShutdownType;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon76
SignalState	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONG  SignalState;$/;"	m	struct:_DISPATCHER_HEADER
Signature	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  Signature;$/;"	m	struct:_DISK_SIGNATURE::__anon87::__anon88
Signature	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONG  Signature;$/;"	m	struct:_IO_REMOVE_LOCK_DBG_BLOCK
Signature	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Signature;$/;"	m	struct:_CREATE_DISK_MBR
Signature	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Signature;$/;"	m	struct:_DRIVE_LAYOUT_INFORMATION_MBR
Signature1	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD Signature1;			\/\/ Header - must be 0x00000000 $/;"	m	struct:ft_program_data
Signature2	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD Signature2;			\/\/ Header - must be 0xffffffff$/;"	m	struct:ft_program_data
SilentInstall	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SilentInstall : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
SingleBusRelations	.\SpinAPI\src\ddk_headers\winddk.h	/^  SingleBusRelations$/;"	e	enum:_DEVICE_RELATION_TYPE
SingleUserTS	.\SpinAPI\src\ddk_headers\winddk.h	/^  SingleUserTS,$/;"	e	enum:_SUITE_TYPE
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^      USHORT  Size;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon66
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  CHAR  Size[8];$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Size;$/;"	m	struct:_CONTROLLER_OBJECT
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Size;$/;"	m	struct:_DRIVER_OBJECT
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Size;$/;"	m	struct:_FILE_OBJECT
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Size;$/;"	m	struct:_KAPC
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Size;$/;"	m	struct:_KDEVICE_QUEUE
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Size;$/;"	m	struct:_MDL
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Size;$/;"	m	struct:_VPB
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Size;$/;"	m	struct:_DISPATCHER_HEADER
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Size;$/;"	m	struct:_DMA_OPERATIONS
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size; $/;"	m	struct:_PLUGPLAY_NOTIFICATION_HEADER
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size;$/;"	m	struct:_BUS_INTERFACE_STANDARD
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size;$/;"	m	struct:_DEVICE_CAPABILITIES
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size;$/;"	m	struct:_DEVICE_INTERFACE_CHANGE_NOTIFICATION
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size;$/;"	m	struct:_DEVICE_OBJECT
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size;$/;"	m	struct:_DMA_ADAPTER
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size;$/;"	m	struct:_HWPROFILE_CHANGE_NOTIFICATION
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size;$/;"	m	struct:_INTERFACE
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size;$/;"	m	struct:_IRP
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size;$/;"	m	struct:_TARGET_DEVICE_CUSTOM_NOTIFICATION
Size	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Size;$/;"	m	struct:_TARGET_DEVICE_REMOVAL_NOTIFICATION
SizeOfBitMap	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SizeOfBitMap;$/;"	m	struct:_RTL_BITMAP
SizeOfFastIoDispatch	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SizeOfFastIoDispatch;$/;"	m	struct:_FAST_IO_DISPATCH
SlotNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SlotNumber;$/;"	m	struct:_IO_RESOURCE_REQUIREMENTS_LIST
SmallBusiness	.\SpinAPI\src\ddk_headers\winddk.h	/^  SmallBusiness,$/;"	e	enum:_SUITE_TYPE
SmallBusinessRestricted	.\SpinAPI\src\ddk_headers\winddk.h	/^  SmallBusinessRestricted,$/;"	e	enum:_SUITE_TYPE
SocketRegistersBaseAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^        ULONG  SocketRegistersBaseAddress;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
SortKey	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SortKey;$/;"	m	struct:_KDEVICE_QUEUE_ENTRY
Spare0	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Spare0;$/;"	m	struct:_KAPC
Spare1	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Spare1;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR
Spare1	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Spare1;$/;"	m	struct:_CONTROLLER_OBJECT
Spare1	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Spare1;$/;"	m	struct:_KFLOATING_SAVE
Spare1	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Spare1;$/;"	m	struct:_DEVICE_OBJECT
Spare2	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  Spare2;$/;"	m	struct:_CONTROLLER_OBJECT
Spare2	.\SpinAPI\src\ddk_headers\winddk.h	/^  Spare2,$/;"	e	enum:_KWAIT_REASON
Spare2	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Spare2;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR
Spare3	.\SpinAPI\src\ddk_headers\winddk.h	/^  Spare3,$/;"	e	enum:_KWAIT_REASON
Spare4	.\SpinAPI\src\ddk_headers\winddk.h	/^  Spare4,$/;"	e	enum:_KWAIT_REASON
Spare5	.\SpinAPI\src\ddk_headers\winddk.h	/^  Spare5,$/;"	e	enum:_KWAIT_REASON
Spare6	.\SpinAPI\src\ddk_headers\winddk.h	/^  Spare6,$/;"	e	enum:_KWAIT_REASON
SpareUnused	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  SpareUnused;           \/* 50 *\/$/;"	m	struct:_KPCR
Spin	.\SpinAPI\src\ddk_headers\winddk.h	/^  KSPIN_LOCK  Spin;$/;"	m	struct:_IO_REMOVE_LOCK_DBG_BLOCK
SpinLock	.\SpinAPI\src\ddk_headers\winddk.h	/^  KSPIN_LOCK  SpinLock;$/;"	m	struct:_ERESOURCE
Srb	.\SpinAPI\src\ddk_headers\winddk.h	/^      struct _SCSI_REQUEST_BLOCK  *Srb;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon64	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon64::_SCSI_REQUEST_BLOCK
StackBase	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  StackBase;             \/* 04 *\/$/;"	m	struct:_KPCR_TIB
StackCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  CHAR  StackCount;$/;"	m	struct:_IRP
StackLimit	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  StackLimit;            \/* 08 *\/$/;"	m	struct:_KPCR_TIB
StackSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  CCHAR  StackSize;$/;"	m	struct:_DEVICE_OBJECT
StallScaleFactor	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  StallScaleFactor;      \/* 4C *\/$/;"	m	struct:_KPCR
Stamp	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Stamp;$/;"	m	struct:_RANGE_LIST_ITERATOR
Stamp	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Stamp;$/;"	m	struct:_RTL_RANGE_LIST
Start	.\SpinAPI\src\ddk_headers\winddk.h	/^      PHYSICAL_ADDRESS Start;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon29
Start	.\SpinAPI\src\ddk_headers\winddk.h	/^      PHYSICAL_ADDRESS Start;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon30
Start	.\SpinAPI\src\ddk_headers\winddk.h	/^      PHYSICAL_ADDRESS Start;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon32
Start	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Start;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon35
Start	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONGLONG  Start;$/;"	m	struct:_RTL_RANGE
StartDevice	.\SpinAPI\src\ddk_headers\winddk.h	/^    } StartDevice;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon77
StartVa	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  StartVa;$/;"	m	struct:_MDL
StartingIndex	.\SpinAPI\src\ddk_headers\winddk.h	/^    ULONG  StartingIndex;$/;"	m	struct:_RTL_BITMAP_RUN
StartingUsableOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  StartingUsableOffset;$/;"	m	struct:_DRIVE_LAYOUT_INFORMATION_GPT
State	.\SpinAPI\src\ddk_headers\winddk.h	/^      POWER_STATE POINTER_ALIGNMENT  State;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon76
State	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  State;$/;"	m	struct:_KBUGCHECK_CALLBACK_RECORD
Status	.\SpinAPI\src\cyioctl.h	/^    ULONG Status;$/;"	m	struct:_ISO_PACKET_INFO
Status	.\SpinAPI\src\ddk_headers\winddk.h	/^    NTSTATUS  Status;$/;"	m	union:_IO_STATUS_BLOCK::__anon17
Status	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Status;$/;"	m	struct:_PCI_COMMON_CONFIG
StatusWord	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  StatusWord;$/;"	m	struct:_KFLOATING_SAVE
StepRateHeadUnloadTime	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  StepRateHeadUnloadTime;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
StopBits	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		BYTE StopBits;				\/* FT_STOP_BITS_1 or FT_STOP_BITS_2		*\/$/;"	m	struct:_FTDCB
StringOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^	USHORT  StringOffset; $/;"	m	struct:_IO_ERROR_LOG_PACKET
SubClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  SubClass;$/;"	m	struct:_PCI_COMMON_CONFIG
SubKeys	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SubKeys;$/;"	m	struct:_KEY_FULL_INFORMATION
SubSystemID	.\SpinAPI\src\ddk_headers\winddk.h	/^      USHORT  SubSystemID;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
SubSystemTib	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  SubSystemTib;          \/* 0C *\/$/;"	m	struct:_KPCR_TIB
SubVendorID	.\SpinAPI\src\ddk_headers\winddk.h	/^      USHORT  SubVendorID;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
SubjectSecurityContext	.\SpinAPI\src\ddk_headers\winddk.h	/^  SECURITY_SUBJECT_CONTEXT  SubjectSecurityContext;$/;"	m	struct:_ACCESS_STATE
SubordinateBus	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  SubordinateBus;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
SubordinateBus	.\SpinAPI\src\ddk_headers\winddk.h	/^        UCHAR  SubordinateBus;$/;"	m	struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
Subtype	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Subtype;$/;"	m	struct:_CM_KEYBOARD_DEVICE_DATA
SurpriseRemovalOK	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SurpriseRemovalOK : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
Suspended	.\SpinAPI\src\ddk_headers\winddk.h	/^  Suspended,$/;"	e	enum:_KWAIT_REASON
SwigMethods	.\ppg_wrap.c	/^static PyMethodDef SwigMethods[] = {$/;"	v	file:
SwigMethods	.\swig\Hahn_echo\.c	/^static PyMethodDef SwigMethods[] = {$/;"	v	file:
SwigMethods	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static PyMethodDef SwigMethods[] = {$/;"	v	file:
SwigMethods	.\swig\example\example_wrap.c	/^static PyMethodDef SwigMethods[] = {$/;"	v	file:
SwigMethods	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static PyMethodDef SwigMethods[] = {$/;"	v	file:
SwigMethods	.\swig\ppg_lang\ppg_lang_wrap.c	/^static PyMethodDef SwigMethods[] = {$/;"	v	file:
SwigMethods	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static PyMethodDef SwigMethods[] = {$/;"	v	file:
SwigMethods	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static PyMethodDef SwigMethods[] = {$/;"	v	file:
SwigPyBuiltin_AddPublicSymbol	.\ppg_wrap.c	/^SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {$/;"	f
SwigPyBuiltin_AddPublicSymbol	.\swig\Hahn_echo\.c	/^SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {$/;"	f
SwigPyBuiltin_AddPublicSymbol	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {$/;"	f
SwigPyBuiltin_AddPublicSymbol	.\swig\example\example_wrap.c	/^SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {$/;"	f
SwigPyBuiltin_AddPublicSymbol	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {$/;"	f
SwigPyBuiltin_AddPublicSymbol	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {$/;"	f
SwigPyBuiltin_AddPublicSymbol	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {$/;"	f
SwigPyBuiltin_AddPublicSymbol	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {$/;"	f
SwigPyClientData	.\ppg_wrap.c	/^} SwigPyClientData;$/;"	t	typeref:struct:__anon6	file:
SwigPyClientData	.\swig\Hahn_echo\.c	/^} SwigPyClientData;$/;"	t	typeref:struct:__anon104	file:
SwigPyClientData	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^} SwigPyClientData;$/;"	t	typeref:struct:__anon108	file:
SwigPyClientData	.\swig\example\example_wrap.c	/^} SwigPyClientData;$/;"	t	typeref:struct:__anon96	file:
SwigPyClientData	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^} SwigPyClientData;$/;"	t	typeref:struct:__anon100	file:
SwigPyClientData	.\swig\ppg_lang\ppg_lang_wrap.c	/^} SwigPyClientData;$/;"	t	typeref:struct:__anon112	file:
SwigPyClientData	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^} SwigPyClientData;$/;"	t	typeref:struct:__anon116	file:
SwigPyClientData	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^} SwigPyClientData;$/;"	t	typeref:struct:__anon120	file:
SwigPyClientData_Del	.\ppg_wrap.c	/^SwigPyClientData_Del(SwigPyClientData *data) {$/;"	f
SwigPyClientData_Del	.\swig\Hahn_echo\.c	/^SwigPyClientData_Del(SwigPyClientData *data) {$/;"	f
SwigPyClientData_Del	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyClientData_Del(SwigPyClientData *data) {$/;"	f
SwigPyClientData_Del	.\swig\example\example_wrap.c	/^SwigPyClientData_Del(SwigPyClientData *data) {$/;"	f
SwigPyClientData_Del	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyClientData_Del(SwigPyClientData *data) {$/;"	f
SwigPyClientData_Del	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyClientData_Del(SwigPyClientData *data) {$/;"	f
SwigPyClientData_Del	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyClientData_Del(SwigPyClientData *data) {$/;"	f
SwigPyClientData_Del	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyClientData_Del(SwigPyClientData *data) {$/;"	f
SwigPyClientData_New	.\ppg_wrap.c	/^SwigPyClientData_New(PyObject* obj)$/;"	f
SwigPyClientData_New	.\swig\Hahn_echo\.c	/^SwigPyClientData_New(PyObject* obj)$/;"	f
SwigPyClientData_New	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyClientData_New(PyObject* obj)$/;"	f
SwigPyClientData_New	.\swig\example\example_wrap.c	/^SwigPyClientData_New(PyObject* obj)$/;"	f
SwigPyClientData_New	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyClientData_New(PyObject* obj)$/;"	f
SwigPyClientData_New	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyClientData_New(PyObject* obj)$/;"	f
SwigPyClientData_New	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyClientData_New(PyObject* obj)$/;"	f
SwigPyClientData_New	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyClientData_New(PyObject* obj)$/;"	f
SwigPyObject	.\ppg_wrap.c	/^} SwigPyObject;$/;"	t	typeref:struct:__anon7	file:
SwigPyObject	.\swig\Hahn_echo\.c	/^} SwigPyObject;$/;"	t	typeref:struct:__anon105	file:
SwigPyObject	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^} SwigPyObject;$/;"	t	typeref:struct:__anon109	file:
SwigPyObject	.\swig\example\example_wrap.c	/^} SwigPyObject;$/;"	t	typeref:struct:__anon97	file:
SwigPyObject	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^} SwigPyObject;$/;"	t	typeref:struct:__anon101	file:
SwigPyObject	.\swig\ppg_lang\ppg_lang_wrap.c	/^} SwigPyObject;$/;"	t	typeref:struct:__anon113	file:
SwigPyObject	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^} SwigPyObject;$/;"	t	typeref:struct:__anon117	file:
SwigPyObject	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^} SwigPyObject;$/;"	t	typeref:struct:__anon121	file:
SwigPyObject_Check	.\ppg_wrap.c	/^SwigPyObject_Check(PyObject *op) {$/;"	f
SwigPyObject_Check	.\swig\Hahn_echo\.c	/^SwigPyObject_Check(PyObject *op) {$/;"	f
SwigPyObject_Check	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_Check(PyObject *op) {$/;"	f
SwigPyObject_Check	.\swig\example\example_wrap.c	/^SwigPyObject_Check(PyObject *op) {$/;"	f
SwigPyObject_Check	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_Check(PyObject *op) {$/;"	f
SwigPyObject_Check	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_Check(PyObject *op) {$/;"	f
SwigPyObject_Check	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_Check(PyObject *op) {$/;"	f
SwigPyObject_Check	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_Check(PyObject *op) {$/;"	f
SwigPyObject_GetDesc	.\ppg_wrap.c	/^SwigPyObject_GetDesc(PyObject *self)$/;"	f
SwigPyObject_GetDesc	.\swig\Hahn_echo\.c	/^SwigPyObject_GetDesc(PyObject *self)$/;"	f
SwigPyObject_GetDesc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_GetDesc(PyObject *self)$/;"	f
SwigPyObject_GetDesc	.\swig\example\example_wrap.c	/^SwigPyObject_GetDesc(PyObject *self)$/;"	f
SwigPyObject_GetDesc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_GetDesc(PyObject *self)$/;"	f
SwigPyObject_GetDesc	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_GetDesc(PyObject *self)$/;"	f
SwigPyObject_GetDesc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_GetDesc(PyObject *self)$/;"	f
SwigPyObject_GetDesc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_GetDesc(PyObject *self)$/;"	f
SwigPyObject_New	.\ppg_wrap.c	/^SwigPyObject_New(void *ptr, swig_type_info *ty, int own)$/;"	f
SwigPyObject_New	.\swig\Hahn_echo\.c	/^SwigPyObject_New(void *ptr, swig_type_info *ty, int own)$/;"	f
SwigPyObject_New	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_New(void *ptr, swig_type_info *ty, int own)$/;"	f
SwigPyObject_New	.\swig\example\example_wrap.c	/^SwigPyObject_New(void *ptr, swig_type_info *ty, int own)$/;"	f
SwigPyObject_New	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_New(void *ptr, swig_type_info *ty, int own)$/;"	f
SwigPyObject_New	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_New(void *ptr, swig_type_info *ty, int own)$/;"	f
SwigPyObject_New	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_New(void *ptr, swig_type_info *ty, int own)$/;"	f
SwigPyObject_New	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_New(void *ptr, swig_type_info *ty, int own)$/;"	f
SwigPyObject_TypeOnce	.\ppg_wrap.c	/^SwigPyObject_TypeOnce(void) {$/;"	f
SwigPyObject_TypeOnce	.\swig\Hahn_echo\.c	/^SwigPyObject_TypeOnce(void) {$/;"	f
SwigPyObject_TypeOnce	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_TypeOnce(void) {$/;"	f
SwigPyObject_TypeOnce	.\swig\example\example_wrap.c	/^SwigPyObject_TypeOnce(void) {$/;"	f
SwigPyObject_TypeOnce	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_TypeOnce(void) {$/;"	f
SwigPyObject_TypeOnce	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_TypeOnce(void) {$/;"	f
SwigPyObject_TypeOnce	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_TypeOnce(void) {$/;"	f
SwigPyObject_TypeOnce	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_TypeOnce(void) {$/;"	f
SwigPyObject_acquire	.\ppg_wrap.c	/^SwigPyObject_acquire(PyObject *v)$/;"	f
SwigPyObject_acquire	.\swig\Hahn_echo\.c	/^SwigPyObject_acquire(PyObject *v)$/;"	f
SwigPyObject_acquire	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_acquire(PyObject *v)$/;"	f
SwigPyObject_acquire	.\swig\example\example_wrap.c	/^SwigPyObject_acquire(PyObject *v)$/;"	f
SwigPyObject_acquire	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_acquire(PyObject *v)$/;"	f
SwigPyObject_acquire	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_acquire(PyObject *v)$/;"	f
SwigPyObject_acquire	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_acquire(PyObject *v)$/;"	f
SwigPyObject_acquire	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_acquire(PyObject *v)$/;"	f
SwigPyObject_append	.\ppg_wrap.c	/^SwigPyObject_append(PyObject* v, PyObject* next)$/;"	f
SwigPyObject_append	.\swig\Hahn_echo\.c	/^SwigPyObject_append(PyObject* v, PyObject* next)$/;"	f
SwigPyObject_append	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_append(PyObject* v, PyObject* next)$/;"	f
SwigPyObject_append	.\swig\example\example_wrap.c	/^SwigPyObject_append(PyObject* v, PyObject* next)$/;"	f
SwigPyObject_append	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_append(PyObject* v, PyObject* next)$/;"	f
SwigPyObject_append	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_append(PyObject* v, PyObject* next)$/;"	f
SwigPyObject_append	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_append(PyObject* v, PyObject* next)$/;"	f
SwigPyObject_append	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_append(PyObject* v, PyObject* next)$/;"	f
SwigPyObject_compare	.\ppg_wrap.c	/^SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)$/;"	f
SwigPyObject_compare	.\swig\Hahn_echo\.c	/^SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)$/;"	f
SwigPyObject_compare	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)$/;"	f
SwigPyObject_compare	.\swig\example\example_wrap.c	/^SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)$/;"	f
SwigPyObject_compare	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)$/;"	f
SwigPyObject_compare	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)$/;"	f
SwigPyObject_compare	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)$/;"	f
SwigPyObject_compare	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)$/;"	f
SwigPyObject_dealloc	.\ppg_wrap.c	/^SwigPyObject_dealloc(PyObject *v)$/;"	f
SwigPyObject_dealloc	.\swig\Hahn_echo\.c	/^SwigPyObject_dealloc(PyObject *v)$/;"	f
SwigPyObject_dealloc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_dealloc(PyObject *v)$/;"	f
SwigPyObject_dealloc	.\swig\example\example_wrap.c	/^SwigPyObject_dealloc(PyObject *v)$/;"	f
SwigPyObject_dealloc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_dealloc(PyObject *v)$/;"	f
SwigPyObject_dealloc	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_dealloc(PyObject *v)$/;"	f
SwigPyObject_dealloc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_dealloc(PyObject *v)$/;"	f
SwigPyObject_dealloc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_dealloc(PyObject *v)$/;"	f
SwigPyObject_disown	.\ppg_wrap.c	/^SwigPyObject_disown(PyObject *v)$/;"	f
SwigPyObject_disown	.\swig\Hahn_echo\.c	/^SwigPyObject_disown(PyObject *v)$/;"	f
SwigPyObject_disown	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_disown(PyObject *v)$/;"	f
SwigPyObject_disown	.\swig\example\example_wrap.c	/^SwigPyObject_disown(PyObject *v)$/;"	f
SwigPyObject_disown	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_disown(PyObject *v)$/;"	f
SwigPyObject_disown	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_disown(PyObject *v)$/;"	f
SwigPyObject_disown	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_disown(PyObject *v)$/;"	f
SwigPyObject_disown	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_disown(PyObject *v)$/;"	f
SwigPyObject_format	.\ppg_wrap.c	/^SwigPyObject_format(const char* fmt, SwigPyObject *v)$/;"	f
SwigPyObject_format	.\swig\Hahn_echo\.c	/^SwigPyObject_format(const char* fmt, SwigPyObject *v)$/;"	f
SwigPyObject_format	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_format(const char* fmt, SwigPyObject *v)$/;"	f
SwigPyObject_format	.\swig\example\example_wrap.c	/^SwigPyObject_format(const char* fmt, SwigPyObject *v)$/;"	f
SwigPyObject_format	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_format(const char* fmt, SwigPyObject *v)$/;"	f
SwigPyObject_format	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_format(const char* fmt, SwigPyObject *v)$/;"	f
SwigPyObject_format	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_format(const char* fmt, SwigPyObject *v)$/;"	f
SwigPyObject_format	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_format(const char* fmt, SwigPyObject *v)$/;"	f
SwigPyObject_get___dict__	.\ppg_wrap.c	/^SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))$/;"	f
SwigPyObject_get___dict__	.\swig\Hahn_echo\.c	/^SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))$/;"	f
SwigPyObject_get___dict__	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))$/;"	f
SwigPyObject_get___dict__	.\swig\example\example_wrap.c	/^SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))$/;"	f
SwigPyObject_get___dict__	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))$/;"	f
SwigPyObject_get___dict__	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))$/;"	f
SwigPyObject_get___dict__	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))$/;"	f
SwigPyObject_get___dict__	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))$/;"	f
SwigPyObject_getattr	.\ppg_wrap.c	/^SwigPyObject_getattr(SwigPyObject *sobj,char *name)$/;"	f
SwigPyObject_getattr	.\swig\Hahn_echo\.c	/^SwigPyObject_getattr(SwigPyObject *sobj,char *name)$/;"	f
SwigPyObject_getattr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_getattr(SwigPyObject *sobj,char *name)$/;"	f
SwigPyObject_getattr	.\swig\example\example_wrap.c	/^SwigPyObject_getattr(SwigPyObject *sobj,char *name)$/;"	f
SwigPyObject_getattr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_getattr(SwigPyObject *sobj,char *name)$/;"	f
SwigPyObject_getattr	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_getattr(SwigPyObject *sobj,char *name)$/;"	f
SwigPyObject_getattr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_getattr(SwigPyObject *sobj,char *name)$/;"	f
SwigPyObject_getattr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_getattr(SwigPyObject *sobj,char *name)$/;"	f
SwigPyObject_hex	.\ppg_wrap.c	/^SwigPyObject_hex(SwigPyObject *v)$/;"	f
SwigPyObject_hex	.\swig\Hahn_echo\.c	/^SwigPyObject_hex(SwigPyObject *v)$/;"	f
SwigPyObject_hex	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_hex(SwigPyObject *v)$/;"	f
SwigPyObject_hex	.\swig\example\example_wrap.c	/^SwigPyObject_hex(SwigPyObject *v)$/;"	f
SwigPyObject_hex	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_hex(SwigPyObject *v)$/;"	f
SwigPyObject_hex	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_hex(SwigPyObject *v)$/;"	f
SwigPyObject_hex	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_hex(SwigPyObject *v)$/;"	f
SwigPyObject_hex	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_hex(SwigPyObject *v)$/;"	f
SwigPyObject_long	.\ppg_wrap.c	/^SwigPyObject_long(SwigPyObject *v)$/;"	f
SwigPyObject_long	.\swig\Hahn_echo\.c	/^SwigPyObject_long(SwigPyObject *v)$/;"	f
SwigPyObject_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_long(SwigPyObject *v)$/;"	f
SwigPyObject_long	.\swig\example\example_wrap.c	/^SwigPyObject_long(SwigPyObject *v)$/;"	f
SwigPyObject_long	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_long(SwigPyObject *v)$/;"	f
SwigPyObject_long	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_long(SwigPyObject *v)$/;"	f
SwigPyObject_long	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_long(SwigPyObject *v)$/;"	f
SwigPyObject_long	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_long(SwigPyObject *v)$/;"	f
SwigPyObject_next	.\ppg_wrap.c	/^SwigPyObject_next(PyObject* v)$/;"	f
SwigPyObject_next	.\swig\Hahn_echo\.c	/^SwigPyObject_next(PyObject* v)$/;"	f
SwigPyObject_next	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_next(PyObject* v)$/;"	f
SwigPyObject_next	.\swig\example\example_wrap.c	/^SwigPyObject_next(PyObject* v)$/;"	f
SwigPyObject_next	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_next(PyObject* v)$/;"	f
SwigPyObject_next	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_next(PyObject* v)$/;"	f
SwigPyObject_next	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_next(PyObject* v)$/;"	f
SwigPyObject_next	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_next(PyObject* v)$/;"	f
SwigPyObject_oct	.\ppg_wrap.c	/^SwigPyObject_oct(SwigPyObject *v)$/;"	f
SwigPyObject_oct	.\swig\Hahn_echo\.c	/^SwigPyObject_oct(SwigPyObject *v)$/;"	f
SwigPyObject_oct	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_oct(SwigPyObject *v)$/;"	f
SwigPyObject_oct	.\swig\example\example_wrap.c	/^SwigPyObject_oct(SwigPyObject *v)$/;"	f
SwigPyObject_oct	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_oct(SwigPyObject *v)$/;"	f
SwigPyObject_oct	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_oct(SwigPyObject *v)$/;"	f
SwigPyObject_oct	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_oct(SwigPyObject *v)$/;"	f
SwigPyObject_oct	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_oct(SwigPyObject *v)$/;"	f
SwigPyObject_own	.\ppg_wrap.c	/^SwigPyObject_own(PyObject *v, PyObject *args)$/;"	f
SwigPyObject_own	.\swig\Hahn_echo\.c	/^SwigPyObject_own(PyObject *v, PyObject *args)$/;"	f
SwigPyObject_own	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_own(PyObject *v, PyObject *args)$/;"	f
SwigPyObject_own	.\swig\example\example_wrap.c	/^SwigPyObject_own(PyObject *v, PyObject *args)$/;"	f
SwigPyObject_own	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_own(PyObject *v, PyObject *args)$/;"	f
SwigPyObject_own	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_own(PyObject *v, PyObject *args)$/;"	f
SwigPyObject_own	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_own(PyObject *v, PyObject *args)$/;"	f
SwigPyObject_own	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_own(PyObject *v, PyObject *args)$/;"	f
SwigPyObject_repr	.\ppg_wrap.c	/^SwigPyObject_repr(SwigPyObject *v)$/;"	f
SwigPyObject_repr	.\swig\Hahn_echo\.c	/^SwigPyObject_repr(SwigPyObject *v)$/;"	f
SwigPyObject_repr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_repr(SwigPyObject *v)$/;"	f
SwigPyObject_repr	.\swig\example\example_wrap.c	/^SwigPyObject_repr(SwigPyObject *v)$/;"	f
SwigPyObject_repr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_repr(SwigPyObject *v)$/;"	f
SwigPyObject_repr	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_repr(SwigPyObject *v)$/;"	f
SwigPyObject_repr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_repr(SwigPyObject *v)$/;"	f
SwigPyObject_repr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_repr(SwigPyObject *v)$/;"	f
SwigPyObject_richcompare	.\ppg_wrap.c	/^SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)$/;"	f
SwigPyObject_richcompare	.\swig\Hahn_echo\.c	/^SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)$/;"	f
SwigPyObject_richcompare	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)$/;"	f
SwigPyObject_richcompare	.\swig\example\example_wrap.c	/^SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)$/;"	f
SwigPyObject_richcompare	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)$/;"	f
SwigPyObject_richcompare	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)$/;"	f
SwigPyObject_richcompare	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)$/;"	f
SwigPyObject_richcompare	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)$/;"	f
SwigPyObject_stype	.\ppg_wrap.c	/^static swig_type_info *SwigPyObject_stype = 0;$/;"	v	file:
SwigPyObject_stype	.\swig\Hahn_echo\.c	/^static swig_type_info *SwigPyObject_stype = 0;$/;"	v	file:
SwigPyObject_stype	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info *SwigPyObject_stype = 0;$/;"	v	file:
SwigPyObject_stype	.\swig\example\example_wrap.c	/^static swig_type_info *SwigPyObject_stype = 0;$/;"	v	file:
SwigPyObject_stype	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static swig_type_info *SwigPyObject_stype = 0;$/;"	v	file:
SwigPyObject_stype	.\swig\ppg_lang\ppg_lang_wrap.c	/^static swig_type_info *SwigPyObject_stype = 0;$/;"	v	file:
SwigPyObject_stype	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static swig_type_info *SwigPyObject_stype = 0;$/;"	v	file:
SwigPyObject_stype	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static swig_type_info *SwigPyObject_stype = 0;$/;"	v	file:
SwigPyObject_type	.\ppg_wrap.c	/^SwigPyObject_type(void) {$/;"	f
SwigPyObject_type	.\swig\Hahn_echo\.c	/^SwigPyObject_type(void) {$/;"	f
SwigPyObject_type	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyObject_type(void) {$/;"	f
SwigPyObject_type	.\swig\example\example_wrap.c	/^SwigPyObject_type(void) {$/;"	f
SwigPyObject_type	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyObject_type(void) {$/;"	f
SwigPyObject_type	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyObject_type(void) {$/;"	f
SwigPyObject_type	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyObject_type(void) {$/;"	f
SwigPyObject_type	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyObject_type(void) {$/;"	f
SwigPyPacked	.\ppg_wrap.c	/^} SwigPyPacked;$/;"	t	typeref:struct:__anon8	file:
SwigPyPacked	.\swig\Hahn_echo\.c	/^} SwigPyPacked;$/;"	t	typeref:struct:__anon106	file:
SwigPyPacked	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^} SwigPyPacked;$/;"	t	typeref:struct:__anon110	file:
SwigPyPacked	.\swig\example\example_wrap.c	/^} SwigPyPacked;$/;"	t	typeref:struct:__anon98	file:
SwigPyPacked	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^} SwigPyPacked;$/;"	t	typeref:struct:__anon102	file:
SwigPyPacked	.\swig\ppg_lang\ppg_lang_wrap.c	/^} SwigPyPacked;$/;"	t	typeref:struct:__anon114	file:
SwigPyPacked	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^} SwigPyPacked;$/;"	t	typeref:struct:__anon118	file:
SwigPyPacked	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^} SwigPyPacked;$/;"	t	typeref:struct:__anon122	file:
SwigPyPacked_Check	.\ppg_wrap.c	/^SwigPyPacked_Check(PyObject *op) {$/;"	f
SwigPyPacked_Check	.\swig\Hahn_echo\.c	/^SwigPyPacked_Check(PyObject *op) {$/;"	f
SwigPyPacked_Check	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyPacked_Check(PyObject *op) {$/;"	f
SwigPyPacked_Check	.\swig\example\example_wrap.c	/^SwigPyPacked_Check(PyObject *op) {$/;"	f
SwigPyPacked_Check	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyPacked_Check(PyObject *op) {$/;"	f
SwigPyPacked_Check	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyPacked_Check(PyObject *op) {$/;"	f
SwigPyPacked_Check	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyPacked_Check(PyObject *op) {$/;"	f
SwigPyPacked_Check	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyPacked_Check(PyObject *op) {$/;"	f
SwigPyPacked_New	.\ppg_wrap.c	/^SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)$/;"	f
SwigPyPacked_New	.\swig\Hahn_echo\.c	/^SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)$/;"	f
SwigPyPacked_New	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)$/;"	f
SwigPyPacked_New	.\swig\example\example_wrap.c	/^SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)$/;"	f
SwigPyPacked_New	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)$/;"	f
SwigPyPacked_New	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)$/;"	f
SwigPyPacked_New	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)$/;"	f
SwigPyPacked_New	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)$/;"	f
SwigPyPacked_TypeOnce	.\ppg_wrap.c	/^SwigPyPacked_TypeOnce(void) {$/;"	f
SwigPyPacked_TypeOnce	.\swig\Hahn_echo\.c	/^SwigPyPacked_TypeOnce(void) {$/;"	f
SwigPyPacked_TypeOnce	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyPacked_TypeOnce(void) {$/;"	f
SwigPyPacked_TypeOnce	.\swig\example\example_wrap.c	/^SwigPyPacked_TypeOnce(void) {$/;"	f
SwigPyPacked_TypeOnce	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyPacked_TypeOnce(void) {$/;"	f
SwigPyPacked_TypeOnce	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyPacked_TypeOnce(void) {$/;"	f
SwigPyPacked_TypeOnce	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyPacked_TypeOnce(void) {$/;"	f
SwigPyPacked_TypeOnce	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyPacked_TypeOnce(void) {$/;"	f
SwigPyPacked_UnpackData	.\ppg_wrap.c	/^SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)$/;"	f
SwigPyPacked_UnpackData	.\swig\Hahn_echo\.c	/^SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)$/;"	f
SwigPyPacked_UnpackData	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)$/;"	f
SwigPyPacked_UnpackData	.\swig\example\example_wrap.c	/^SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)$/;"	f
SwigPyPacked_UnpackData	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)$/;"	f
SwigPyPacked_UnpackData	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)$/;"	f
SwigPyPacked_UnpackData	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)$/;"	f
SwigPyPacked_UnpackData	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)$/;"	f
SwigPyPacked_compare	.\ppg_wrap.c	/^SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)$/;"	f
SwigPyPacked_compare	.\swig\Hahn_echo\.c	/^SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)$/;"	f
SwigPyPacked_compare	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)$/;"	f
SwigPyPacked_compare	.\swig\example\example_wrap.c	/^SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)$/;"	f
SwigPyPacked_compare	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)$/;"	f
SwigPyPacked_compare	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)$/;"	f
SwigPyPacked_compare	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)$/;"	f
SwigPyPacked_compare	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)$/;"	f
SwigPyPacked_dealloc	.\ppg_wrap.c	/^SwigPyPacked_dealloc(PyObject *v)$/;"	f
SwigPyPacked_dealloc	.\swig\Hahn_echo\.c	/^SwigPyPacked_dealloc(PyObject *v)$/;"	f
SwigPyPacked_dealloc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyPacked_dealloc(PyObject *v)$/;"	f
SwigPyPacked_dealloc	.\swig\example\example_wrap.c	/^SwigPyPacked_dealloc(PyObject *v)$/;"	f
SwigPyPacked_dealloc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyPacked_dealloc(PyObject *v)$/;"	f
SwigPyPacked_dealloc	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyPacked_dealloc(PyObject *v)$/;"	f
SwigPyPacked_dealloc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyPacked_dealloc(PyObject *v)$/;"	f
SwigPyPacked_dealloc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyPacked_dealloc(PyObject *v)$/;"	f
SwigPyPacked_print	.\ppg_wrap.c	/^SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))$/;"	f
SwigPyPacked_print	.\swig\Hahn_echo\.c	/^SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))$/;"	f
SwigPyPacked_print	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))$/;"	f
SwigPyPacked_print	.\swig\example\example_wrap.c	/^SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))$/;"	f
SwigPyPacked_print	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))$/;"	f
SwigPyPacked_print	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))$/;"	f
SwigPyPacked_print	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))$/;"	f
SwigPyPacked_print	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))$/;"	f
SwigPyPacked_repr	.\ppg_wrap.c	/^SwigPyPacked_repr(SwigPyPacked *v)$/;"	f
SwigPyPacked_repr	.\swig\Hahn_echo\.c	/^SwigPyPacked_repr(SwigPyPacked *v)$/;"	f
SwigPyPacked_repr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyPacked_repr(SwigPyPacked *v)$/;"	f
SwigPyPacked_repr	.\swig\example\example_wrap.c	/^SwigPyPacked_repr(SwigPyPacked *v)$/;"	f
SwigPyPacked_repr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyPacked_repr(SwigPyPacked *v)$/;"	f
SwigPyPacked_repr	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyPacked_repr(SwigPyPacked *v)$/;"	f
SwigPyPacked_repr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyPacked_repr(SwigPyPacked *v)$/;"	f
SwigPyPacked_repr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyPacked_repr(SwigPyPacked *v)$/;"	f
SwigPyPacked_str	.\ppg_wrap.c	/^SwigPyPacked_str(SwigPyPacked *v)$/;"	f
SwigPyPacked_str	.\swig\Hahn_echo\.c	/^SwigPyPacked_str(SwigPyPacked *v)$/;"	f
SwigPyPacked_str	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyPacked_str(SwigPyPacked *v)$/;"	f
SwigPyPacked_str	.\swig\example\example_wrap.c	/^SwigPyPacked_str(SwigPyPacked *v)$/;"	f
SwigPyPacked_str	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyPacked_str(SwigPyPacked *v)$/;"	f
SwigPyPacked_str	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyPacked_str(SwigPyPacked *v)$/;"	f
SwigPyPacked_str	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyPacked_str(SwigPyPacked *v)$/;"	f
SwigPyPacked_str	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyPacked_str(SwigPyPacked *v)$/;"	f
SwigPyPacked_type	.\ppg_wrap.c	/^SwigPyPacked_type(void) {$/;"	f
SwigPyPacked_type	.\swig\Hahn_echo\.c	/^SwigPyPacked_type(void) {$/;"	f
SwigPyPacked_type	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^SwigPyPacked_type(void) {$/;"	f
SwigPyPacked_type	.\swig\example\example_wrap.c	/^SwigPyPacked_type(void) {$/;"	f
SwigPyPacked_type	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^SwigPyPacked_type(void) {$/;"	f
SwigPyPacked_type	.\swig\ppg_lang\ppg_lang_wrap.c	/^SwigPyPacked_type(void) {$/;"	f
SwigPyPacked_type	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^SwigPyPacked_type(void) {$/;"	f
SwigPyPacked_type	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^SwigPyPacked_type(void) {$/;"	f
Swig_var_My_variable_get	.\swig\example\example_wrap.c	/^SWIGINTERN PyObject *Swig_var_My_variable_get(void) {$/;"	f
Swig_var_My_variable_set	.\swig\example\example_wrap.c	/^SWIGINTERN int Swig_var_My_variable_set(PyObject *_val) {$/;"	f
SymbolicLinkName	.\SpinAPI\src\ddk_headers\winddk.h	/^  PUNICODE_STRING  SymbolicLinkName;$/;"	m	struct:_DEVICE_INTERFACE_CHANGE_NOTIFICATION
SynchronizationEvent	.\SpinAPI\src\ddk_headers\winddk.h	/^  SynchronizationEvent$/;"	e	enum:_EVENT_TYPE
SynchronizationTimer	.\SpinAPI\src\ddk_headers\winddk.h	/^  SynchronizationTimer$/;"	e	enum:_TIMER_TYPE
SystemArgument1	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  SystemArgument1;$/;"	m	struct:_KAPC
SystemArgument1	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  SystemArgument1;$/;"	m	struct:_KDPC
SystemArgument2	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  SystemArgument2;$/;"	m	struct:_KAPC
SystemArgument2	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  SystemArgument2;$/;"	m	struct:_KDPC
SystemBuffer	.\SpinAPI\src\ddk_headers\winddk.h	/^    PVOID  SystemBuffer;$/;"	m	union:_IRP::__anon18
SystemContext	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  SystemContext;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon76
SystemDeviceGuid	.\SpinAPI\src\ddk_headers\winddk.h	/^  GUID  SystemDeviceGuid;$/;"	m	struct:_BOOTDISK_INFORMATION_EX
SystemDeviceIsGpt	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  SystemDeviceIsGpt;$/;"	m	struct:_BOOTDISK_INFORMATION_EX
SystemDeviceSignature	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SystemDeviceSignature;$/;"	m	struct:_BOOTDISK_INFORMATION
SystemDeviceSignature	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  SystemDeviceSignature;$/;"	m	struct:_BOOTDISK_INFORMATION_EX
SystemMemory	.\SpinAPI\src\ddk_headers\winddk.h	/^  SystemMemory,$/;"	e	enum:_CONFIGURATION_TYPE
SystemModeImage	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  SystemModeImage      : 1;$/;"	m	struct:_IMAGE_INFO::__anon84::__anon85
SystemPartitionOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONGLONG  SystemPartitionOffset;$/;"	m	struct:_BOOTDISK_INFORMATION
SystemPartitionOffset	.\SpinAPI\src\ddk_headers\winddk.h	/^  LONGLONG  SystemPartitionOffset;$/;"	m	struct:_BOOTDISK_INFORMATION_EX
SystemPowerState	.\SpinAPI\src\ddk_headers\winddk.h	/^  SystemPowerState,$/;"	e	enum:_POWER_STATE_TYPE
SystemResourcesList	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  SystemResourcesList;$/;"	m	struct:_ERESOURCE
SystemState	.\SpinAPI\src\ddk_headers\winddk.h	/^  SYSTEM_POWER_STATE  SystemState;$/;"	m	union:_POWER_STATE
SystemWake	.\SpinAPI\src\ddk_headers\winddk.h	/^  SYSTEM_POWER_STATE  SystemWake;$/;"	m	struct:_DEVICE_CAPABILITIES
TAG	.\SpinAPI\src\ddk_headers\winddk.h	114;"	d
TARGET_DEVICE_CUSTOM_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} TARGET_DEVICE_CUSTOM_NOTIFICATION, *PTARGET_DEVICE_CUSTOM_NOTIFICATION;$/;"	t	typeref:struct:_TARGET_DEVICE_CUSTOM_NOTIFICATION
TARGET_DEVICE_REMOVAL_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^} TARGET_DEVICE_REMOVAL_NOTIFICATION, *PTARGET_DEVICE_REMOVAL_NOTIFICATION;$/;"	t	typeref:struct:_TARGET_DEVICE_REMOVAL_NOTIFICATION
TAU	.\Sleator_apps\Hahn_echo\Hahn_echo.bat	/^set TAU=20000$/;"	v
TAU1	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set TAU1=20000$/;"	v
TAU2	.\Sleator_apps\Stimulated_echo\Stimulated_echo.bat	/^set TAU2=80000$/;"	v
TAU_MIN	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.bat	/^set TAU_MIN=10000$/;"	v
TAU_MIN	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.bat	/^set TAU_MIN=10000$/;"	v
THREADINFOCLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^} THREADINFOCLASS;$/;"	t	typeref:enum:_THREADINFOCLASS
THREE_PERIOD	.\SpinAPI\include\pulseblaster.h	53;"	d
THREE_PERIOD	.\SpinAPI\src\pulseblaster.h	53;"	d
TIMER_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} TIMER_TYPE;$/;"	t	typeref:enum:_TIMER_TYPE
TIME_FIELDS	.\SpinAPI\src\ddk_headers\winddk.h	/^} TIME_FIELDS, *PTIME_FIELDS;$/;"	t	typeref:struct:_TIME_FIELDS
TRACEHANDLE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef HANDLE TRACEHANDLE;$/;"	t
TRACE_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^} TRACE_INFORMATION_CLASS;$/;"	t	typeref:enum:_TRACE_INFORMATION_CLASS
TRIGGER	.\SpinAPI\include\radioprocessor.h	461;"	d
TRIGGER	.\SpinAPI\src\radioprocessor.h	461;"	d
TSS	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _KTSS  *TSS;           \/* 40 *\/$/;"	m	struct:_KPCR	typeref:struct:_KPCR::_KTSS
TWO_PERIOD	.\SpinAPI\include\pulseblaster.h	52;"	d
TWO_PERIOD	.\SpinAPI\src\pulseblaster.h	52;"	d
TX_ANALOG_OFF	.\SpinAPI\include\radioprocessor.h	31;"	d
TX_ANALOG_OFF	.\SpinAPI\src\radioprocessor.h	31;"	d
TX_ANALOG_ON	.\SpinAPI\include\radioprocessor.h	30;"	d
TX_ANALOG_ON	.\SpinAPI\src\radioprocessor.h	30;"	d
TX_DISABLE	.\Sleator_apps\CPMG\cpmg.h	53;"	d
TX_DISABLE	.\Sleator_apps\Hahn_echo\Hahn_echo.h	61;"	d
TX_DISABLE	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	58;"	d
TX_DISABLE	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	61;"	d
TX_DISABLE	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	58;"	d
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	44;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	41;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	39;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	42;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	37;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	39;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	32;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	34;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_cont.c	37;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_excite_test.c	38;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	38;"	d	file:
TX_DISABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_phase_test.c	37;"	d	file:
TX_DISABLE	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	46;"	d
TX_DISABLE	.\SpinAPI\examples\RadioProcessor\awg.c	38;"	d	file:
TX_DISABLE	.\SpinAPI\examples\RadioProcessor\excite_test.c	38;"	d	file:
TX_DISABLE	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	49;"	d
TX_ENABLE	.\Sleator_apps\CPMG\cpmg.h	52;"	d
TX_ENABLE	.\Sleator_apps\Hahn_echo\Hahn_echo.h	60;"	d
TX_ENABLE	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	57;"	d
TX_ENABLE	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	60;"	d
TX_ENABLE	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	57;"	d
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	43;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	40;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	38;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	41;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	36;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	38;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	31;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	33;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_cont.c	36;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_excite_test.c	37;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	37;"	d	file:
TX_ENABLE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_phase_test.c	36;"	d	file:
TX_ENABLE	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	45;"	d
TX_ENABLE	.\SpinAPI\examples\RadioProcessor\awg.c	37;"	d	file:
TX_ENABLE	.\SpinAPI\examples\RadioProcessor\excite_test.c	37;"	d	file:
TX_ENABLE	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	48;"	d
TX_PHASE_REGS	.\SpinAPI\include\radioprocessor.h	13;"	d
TX_PHASE_REGS	.\SpinAPI\src\radioprocessor.h	13;"	d
TableSize	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  TableSize;$/;"	m	union:_OWNER_ENTRY::__anon47
Tail	.\SpinAPI\src\ddk_headers\winddk.h	/^  } Tail;$/;"	m	struct:_IRP	typeref:union:_IRP::__anon21
TapeController	.\SpinAPI\src\ddk_headers\winddk.h	/^  TapeController,$/;"	e	enum:_CONFIGURATION_TYPE
TapeCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  TapeCount;$/;"	m	struct:_CONFIGURATION_INFORMATION
TapePeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  TapePeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
TargetDeviceRelation	.\SpinAPI\src\ddk_headers\winddk.h	/^  TargetDeviceRelation,$/;"	e	enum:_DEVICE_RELATION_TYPE
TcAdapter	.\SpinAPI\src\ddk_headers\winddk.h	/^  TcAdapter,$/;"	e	enum:_CONFIGURATION_TYPE
TerminalPeripheral	.\SpinAPI\src\ddk_headers\winddk.h	/^  TerminalPeripheral,$/;"	e	enum:_CONFIGURATION_TYPE
TerminalServer	.\SpinAPI\src\ddk_headers\winddk.h	/^  TerminalServer,$/;"	e	enum:_SUITE_TYPE
Thread	.\SpinAPI\src\ddk_headers\winddk.h	/^      PETHREAD  Thread;$/;"	m	struct:_IRP::__anon21::__anon22
Thread	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _KTHREAD  *Thread;$/;"	m	struct:_KAPC	typeref:struct:_KAPC::_KTHREAD
Thread	.\SpinAPI\src\ddk_headers\winddk.h	/^  struct _KTHREAD * RESTRICTED_POINTER  Thread;$/;"	m	struct:_KWAIT_BLOCK	typeref:struct:_KWAIT_BLOCK::RESTRICTED_POINTER
ThreadAffinityMask	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadAffinityMask,$/;"	e	enum:_THREADINFOCLASS
ThreadAmILastThread	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadAmILastThread,$/;"	e	enum:_THREADINFOCLASS
ThreadBasePriority	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadBasePriority,$/;"	e	enum:_THREADINFOCLASS
ThreadBasicInformation	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadBasicInformation,$/;"	e	enum:_THREADINFOCLASS
ThreadBreakOnTermination	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadBreakOnTermination,$/;"	e	enum:_THREADINFOCLASS
ThreadDescriptorTableEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadDescriptorTableEntry,$/;"	e	enum:_THREADINFOCLASS
ThreadEnableAlignmentFaultFixup	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadEnableAlignmentFaultFixup,$/;"	e	enum:_THREADINFOCLASS
ThreadEventPair_Reusable	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadEventPair_Reusable,$/;"	e	enum:_THREADINFOCLASS
ThreadHideFromDebugger	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadHideFromDebugger,$/;"	e	enum:_THREADINFOCLASS
ThreadIdealProcessor	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadIdealProcessor,$/;"	e	enum:_THREADINFOCLASS
ThreadImpersonationToken	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadImpersonationToken,$/;"	e	enum:_THREADINFOCLASS
ThreadIsIoPending	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadIsIoPending,$/;"	e	enum:_THREADINFOCLASS
ThreadListEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  ThreadListEntry;$/;"	m	struct:_IRP
ThreadPerformanceCount	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadPerformanceCount,$/;"	e	enum:_THREADINFOCLASS
ThreadPriority	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadPriority,$/;"	e	enum:_THREADINFOCLASS
ThreadPriorityBoost	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadPriorityBoost,$/;"	e	enum:_THREADINFOCLASS
ThreadQuerySetWin32StartAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadQuerySetWin32StartAddress,$/;"	e	enum:_THREADINFOCLASS
ThreadSetTlsArrayAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadSetTlsArrayAddress,$/;"	e	enum:_THREADINFOCLASS
ThreadTimes	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadTimes,$/;"	e	enum:_THREADINFOCLASS
ThreadZeroTlsCell	.\SpinAPI\src\ddk_headers\winddk.h	/^  ThreadZeroTlsCell,$/;"	e	enum:_THREADINFOCLASS
Tib	.\SpinAPI\src\ddk_headers\winddk.h	/^  KPCR_TIB  Tib;                \/* 00 *\/$/;"	m	struct:_KPCR
Timer	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_TIMER  Timer;$/;"	m	struct:_DEVICE_OBJECT
TimerListEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  TimerListEntry;$/;"	m	struct:_KTIMER
Timing	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Timing : 2;$/;"	m	struct:_DMA_CONFIGURATION_BYTE1
TitleIndex	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  TitleIndex;$/;"	m	struct:_KEY_BASIC_INFORMATION
TitleIndex	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  TitleIndex;$/;"	m	struct:_KEY_FULL_INFORMATION
TitleIndex	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  TitleIndex;$/;"	m	struct:_KEY_NODE_INFORMATION
TitleIndex	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  TitleIndex;$/;"	m	struct:_KEY_VALUE_BASIC_INFORMATION
TitleIndex	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  TitleIndex;$/;"	m	struct:_KEY_VALUE_FULL_INFORMATION
TitleIndex	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  TitleIndex;$/;"	m	struct:_KEY_VALUE_PARTIAL_INFORMATION
Token	.\SpinAPI\interpreter\src\interpreter.cpp	/^} Token;$/;"	t	typeref:struct:tagToken	file:
TokenType	.\SpinAPI\interpreter\src\interpreter.cpp	/^	enum TokenType { Identifier = 0, Numeric, Variable, Colon, Comma, Equal, EndOfLine, EndOfFile };$/;"	g	struct:tagToken	file:
TotalSegmentSize	.\SpinAPI\src\ddk_headers\winnt4.h	/^  ULONG  TotalSegmentSize;$/;"	m	struct:_ZONE_HEADER
TraceEnableFlagsClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  TraceEnableFlagsClass,$/;"	e	enum:_TRACE_INFORMATION_CLASS
TraceEnableLevelClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  TraceEnableLevelClass,$/;"	e	enum:_TRACE_INFORMATION_CLASS
TraceHandleByNameClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  TraceHandleByNameClass$/;"	e	enum:_TRACE_INFORMATION_CLASS
TraceHandleClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  TraceHandleClass,$/;"	e	enum:_TRACE_INFORMATION_CLASS
TraceIdClass	.\SpinAPI\src\ddk_headers\winddk.h	/^  TraceIdClass,$/;"	e	enum:_TRACE_INFORMATION_CLASS
TransferSize	.\SpinAPI\src\cyioctl.h	/^    ULONG TransferSize;$/;"	m	struct:_SET_TRANSFER_SIZE_INFO
TransferSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  TransferSize : 2;$/;"	m	struct:_DMA_CONFIGURATION_BYTE1
TransitionTimeFromD1	.\SpinAPI\src\ddk_headers\usb100.h	/^	USHORT  TransitionTimeFromD1;$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
TransitionTimeFromD1	.\SpinAPI\src\ddk_headers\usb100.h	/^	USHORT  TransitionTimeFromD1;$/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
TransitionTimeFromD2	.\SpinAPI\src\ddk_headers\usb100.h	/^	USHORT  TransitionTimeFromD2;$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
TransitionTimeFromD2	.\SpinAPI\src\ddk_headers\usb100.h	/^	USHORT  TransitionTimeFromD2;$/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
TransitionTimeFromD3	.\SpinAPI\src\ddk_headers\usb100.h	/^	USHORT  TransitionTimeFromD3;$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
TransitionTimeFromD3	.\SpinAPI\src\ddk_headers\usb100.h	/^	USHORT  TransitionTimeFromD3;$/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
TranslateBusAddress	.\SpinAPI\src\ddk_headers\winddk.h	/^  PTRANSLATE_BUS_ADDRESS  TranslateBusAddress;$/;"	m	struct:_BUS_INTERFACE_STANDARD
TurboChannel	.\SpinAPI\src\ddk_headers\winddk.h	/^  TurboChannel,$/;"	e	enum:_INTERFACE_TYPE
Type	.\SpinAPI\src\cyioctl.h	/^    UCHAR   Type:2;$/;"	m	struct:_BM_REQ_TYPE
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^      DEVICE_RELATION_TYPE  Type;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon65
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^      DEVICE_USAGE_NOTIFICATION_TYPE POINTER_ALIGNMENT  Type;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon73
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^      POWER_STATE_TYPE POINTER_ALIGNMENT  Type;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon76
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Type;$/;"	m	struct:_CONTROLLER_OBJECT
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Type;$/;"	m	struct:_DEVICE_OBJECT
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Type;$/;"	m	struct:_DRIVER_OBJECT
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Type;$/;"	m	struct:_FILE_OBJECT
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Type;$/;"	m	struct:_IRP
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Type;$/;"	m	struct:_KAPC
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Type;$/;"	m	struct:_KDEVICE_QUEUE
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Type;$/;"	m	struct:_KDPC
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Type;$/;"	m	struct:_VPB
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Type : 2;$/;"	m	struct:_EISA_MEMORY_TYPE
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Type;$/;"	m	struct:_CM_KEYBOARD_DEVICE_DATA
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Type;$/;"	m	struct:_DISPATCHER_HEADER
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  Type;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR Type;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Type;$/;"	m	struct:_IO_CSQ
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Type;$/;"	m	struct:_IO_CSQ_IRP_CONTEXT
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Type;$/;"	m	struct:_KEY_VALUE_BASIC_INFORMATION
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Type;$/;"	m	struct:_KEY_VALUE_ENTRY
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Type;$/;"	m	struct:_KEY_VALUE_FULL_INFORMATION
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Type;$/;"	m	struct:_KEY_VALUE_PARTIAL_INFORMATION
Type	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Type;$/;"	m	struct:_KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
Type	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		ULONG Type;$/;"	m	struct:_ft_device_list_info_node
Type3InputBuffer	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVOID  Type3InputBuffer;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon59
TypeA	.\SpinAPI\src\ddk_headers\winddk.h	/^  TypeA,$/;"	e	enum:_DMA_SPEED
TypeB	.\SpinAPI\src\ddk_headers\winddk.h	/^  TypeB,$/;"	e	enum:_DMA_SPEED
TypeC	.\SpinAPI\src\ddk_headers\winddk.h	/^  TypeC,$/;"	e	enum:_DMA_SPEED
TypeF	.\SpinAPI\src\ddk_headers\winddk.h	/^  TypeF,$/;"	e	enum:_DMA_SPEED
TypeString	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  TypeString[80];$/;"	m	struct:_CM_EISA_FUNCTION_INFORMATION
UINT64	.\mrispinapi.h	126;"	d
UINumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  UINumber;$/;"	m	struct:_DEVICE_CAPABILITIES
ULLONG_MAX	.\swig\Hahn_echo\Hahn_echo_wrap.c	3096;"	d	file:
ULLONG_MAX	.\swig\example\example_wrap.c	3076;"	d	file:
ULLONG_MAX	.\swig\example\get_rand_array\get_rand_array_wrap.c	3512;"	d	file:
ULLONG_MAX	.\swig\ppg_lang\temp\ppg_temp_wrap.c	3081;"	d	file:
ULLONG_MAX	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	3081;"	d	file:
UNALLIGNED	.\SpinAPI\src\ddk_headers\winddk.h	59;"	d
UNSUCCESSFUL_WRITE	.\controls.h	33;"	d
USBVersion	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD USBVersion;			\/\/ BCD (0x0200 => USB2)$/;"	m	struct:ft_program_data
USBVersion5	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD USBVersion5;			\/\/ BCD (0x0200 => USB2)$/;"	m	struct:ft_program_data
USBVersionEnable	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR USBVersionEnable;		\/\/ non-zero if chip uses USBVersion$/;"	m	struct:ft_program_data
USBVersionEnable5	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR USBVersionEnable5;	\/\/ non-zero if chip uses USBVersion$/;"	m	struct:ft_program_data
USB_COMMON_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_COMMON_DESCRIPTOR, *PUSB_COMMON_DESCRIPTOR;$/;"	t	typeref:struct:_USB_COMMON_DESCRIPTOR
USB_CONFIGURATION_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_CONFIGURATION_DESCRIPTOR, *PUSB_CONFIGURATION_DESCRIPTOR;$/;"	t	typeref:struct:_USB_CONFIGURATION_DESCRIPTOR
USB_CONFIGURATION_DESCRIPTOR_TYPE	.\SpinAPI\src\ddk_headers\usb100.h	83;"	d
USB_CONFIGURATION_POWER_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_CONFIGURATION_POWER_DESCRIPTOR, *PUSB_CONFIGURATION_POWER_DESCRIPTOR;$/;"	t	typeref:struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
USB_CONFIG_BUS_POWERED	.\SpinAPI\src\ddk_headers\usb100.h	97;"	d
USB_CONFIG_POWERED_MASK	.\SpinAPI\src\ddk_headers\usb100.h	96;"	d
USB_CONFIG_POWER_DESCRIPTOR_TYPE	.\SpinAPI\src\ddk_headers\usb100.h	51;"	d
USB_CONFIG_REMOTE_WAKEUP	.\SpinAPI\src\ddk_headers\usb100.h	99;"	d
USB_CONFIG_SELF_POWERED	.\SpinAPI\src\ddk_headers\usb100.h	98;"	d
USB_DESCRIPTOR_MAKE_TYPE_AND_INDEX	.\SpinAPI\src\ddk_headers\usb100.h	93;"	d
USB_DEVICE_CLASS_AUDIO	.\SpinAPI\src\ddk_headers\usb100.h	39;"	d
USB_DEVICE_CLASS_COMMUNICATIONS	.\SpinAPI\src\ddk_headers\usb100.h	40;"	d
USB_DEVICE_CLASS_HUB	.\SpinAPI\src\ddk_headers\usb100.h	47;"	d
USB_DEVICE_CLASS_HUMAN_INTERFACE	.\SpinAPI\src\ddk_headers\usb100.h	41;"	d
USB_DEVICE_CLASS_MONITOR	.\SpinAPI\src\ddk_headers\usb100.h	42;"	d
USB_DEVICE_CLASS_PHYSICAL_INTERFACE	.\SpinAPI\src\ddk_headers\usb100.h	43;"	d
USB_DEVICE_CLASS_POWER	.\SpinAPI\src\ddk_headers\usb100.h	44;"	d
USB_DEVICE_CLASS_PRINTER	.\SpinAPI\src\ddk_headers\usb100.h	45;"	d
USB_DEVICE_CLASS_RESERVED	.\SpinAPI\src\ddk_headers\usb100.h	38;"	d
USB_DEVICE_CLASS_STORAGE	.\SpinAPI\src\ddk_headers\usb100.h	46;"	d
USB_DEVICE_CLASS_VENDOR_SPECIFIC	.\SpinAPI\src\ddk_headers\usb100.h	48;"	d
USB_DEVICE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_DEVICE_DESCRIPTOR, *PUSB_DEVICE_DESCRIPTOR;$/;"	t	typeref:struct:_USB_DEVICE_DESCRIPTOR
USB_DEVICE_DESCRIPTOR_TYPE	.\SpinAPI\src\ddk_headers\usb100.h	82;"	d
USB_ENDPOINT_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_ENDPOINT_DESCRIPTOR, *PUSB_ENDPOINT_DESCRIPTOR;$/;"	t	typeref:struct:_USB_ENDPOINT_DESCRIPTOR
USB_ENDPOINT_DESCRIPTOR_TYPE	.\SpinAPI\src\ddk_headers\usb100.h	86;"	d
USB_ENDPOINT_DIRECTION_IN	.\SpinAPI\src\ddk_headers\usb100.h	134;"	d
USB_ENDPOINT_DIRECTION_MASK	.\SpinAPI\src\ddk_headers\usb100.h	131;"	d
USB_ENDPOINT_DIRECTION_OUT	.\SpinAPI\src\ddk_headers\usb100.h	133;"	d
USB_ENDPOINT_TYPE_BULK	.\SpinAPI\src\ddk_headers\usb100.h	140;"	d
USB_ENDPOINT_TYPE_CONTROL	.\SpinAPI\src\ddk_headers\usb100.h	138;"	d
USB_ENDPOINT_TYPE_INTERRUPT	.\SpinAPI\src\ddk_headers\usb100.h	141;"	d
USB_ENDPOINT_TYPE_ISOCHRONOUS	.\SpinAPI\src\ddk_headers\usb100.h	139;"	d
USB_ENDPOINT_TYPE_MASK	.\SpinAPI\src\ddk_headers\usb100.h	137;"	d
USB_FEATURE_ENDPOINT_STALL	.\SpinAPI\src\ddk_headers\usb100.h	154;"	d
USB_FEATURE_INTERFACE_POWER_D0	.\SpinAPI\src\ddk_headers\usb100.h	211;"	d
USB_FEATURE_INTERFACE_POWER_D1	.\SpinAPI\src\ddk_headers\usb100.h	212;"	d
USB_FEATURE_INTERFACE_POWER_D2	.\SpinAPI\src\ddk_headers\usb100.h	213;"	d
USB_FEATURE_INTERFACE_POWER_D3	.\SpinAPI\src\ddk_headers\usb100.h	214;"	d
USB_FEATURE_REMOTE_WAKEUP	.\SpinAPI\src\ddk_headers\usb100.h	155;"	d
USB_GETSTATUS_REMOTE_WAKEUP_ENABLED	.\SpinAPI\src\ddk_headers\usb100.h	67;"	d
USB_GETSTATUS_SELF_POWERED	.\SpinAPI\src\ddk_headers\usb100.h	66;"	d
USB_HUB_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_HUB_DESCRIPTOR, *PUSB_HUB_DESCRIPTOR;$/;"	t	typeref:struct:_USB_HUB_DESCRIPTOR
USB_H_	.\SpinAPI\src\usb.h	2;"	d
USB_INTERFACE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_INTERFACE_DESCRIPTOR, *PUSB_INTERFACE_DESCRIPTOR;$/;"	t	typeref:struct:_USB_INTERFACE_DESCRIPTOR
USB_INTERFACE_DESCRIPTOR_TYPE	.\SpinAPI\src\ddk_headers\usb100.h	85;"	d
USB_INTERFACE_POWER_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_INTERFACE_POWER_DESCRIPTOR, *PUSB_INTERFACE_POWER_DESCRIPTOR;$/;"	t	typeref:struct:_USB_INTERFACE_POWER_DESCRIPTOR
USB_INTERFACE_POWER_DESCRIPTOR_TYPE	.\SpinAPI\src\ddk_headers\usb100.h	52;"	d
USB_ISO_CMD_ASAP	.\SpinAPI\src\cyioctl.h	98;"	d
USB_ISO_CMD_CURRENT_FRAME	.\SpinAPI\src\cyioctl.h	99;"	d
USB_ISO_CMD_SET_FRAME	.\SpinAPI\src\cyioctl.h	100;"	d
USB_ISO_ID	.\SpinAPI\src\cyioctl.h	97;"	d
USB_REQUEST_CLEAR_FEATURE	.\SpinAPI\src\ddk_headers\usb100.h	55;"	d
USB_REQUEST_GET_CONFIGURATION	.\SpinAPI\src\ddk_headers\usb100.h	60;"	d
USB_REQUEST_GET_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	58;"	d
USB_REQUEST_GET_INTERFACE	.\SpinAPI\src\ddk_headers\usb100.h	62;"	d
USB_REQUEST_GET_STATUS	.\SpinAPI\src\ddk_headers\usb100.h	54;"	d
USB_REQUEST_SET_ADDRESS	.\SpinAPI\src\ddk_headers\usb100.h	57;"	d
USB_REQUEST_SET_CONFIGURATION	.\SpinAPI\src\ddk_headers\usb100.h	61;"	d
USB_REQUEST_SET_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	59;"	d
USB_REQUEST_SET_FEATURE	.\SpinAPI\src\ddk_headers\usb100.h	56;"	d
USB_REQUEST_SET_INTERFACE	.\SpinAPI\src\ddk_headers\usb100.h	63;"	d
USB_REQUEST_SYNC_FRAME	.\SpinAPI\src\ddk_headers\usb100.h	64;"	d
USB_RESERVED_DESCRIPTOR_TYPE	.\SpinAPI\src\ddk_headers\usb100.h	50;"	d
USB_STRING_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^} USB_STRING_DESCRIPTOR, *PUSB_STRING_DESCRIPTOR;$/;"	t	typeref:struct:_USB_STRING_DESCRIPTOR
USB_STRING_DESCRIPTOR_TYPE	.\SpinAPI\src\ddk_headers\usb100.h	84;"	d
USB_SUPPORT_D0_COMMAND	.\SpinAPI\src\ddk_headers\usb100.h	187;"	d
USB_SUPPORT_D1_COMMAND	.\SpinAPI\src\ddk_headers\usb100.h	188;"	d
USB_SUPPORT_D1_WAKEUP	.\SpinAPI\src\ddk_headers\usb100.h	192;"	d
USB_SUPPORT_D2_COMMAND	.\SpinAPI\src\ddk_headers\usb100.h	189;"	d
USB_SUPPORT_D2_WAKEUP	.\SpinAPI\src\ddk_headers\usb100.h	193;"	d
USB_SUPPORT_D3_COMMAND	.\SpinAPI\src\ddk_headers\usb100.h	190;"	d
USE_SHAPE	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	53;"	d	file:
USE_SHAPE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	44;"	d	file:
USE_SHAPE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	37;"	d	file:
USE_SHAPE	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	39;"	d	file:
USE_SHAPE	.\SpinAPI\examples\RadioProcessor\awg.c	43;"	d	file:
UniqueErrorValue	.\SpinAPI\src\ddk_headers\winddk.h	/^	ULONG  UniqueErrorValue; $/;"	m	struct:_IO_ERROR_LOG_PACKET
UniqueID	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  UniqueID : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
UniqueProcess	.\SpinAPI\src\ddk_headers\winddk.h	/^  HANDLE  UniqueProcess;$/;"	m	struct:_CLIENT_ID
UniqueThread	.\SpinAPI\src\ddk_headers\winddk.h	/^  HANDLE  UniqueThread;$/;"	m	struct:_CLIENT_ID
UsableLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  UsableLength;$/;"	m	struct:_DRIVE_LAYOUT_INFORMATION_GPT
UsageNotification	.\SpinAPI\src\ddk_headers\winddk.h	/^    } UsageNotification;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon73
UsbdStatus	.\SpinAPI\src\cyioctl.h	/^    ULONG UsbdStatus;$/;"	m	struct:_SINGLE_TRANSFER
UseExtOsc	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR UseExtOsc;			\/\/ Use External Oscillator$/;"	m	struct:ft_eeprom_232r
UseExtOsc	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		UCHAR UseExtOsc;			\/\/ Use External Oscillator$/;"	m	struct:ft_program_data
UserApcContext	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVOID  UserApcContext;$/;"	m	struct:_IRP::__anon19::__anon20
UserApcRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^      PIO_APC_ROUTINE  UserApcRoutine;$/;"	m	struct:_IRP::__anon19::__anon20
UserBuffer	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  UserBuffer;$/;"	m	struct:_IRP
UserData	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVOID  UserData;$/;"	m	struct:_RTL_RANGE
UserEvent	.\SpinAPI\src\ddk_headers\winddk.h	/^  PKEVENT  UserEvent;$/;"	m	struct:_IRP
UserIosb	.\SpinAPI\src\ddk_headers\winddk.h	/^  PIO_STATUS_BLOCK  UserIosb;$/;"	m	struct:_IRP
UserMode	.\SpinAPI\src\ddk_headers\winddk.h	/^  UserMode,$/;"	e	enum:_MODE
UserRequest	.\SpinAPI\src\ddk_headers\winddk.h	/^  UserRequest,$/;"	e	enum:_KWAIT_REASON
VECTOR_AT	.\SpinAPI\src\util.h	93;"	d
VECTOR_CREATE	.\SpinAPI\src\util.h	91;"	d
VECTOR_DEFINE	.\SpinAPI\src\util.h	64;"	d
VECTOR_DESTROY	.\SpinAPI\src\util.h	96;"	d
VECTOR_MAX	.\SpinAPI\src\util.h	95;"	d
VECTOR_PUSHBACK	.\SpinAPI\src\util.h	92;"	d
VECTOR_SIZE	.\SpinAPI\src\util.h	94;"	d
VENDID	.\SpinAPI\src\caps.h	6;"	d
VENDOR_ID	.\SpinAPI\src\driver-linux-usb.c	9;"	d	file:
VERSION	.\SpinAPI\drivers\_install.bat	/^for \/f "tokens=4-5 delims=. " %%i in ('ver') do set VERSION=%%i.%%j$/;"	v
VERSION	.\SpinAPI\drivers\_windriver.bat	/^for \/f "tokens=4-5 delims=. " %%i in ('ver') do set VERSION=%%i.%%j$/;"	v
VERSION_H	.\SpinAPI\src\version.h	2;"	d
VERT_OFFSET	.\SpinAPI\src\fid.h	27;"	d
VERT_SCALE	.\SpinAPI\src\fid.h	28;"	d
VER_AND	.\SpinAPI\src\ddk_headers\winddk.h	2996;"	d
VER_BUILDNUMBER	.\SpinAPI\src\ddk_headers\winddk.h	2982;"	d
VER_CONDITION_MASK	.\SpinAPI\src\ddk_headers\winddk.h	2999;"	d
VER_EQUAL	.\SpinAPI\src\ddk_headers\winddk.h	2991;"	d
VER_GREATER	.\SpinAPI\src\ddk_headers\winddk.h	2992;"	d
VER_GREATER_EQUAL	.\SpinAPI\src\ddk_headers\winddk.h	2993;"	d
VER_LESS	.\SpinAPI\src\ddk_headers\winddk.h	2994;"	d
VER_LESS_EQUAL	.\SpinAPI\src\ddk_headers\winddk.h	2995;"	d
VER_MAJORVERSION	.\SpinAPI\src\ddk_headers\winddk.h	2981;"	d
VER_MINORVERSION	.\SpinAPI\src\ddk_headers\winddk.h	2980;"	d
VER_NUM_BITS_PER_CONDITION_MASK	.\SpinAPI\src\ddk_headers\winddk.h	3000;"	d
VER_OR	.\SpinAPI\src\ddk_headers\winddk.h	2997;"	d
VER_PLATFORMID	.\SpinAPI\src\ddk_headers\winddk.h	2983;"	d
VER_PRODUCT_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	2987;"	d
VER_SERVICEPACKMAJOR	.\SpinAPI\src\ddk_headers\winddk.h	2985;"	d
VER_SERVICEPACKMINOR	.\SpinAPI\src\ddk_headers\winddk.h	2984;"	d
VER_SET_CONDITION	.\SpinAPI\src\ddk_headers\winddk.h	2974;"	d
VER_STRING_API	.\SpinAPI\src\spinapi.c	23;"	d	file:
VER_SUITENAME	.\SpinAPI\src\ddk_headers\winddk.h	2986;"	d
VMEBus	.\SpinAPI\src\ddk_headers\winddk.h	/^  VMEBus,$/;"	e	enum:_INTERFACE_TYPE
VMEConfiguration	.\SpinAPI\src\ddk_headers\win2k.h	/^  VMEConfiguration,$/;"	e	enum:_BUS_DATA_TYPE
VOLATILE	.\SpinAPI\src\ddk_headers\winddk.h	62;"	d
VPB	.\SpinAPI\src\ddk_headers\winddk.h	/^} VPB, *PVPB;$/;"	t	typeref:struct:_VPB
VPB_LOCKED	.\SpinAPI\src\ddk_headers\winddk.h	1564;"	d
VPB_MOUNTED	.\SpinAPI\src\ddk_headers\winddk.h	1563;"	d
VPB_PERSISTENT	.\SpinAPI\src\ddk_headers\winddk.h	1565;"	d
VPB_RAW_MOUNT	.\SpinAPI\src\ddk_headers\winddk.h	1567;"	d
VPB_REMOVE_PENDING	.\SpinAPI\src\ddk_headers\winddk.h	1566;"	d
ValidDataLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  LARGE_INTEGER  ValidDataLength;                                                      $/;"	m	struct:_FILE_VALID_DATA_LENGTH_INFORMATION
ValueName	.\SpinAPI\src\ddk_headers\winddk.h	/^  PUNICODE_STRING  ValueName;$/;"	m	struct:_KEY_VALUE_ENTRY
Values	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Values;$/;"	m	struct:_KEY_FULL_INFORMATION
Variable	.\SpinAPI\interpreter\src\interpreter.cpp	/^	enum TokenType { Identifier = 0, Numeric, Variable, Colon, Comma, Equal, EndOfLine, EndOfFile };$/;"	e	enum:tagToken::TokenType	file:
Variable	.\SpinAPI\interpreter\src\interpreter.cpp	/^} Variable;$/;"	t	typeref:struct:tagVariable	file:
Vector	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG Vector;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28::__anon31
VendorID	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  VendorID;$/;"	m	struct:_PCI_COMMON_CONFIG
VendorId	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD VendorId;				\/\/ 0x0403$/;"	m	struct:ft_eeprom_header
VendorId	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD VendorId;				\/\/ 0x0403$/;"	m	struct:ft_program_data
VerifyVolume	.\SpinAPI\src\ddk_headers\winddk.h	/^    } VerifyVolume;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon63
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^      USHORT  Version;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon66
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^    DWORD  Version;             \/* 10 *\/$/;"	m	union:_KPCR_TIB::__anon90
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Version;$/;"	m	struct:_CONFIGURATION_INFORMATION
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Version;$/;"	m	struct:_DEVICE_DESCRIPTION
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version; $/;"	m	struct:_PLUGPLAY_NOTIFICATION_HEADER
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_BUS_INTERFACE_STANDARD
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_CM_FLOPPY_DEVICE_DATA
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_CM_KEYBOARD_DEVICE_DATA
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_CM_PARTIAL_RESOURCE_LIST
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_CM_SCSI_DEVICE_DATA
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_CM_SERIAL_DEVICE_DATA
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_DEVICE_CAPABILITIES
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_DEVICE_INTERFACE_CHANGE_NOTIFICATION
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_DMA_ADAPTER
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_HWPROFILE_CHANGE_NOTIFICATION
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_INTERFACE
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_IO_RESOURCE_LIST
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_TARGET_DEVICE_CUSTOM_NOTIFICATION
Version	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  Version;$/;"	m	struct:_TARGET_DEVICE_REMOVAL_NOTIFICATION
Version	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD Version;				\/\/ Header - FT_PROGRAM_DATA version$/;"	m	struct:ft_program_data
VolumeLabel	.\SpinAPI\src\ddk_headers\winddk.h	/^  WCHAR  VolumeLabel[MAXIMUM_VOLUME_LABEL_LENGTH \/ sizeof(WCHAR)];$/;"	m	struct:_VPB
VolumeLabelLength	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  VolumeLabelLength;$/;"	m	struct:_VPB
Vpb	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVPB  Vpb;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon62
Vpb	.\SpinAPI\src\ddk_headers\winddk.h	/^      PVPB  Vpb;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon63
Vpb	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVPB  Vpb;$/;"	m	struct:_DEVICE_OBJECT
Vpb	.\SpinAPI\src\ddk_headers\winddk.h	/^  PVPB  Vpb;$/;"	m	struct:_FILE_OBJECT
WAIT	.\SpinAPI\include\pulseblaster.h	31;"	d
WAIT	.\SpinAPI\src\pulseblaster.h	31;"	d
WAIT	.\mrispinapi.h	97;"	d
WAIT_CONTEXT_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^} WAIT_CONTEXT_BLOCK, *PWAIT_CONTEXT_BLOCK;$/;"	t	typeref:struct:_WAIT_CONTEXT_BLOCK
WAIT_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef ULONG WAIT_TYPE;$/;"	t
WIDTH_PLOT	.\SpinAPI\src\fid.h	26;"	d
WMI	.\SpinAPI\src\ddk_headers\winddk.h	/^    } WMI;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon78
WMI_NOTIFICATION_CALLBACK	.\SpinAPI\src\ddk_headers\winddk.h	/^(*WMI_NOTIFICATION_CALLBACK)($/;"	t
WORD_SPLIT	.\SpinAPI\src\cyioctl.h	/^} WORD_SPLIT, *PWORD_SPLIT;$/;"	t	typeref:struct:_WORD_SPLIT
WORK_QUEUE_ITEM	.\SpinAPI\src\ddk_headers\winddk.h	/^} WORK_QUEUE_ITEM, *PWORK_QUEUE_ITEM;$/;"	t	typeref:struct:_WORK_QUEUE_ITEM
WORK_QUEUE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^} WORK_QUEUE_TYPE;$/;"	t	typeref:enum:_WORK_QUEUE_TYPE
WaitKey	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  WaitKey;$/;"	m	struct:_KWAIT_BLOCK
WaitListEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  WaitListEntry;$/;"	m	struct:_KWAIT_BLOCK
WaitListHead	.\SpinAPI\src\ddk_headers\winddk.h	/^  LIST_ENTRY  WaitListHead;$/;"	m	struct:_DISPATCHER_HEADER
WaitQueueEntry	.\SpinAPI\src\ddk_headers\winddk.h	/^  KDEVICE_QUEUE_ENTRY  WaitQueueEntry;$/;"	m	struct:_WAIT_CONTEXT_BLOCK
WaitType	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  WaitType;$/;"	m	struct:_KWAIT_BLOCK
WaitWake	.\SpinAPI\src\ddk_headers\winddk.h	/^    } WaitWake;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon74
Waiters	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Waiters;$/;"	m	struct:_FILE_OBJECT
WakeFromD0	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  WakeFromD0 : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
WakeFromD1	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  WakeFromD1 : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
WakeFromD2	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  WakeFromD2 : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
WakeFromD3	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  WakeFromD3 : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
WarmEjectSupported	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  WarmEjectSupported : 1;$/;"	m	struct:_DEVICE_CAPABILITIES
Wcb	.\SpinAPI\src\ddk_headers\winddk.h	/^    WAIT_CONTEXT_BLOCK  Wcb;$/;"	m	union:_DEVICE_OBJECT::__anon46
Weekday	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Weekday;$/;"	m	struct:_TIME_FIELDS
WhichSpace	.\SpinAPI\src\ddk_headers\winddk.h	/^      ULONG  WhichSpace;$/;"	m	struct:_IO_STACK_LOCATION::__anon50::__anon69
Width16Bits	.\SpinAPI\src\ddk_headers\winddk.h	/^  Width16Bits,$/;"	e	enum:_DMA_WIDTH
Width32Bits	.\SpinAPI\src\ddk_headers\winddk.h	/^  Width32Bits,$/;"	e	enum:_DMA_WIDTH
Width8Bits	.\SpinAPI\src\ddk_headers\winddk.h	/^  Width8Bits,$/;"	e	enum:_DMA_WIDTH
WinMain	.\SpinAPI\interpreter\src\gui.cpp	/^int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,$/;"	f
WndProc	.\SpinAPI\interpreter\src\gui.cpp	/^LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f
WorkerRoutine	.\SpinAPI\src\ddk_headers\winddk.h	/^  PWORKER_THREAD_ROUTINE  WorkerRoutine;$/;"	m	struct:_WORK_QUEUE_ITEM
WormController	.\SpinAPI\src\ddk_headers\winddk.h	/^  WormController,$/;"	e	enum:_CONFIGURATION_TYPE
WrDelayExecution	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrDelayExecution,$/;"	e	enum:_KWAIT_REASON
WrEventPair	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrEventPair,$/;"	e	enum:_KWAIT_REASON
WrExecutive	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrExecutive,$/;"	e	enum:_KWAIT_REASON
WrFreePage	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrFreePage,$/;"	e	enum:_KWAIT_REASON
WrKernel	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrKernel,$/;"	e	enum:_KWAIT_REASON
WrLpcReceive	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrLpcReceive,$/;"	e	enum:_KWAIT_REASON
WrLpcReply	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrLpcReply,$/;"	e	enum:_KWAIT_REASON
WrPageIn	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrPageIn,$/;"	e	enum:_KWAIT_REASON
WrPageOut	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrPageOut,$/;"	e	enum:_KWAIT_REASON
WrPoolAllocation	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrPoolAllocation,$/;"	e	enum:_KWAIT_REASON
WrQueue	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrQueue,$/;"	e	enum:_KWAIT_REASON
WrRendezvous	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrRendezvous,$/;"	e	enum:_KWAIT_REASON
WrSuspended	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrSuspended,$/;"	e	enum:_KWAIT_REASON
WrUserRequest	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrUserRequest,$/;"	e	enum:_KWAIT_REASON
WrVirtualMemory	.\SpinAPI\src\ddk_headers\winddk.h	/^  WrVirtualMemory,$/;"	e	enum:_KWAIT_REASON
Write	.\SpinAPI\src\ddk_headers\winddk.h	/^    } Write;$/;"	m	union:_IO_STACK_LOCATION::__anon50	typeref:struct:_IO_STACK_LOCATION::__anon50::__anon53
WriteAccess	.\SpinAPI\src\ddk_headers\winddk.h	/^  BOOLEAN  WriteAccess;$/;"	m	struct:_FILE_OBJECT
WriteTotalTimeoutConstant	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD WriteTotalTimeoutConstant;	\/* Constant in milliseconds.		*\/$/;"	m	struct:_FTTIMEOUTS
WriteTotalTimeoutMultiplier	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD WriteTotalTimeoutMultiplier;	\/* Multiplier of characters.		*\/$/;"	m	struct:_FTTIMEOUTS
Writers	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  Writers;$/;"	m	struct:_SHARE_ACCESS
XoffChar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char XoffChar;				\/* Tx and Rx X-OFF character			*\/$/;"	m	struct:_FTDCB
XoffLim	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD XoffLim;				\/* Transmit X-OFF threshold				*\/$/;"	m	struct:_FTDCB
XonChar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		char XonChar;				\/* Tx and Rx X-ON character				*\/$/;"	m	struct:_FTDCB
XonLim	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD XonLim;				\/* Transmit X-ON threshold				*\/$/;"	m	struct:_FTDCB
Year	.\SpinAPI\src\ddk_headers\winddk.h	/^  CSHORT  Year;$/;"	m	struct:_TIME_FIELDS
ZONE_HEADER	.\SpinAPI\src\ddk_headers\winnt4.h	/^} ZONE_HEADER, *PZONE_HEADER;$/;"	t	typeref:struct:_ZONE_HEADER
ZONE_SEGMENT_HEADER	.\SpinAPI\src\ddk_headers\winnt4.h	/^} ZONE_SEGMENT_HEADER, *PZONE_SEGMENT_HEADER;$/;"	t	typeref:struct:_ZONE_SEGMENT_HEADER
_ACCESS_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _ACCESS_STATE {$/;"	s
_AFXRES_H	.\SpinAPI\interpreter\src\afxres.h	2;"	d
_APS_NEXT_COMMAND_VALUE	.\SpinAPI\interpreter\src\resource.h	13;"	d
_APS_NEXT_CONTROL_VALUE	.\SpinAPI\interpreter\src\resource.h	14;"	d
_APS_NEXT_RESOURCE_VALUE	.\SpinAPI\interpreter\src\resource.h	12;"	d
_APS_NEXT_SYMED_VALUE	.\SpinAPI\interpreter\src\resource.h	15;"	d
_BM_REQ_TYPE	.\SpinAPI\src\cyioctl.h	/^typedef struct _BM_REQ_TYPE {$/;"	s
_BOOTDISK_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _BOOTDISK_INFORMATION {$/;"	s
_BOOTDISK_INFORMATION_EX	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _BOOTDISK_INFORMATION_EX {$/;"	s
_BUS_DATA_TYPE	.\SpinAPI\src\ddk_headers\win2k.h	/^typedef enum _BUS_DATA_TYPE {$/;"	g
_BUS_INTERFACE_STANDARD	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _BUS_INTERFACE_STANDARD {$/;"	s
_BUS_QUERY_ID_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _BUS_QUERY_ID_TYPE {$/;"	g
_CAPS_H	.\SpinAPI\src\caps.h	2;"	d
_CLIENT_ID	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CLIENT_ID {$/;"	s
_CM_EISA_FUNCTION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_EISA_FUNCTION_INFORMATION {$/;"	s
_CM_EISA_SLOT_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_EISA_SLOT_INFORMATION {$/;"	s
_CM_FLOPPY_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_FLOPPY_DEVICE_DATA {$/;"	s
_CM_FULL_RESOURCE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_FULL_RESOURCE_DESCRIPTOR {$/;"	s
_CM_INT13_DRIVE_PARAMETER	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_INT13_DRIVE_PARAMETER {$/;"	s
_CM_KEYBOARD_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_KEYBOARD_DEVICE_DATA {$/;"	s
_CM_MCA_POS_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_MCA_POS_DATA {$/;"	s
_CM_PARTIAL_RESOURCE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR {$/;"	s
_CM_PARTIAL_RESOURCE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_PARTIAL_RESOURCE_LIST {$/;"	s
_CM_RESOURCE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_RESOURCE_LIST {$/;"	s
_CM_SCSI_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_SCSI_DEVICE_DATA {$/;"	s
_CM_SERIAL_DEVICE_DATA	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CM_SERIAL_DEVICE_DATA {$/;"	s
_CM_SHARE_DISPOSITION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _CM_SHARE_DISPOSITION {$/;"	g
_CONFIGURATION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CONFIGURATION_INFORMATION {$/;"	s
_CONFIGURATION_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _CONFIGURATION_TYPE {$/;"	g
_CONTROLLER_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CONTROLLER_OBJECT {$/;"	s
_CREATE_DISK	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CREATE_DISK {$/;"	s
_CREATE_DISK_GPT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CREATE_DISK_GPT {$/;"	s
_CREATE_DISK_MBR	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _CREATE_DISK_MBR {$/;"	s
_CREATE_FILE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _CREATE_FILE_TYPE {$/;"	g
_CRT_SECURE_NO_DEPRECATE	.\ppg_wrap.c	120;"	d	file:
_CRT_SECURE_NO_DEPRECATE	.\swig\Hahn_echo\.c	120;"	d	file:
_CRT_SECURE_NO_DEPRECATE	.\swig\Hahn_echo\Hahn_echo_wrap.c	120;"	d	file:
_CRT_SECURE_NO_DEPRECATE	.\swig\example\example_wrap.c	120;"	d	file:
_CRT_SECURE_NO_DEPRECATE	.\swig\example\get_rand_array\get_rand_array_wrap.c	120;"	d	file:
_CRT_SECURE_NO_DEPRECATE	.\swig\ppg_lang\ppg_lang_wrap.c	120;"	d	file:
_CRT_SECURE_NO_DEPRECATE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	120;"	d	file:
_CRT_SECURE_NO_DEPRECATE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	120;"	d	file:
_DDK_DUMMYUNION_MEMBER	.\SpinAPI\src\ddk_headers\winddk.h	68;"	d
_DDK_DUMMYUNION_MEMBER	.\SpinAPI\src\ddk_headers\winddk.h	71;"	d
_DDK_DUMMYUNION_N_MEMBER	.\SpinAPI\src\ddk_headers\winddk.h	69;"	d
_DDK_DUMMYUNION_N_MEMBER	.\SpinAPI\src\ddk_headers\winddk.h	72;"	d
_DEBUG	.\ppg_wrap.c	145;"	d	file:
_DEBUG	.\ppg_wrap.c	147;"	d	file:
_DEBUG	.\swig\Hahn_echo\.c	145;"	d	file:
_DEBUG	.\swig\Hahn_echo\.c	147;"	d	file:
_DEBUG	.\swig\Hahn_echo\Hahn_echo_wrap.c	145;"	d	file:
_DEBUG	.\swig\Hahn_echo\Hahn_echo_wrap.c	147;"	d	file:
_DEBUG	.\swig\example\example_wrap.c	145;"	d	file:
_DEBUG	.\swig\example\example_wrap.c	147;"	d	file:
_DEBUG	.\swig\example\get_rand_array\get_rand_array_wrap.c	145;"	d	file:
_DEBUG	.\swig\example\get_rand_array\get_rand_array_wrap.c	147;"	d	file:
_DEBUG	.\swig\ppg_lang\ppg_lang_wrap.c	145;"	d	file:
_DEBUG	.\swig\ppg_lang\ppg_lang_wrap.c	147;"	d	file:
_DEBUG	.\swig\ppg_lang\temp\ppg_temp_wrap.c	145;"	d	file:
_DEBUG	.\swig\ppg_lang\temp\ppg_temp_wrap.c	147;"	d	file:
_DEBUG	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	145;"	d	file:
_DEBUG	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	147;"	d	file:
_DEVICE_CAPABILITIES	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DEVICE_CAPABILITIES {$/;"	s
_DEVICE_DESCRIPTION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DEVICE_DESCRIPTION {$/;"	s
_DEVICE_INTERFACE_CHANGE_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DEVICE_INTERFACE_CHANGE_NOTIFICATION {$/;"	s
_DEVICE_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DEVICE_OBJECT {$/;"	s
_DEVICE_RELATIONS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DEVICE_RELATIONS {$/;"	s
_DEVICE_RELATION_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _DEVICE_RELATION_TYPE {$/;"	g
_DEVICE_TEXT_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _DEVICE_TEXT_TYPE {$/;"	g
_DEVICE_USAGE_NOTIFICATION_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _DEVICE_USAGE_NOTIFICATION_TYPE {$/;"	g
_DEVIOCTL_	.\SpinAPI\src\ddk_headers\devioctl.h	22;"	d
_DISK_SIGNATURE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DISK_SIGNATURE {$/;"	s
_DISPATCHER_HEADER	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DISPATCHER_HEADER {$/;"	s
_DMA_ADAPTER	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DMA_ADAPTER {$/;"	s
_DMA_CONFIGURATION_BYTE0	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DMA_CONFIGURATION_BYTE0 {$/;"	s
_DMA_CONFIGURATION_BYTE1	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DMA_CONFIGURATION_BYTE1 {$/;"	s
_DMA_OPERATIONS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DMA_OPERATIONS {$/;"	s
_DMA_SPEED	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _DMA_SPEED {$/;"	g
_DMA_WIDTH	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _DMA_WIDTH {$/;"	g
_DRIVER_EXTENSION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DRIVER_EXTENSION {$/;"	s
_DRIVER_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DRIVER_OBJECT {$/;"	s
_DRIVER_OS_H	.\SpinAPI\src\driver-os.h	2;"	d
_DRIVER_VERIFIER_THUNK_PAIRS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DRIVER_VERIFIER_THUNK_PAIRS {$/;"	s
_DRIVE_LAYOUT_INFORMATION_GPT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DRIVE_LAYOUT_INFORMATION_GPT {$/;"	s
_DRIVE_LAYOUT_INFORMATION_MBR	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _DRIVE_LAYOUT_INFORMATION_MBR {$/;"	s
_EISA_DMA_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _EISA_DMA_CONFIGURATION {$/;"	s
_EISA_IRQ_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _EISA_IRQ_CONFIGURATION {$/;"	s
_EISA_IRQ_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _EISA_IRQ_DESCRIPTOR {$/;"	s
_EISA_MEMORY_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _EISA_MEMORY_CONFIGURATION {$/;"	s
_EISA_MEMORY_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _EISA_MEMORY_TYPE {$/;"	s
_EISA_PORT_CONFIGURATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _EISA_PORT_CONFIGURATION {$/;"	s
_EISA_PORT_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _EISA_PORT_DESCRIPTOR {$/;"	s
_ERESOURCE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _ERESOURCE {$/;"	s
_EVENT_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _EVENT_TYPE {$/;"	g
_EX_POOL_PRIORITY	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _EX_POOL_PRIORITY {$/;"	g
_FAST_IO_DISPATCH	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FAST_IO_DISPATCH {$/;"	s
_FAST_MUTEX	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FAST_MUTEX {$/;"	s
_FILE_ALIGNMENT_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_ALIGNMENT_INFORMATION {$/;"	s
_FILE_ATTRIBUTE_TAG_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION {               $/;"	s
_FILE_BASIC_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_BASIC_INFORMATION {$/;"	s
_FILE_DISPOSITION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_DISPOSITION_INFORMATION {                  $/;"	s
_FILE_END_OF_FILE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_END_OF_FILE_INFORMATION {                  $/;"	s
_FILE_FS_DEVICE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_FS_DEVICE_INFORMATION {$/;"	s
_FILE_FULL_EA_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_FULL_EA_INFORMATION {$/;"	s
_FILE_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _FILE_INFORMATION_CLASS {$/;"	g
_FILE_NAME_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_NAME_INFORMATION {                     $/;"	s
_FILE_NETWORK_OPEN_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_NETWORK_OPEN_INFORMATION {                 $/;"	s
_FILE_OBJECT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_OBJECT {$/;"	s
_FILE_POSITION_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_POSITION_INFORMATION {                 $/;"	s
_FILE_STANDARD_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_STANDARD_INFORMATION {$/;"	s
_FILE_VALID_DATA_LENGTH_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION {                                    $/;"	s
_FSINFOCLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _FSINFOCLASS {$/;"	g
_FTCOMSTAT	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct _FTCOMSTAT {$/;"	s
_FTDCB	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct _FTDCB {$/;"	s
_FTTIMEOUTS	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct _FTTIMEOUTS {$/;"	s
_GENERAL_LOOKASIDE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _GENERAL_LOOKASIDE {$/;"	s
_GNU_SOURCE	.\SpinAPI\src\driver-linux-direct.c	1;"	d	file:
_HWPROFILE_CHANGE_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _HWPROFILE_CHANGE_NOTIFICATION {$/;"	s
_Hahn_echo	.\swig\Hahn_echo\Hahn_echo.py	/^            import _Hahn_echo$/;"	i
_Hahn_echo	.\swig\Hahn_echo\Hahn_echo.py	/^    _Hahn_echo = swig_import_helper()$/;"	v
_Hahn_echo	.\swig\Hahn_echo\Hahn_echo.py	/^    import _Hahn_echo$/;"	i
_IF_H	.\SpinAPI\src\if.h	2;"	d
_IMAGE_INFO	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IMAGE_INFO {$/;"	s
_INITIAL_PRIVILEGE_SET	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _INITIAL_PRIVILEGE_SET {$/;"	s
_INTERFACE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _INTERFACE {$/;"	s
_INTERFACE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _INTERFACE_TYPE {$/;"	g
_INTERLOCKED_RESULT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _INTERLOCKED_RESULT {$/;"	g
_INTERPRETER_H_	.\SpinAPI\interpreter\src\interpreter.h	2;"	d
_IO_ALLOCATION_ACTION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _IO_ALLOCATION_ACTION {$/;"	g
_IO_COMPLETION_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_COMPLETION_CONTEXT {$/;"	s
_IO_CSQ	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_CSQ {$/;"	s
_IO_CSQ_IRP_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_CSQ_IRP_CONTEXT {$/;"	s
_IO_ERROR_LOG_PACKET	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_ERROR_LOG_PACKET { $/;"	s
_IO_NOTIFICATION_EVENT_CATEGORY	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _IO_NOTIFICATION_EVENT_CATEGORY {$/;"	g
_IO_REMOVE_LOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_REMOVE_LOCK {$/;"	s
_IO_REMOVE_LOCK_COMMON_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_REMOVE_LOCK_COMMON_BLOCK {$/;"	s
_IO_REMOVE_LOCK_DBG_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_REMOVE_LOCK_DBG_BLOCK {$/;"	s
_IO_RESOURCE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_RESOURCE_DESCRIPTOR {$/;"	s
_IO_RESOURCE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_RESOURCE_LIST {$/;"	s
_IO_RESOURCE_REQUIREMENTS_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_RESOURCE_REQUIREMENTS_LIST {$/;"	s
_IO_SECURITY_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_SECURITY_CONTEXT {$/;"	s
_IO_STACK_LOCATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_STACK_LOCATION {$/;"	s
_IO_STATUS_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IO_STATUS_BLOCK {$/;"	s
_IRP	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _IRP {$/;"	s
_ISO_ADV_PARAMS	.\SpinAPI\src\cyioctl.h	/^typedef struct _ISO_ADV_PARAMS {$/;"	s
_ISO_PACKET_INFO	.\SpinAPI\src\cyioctl.h	/^typedef struct _ISO_PACKET_INFO {$/;"	s
_KAPC	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KAPC {$/;"	s
_KBUGCHECK_BUFFER_DUMP_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _KBUGCHECK_BUFFER_DUMP_STATE {$/;"	g
_KBUGCHECK_CALLBACK_RECORD	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KBUGCHECK_CALLBACK_RECORD {$/;"	s
_KDEVICE_QUEUE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KDEVICE_QUEUE {$/;"	s
_KDEVICE_QUEUE_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KDEVICE_QUEUE_ENTRY {$/;"	s
_KDPC	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KDPC {$/;"	s
_KDPC_IMPORTANCE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _KDPC_IMPORTANCE {$/;"	g
_KEVENT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KEVENT {$/;"	s
_KEY_BASIC_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KEY_BASIC_INFORMATION {$/;"	s
_KEY_FULL_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KEY_FULL_INFORMATION {$/;"	s
_KEY_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _KEY_INFORMATION_CLASS {$/;"	g
_KEY_NODE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KEY_NODE_INFORMATION {$/;"	s
_KEY_VALUE_BASIC_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KEY_VALUE_BASIC_INFORMATION {$/;"	s
_KEY_VALUE_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KEY_VALUE_ENTRY {$/;"	s
_KEY_VALUE_FULL_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KEY_VALUE_FULL_INFORMATION {$/;"	s
_KEY_VALUE_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _KEY_VALUE_INFORMATION_CLASS {$/;"	g
_KEY_VALUE_PARTIAL_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KEY_VALUE_PARTIAL_INFORMATION {$/;"	s
_KEY_VALUE_PARTIAL_INFORMATION_ALIGN64	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 {$/;"	s
_KFLOATING_SAVE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KFLOATING_SAVE {$/;"	s
_KINTERRUPT_MODE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _KINTERRUPT_MODE {$/;"	g
_KLOCK_QUEUE_HANDLE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KLOCK_QUEUE_HANDLE {$/;"	s
_KMUTANT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KMUTANT {$/;"	s
_KPCR	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KPCR {$/;"	s
_KPCR_TIB	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KPCR_TIB {$/;"	s
_KPROFILE_SOURCE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _KPROFILE_SOURCE {$/;"	g
_KSEMAPHORE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KSEMAPHORE {$/;"	s
_KSPIN_LOCK_QUEUE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KSPIN_LOCK_QUEUE {$/;"	s
_KSPIN_LOCK_QUEUE_NUMBER	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _KSPIN_LOCK_QUEUE_NUMBER {$/;"	g
_KTIMER	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KTIMER {$/;"	s
_KWAIT_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _KWAIT_BLOCK {$/;"	s
_KWAIT_REASON	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _KWAIT_REASON {$/;"	g
_LOCK_OPERATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _LOCK_OPERATION {$/;"	g
_MDL	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _MDL {$/;"	s
_MEMORY_CACHING_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _MEMORY_CACHING_TYPE {$/;"	g
_MEMORY_CACHING_TYPE_ORIG	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _MEMORY_CACHING_TYPE_ORIG {$/;"	g
_MMFLUSH_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _MMFLUSH_TYPE {$/;"	g
_MM_PAGE_PRIORITY	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _MM_PAGE_PRIORITY {$/;"	g
_MM_SYSTEM_SIZE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _MM_SYSTEM_SIZE {$/;"	g
_MODE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _MODE {$/;"	g
_NPAGED_LOOKASIDE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _NPAGED_LOOKASIDE_LIST {$/;"	s
_NTSTATUS_H	.\SpinAPI\src\ddk_headers\ntstatus.h	24;"	d
_OBJECT_HANDLE_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _OBJECT_HANDLE_INFORMATION {$/;"	s
_OBJECT_NAME_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _OBJECT_NAME_INFORMATION {               $/;"	s
_OWNER_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _OWNER_ENTRY {$/;"	s
_PAGED_LOOKASIDE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _PAGED_LOOKASIDE_LIST {$/;"	s
_PARTITION_INFORMATION_MBR	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _PARTITION_INFORMATION_MBR {$/;"	s
_PARTITION_STYLE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _PARTITION_STYLE {$/;"	g
_PCI_COMMON_CONFIG	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _PCI_COMMON_CONFIG {$/;"	s
_PCI_HEADER_TYPE_0	.\SpinAPI\src\ddk_headers\winddk.h	/^    struct _PCI_HEADER_TYPE_0 {$/;"	s	union:_PCI_COMMON_CONFIG::__anon80
_PCI_HEADER_TYPE_1	.\SpinAPI\src\ddk_headers\winddk.h	/^      struct _PCI_HEADER_TYPE_1 {$/;"	s	union:_PCI_COMMON_CONFIG::__anon80
_PCI_HEADER_TYPE_2	.\SpinAPI\src\ddk_headers\winddk.h	/^      struct _PCI_HEADER_TYPE_2 {$/;"	s	union:_PCI_COMMON_CONFIG::__anon80
_PCI_SLOT_NUMBER	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _PCI_SLOT_NUMBER {$/;"	s
_PHYSICAL_MEMORY_RANGE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _PHYSICAL_MEMORY_RANGE {$/;"	s
_PLUGPLAY_NOTIFICATION_HEADER	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _PLUGPLAY_NOTIFICATION_HEADER {$/;"	s
_PNP_BUS_INFORMATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _PNP_BUS_INFORMATION {$/;"	s
_POOL_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _POOL_TYPE {$/;"	g
_POWER_SEQUENCE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _POWER_SEQUENCE {$/;"	s
_POWER_STATE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef union _POWER_STATE {$/;"	u
_POWER_STATE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _POWER_STATE_TYPE {$/;"	g
_PROCESSINFOCLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _PROCESSINFOCLASS {$/;"	g
_PTS_SET_NUM_DATA	.\SpinAPI\src\spinapi.c	33;"	d	file:
_PyLong_FromSsize_t	.\ppg_wrap.c	758;"	d	file:
_PyLong_FromSsize_t	.\swig\Hahn_echo\.c	758;"	d	file:
_PyLong_FromSsize_t	.\swig\Hahn_echo\Hahn_echo_wrap.c	758;"	d	file:
_PyLong_FromSsize_t	.\swig\example\example_wrap.c	758;"	d	file:
_PyLong_FromSsize_t	.\swig\example\get_rand_array\get_rand_array_wrap.c	758;"	d	file:
_PyLong_FromSsize_t	.\swig\ppg_lang\ppg_lang_wrap.c	758;"	d	file:
_PyLong_FromSsize_t	.\swig\ppg_lang\temp\ppg_temp_wrap.c	758;"	d	file:
_PyLong_FromSsize_t	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	758;"	d	file:
_RANGE_LIST_ITERATOR	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _RANGE_LIST_ITERATOR {$/;"	s
_RTL_BITMAP	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _RTL_BITMAP {$/;"	s
_RTL_BITMAP_RUN	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _RTL_BITMAP_RUN {$/;"	s
_RTL_OSVERSIONINFOEXW	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _RTL_OSVERSIONINFOEXW {$/;"	s
_RTL_OSVERSIONINFOW	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _RTL_OSVERSIONINFOW {$/;"	s
_RTL_QUERY_REGISTRY_TABLE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _RTL_QUERY_REGISTRY_TABLE {$/;"	s
_RTL_RANGE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _RTL_RANGE {$/;"	s
_RTL_RANGE_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _RTL_RANGE_LIST {$/;"	s
_SCATTER_GATHER_ELEMENT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _SCATTER_GATHER_ELEMENT {$/;"	s
_SCATTER_GATHER_LIST	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _SCATTER_GATHER_LIST {$/;"	s
_SCL_SECURE_NO_DEPRECATE	.\ppg_wrap.c	125;"	d	file:
_SCL_SECURE_NO_DEPRECATE	.\swig\Hahn_echo\.c	125;"	d	file:
_SCL_SECURE_NO_DEPRECATE	.\swig\Hahn_echo\Hahn_echo_wrap.c	125;"	d	file:
_SCL_SECURE_NO_DEPRECATE	.\swig\example\example_wrap.c	125;"	d	file:
_SCL_SECURE_NO_DEPRECATE	.\swig\example\get_rand_array\get_rand_array_wrap.c	125;"	d	file:
_SCL_SECURE_NO_DEPRECATE	.\swig\ppg_lang\ppg_lang_wrap.c	125;"	d	file:
_SCL_SECURE_NO_DEPRECATE	.\swig\ppg_lang\temp\ppg_temp_wrap.c	125;"	d	file:
_SCL_SECURE_NO_DEPRECATE	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	125;"	d	file:
_SECTION_OBJECT_POINTERS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _SECTION_OBJECT_POINTERS {$/;"	s
_SECURITY_OPERATION_CODE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _SECURITY_OPERATION_CODE {$/;"	g
_SECURITY_SUBJECT_CONTEXT	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _SECURITY_SUBJECT_CONTEXT {$/;"	s
_SETUP_PACKET	.\SpinAPI\src\cyioctl.h	/^typedef struct _SETUP_PACKET {$/;"	s
_SET_TRANSFER_SIZE_INFO	.\SpinAPI\src\cyioctl.h	/^typedef struct _SET_TRANSFER_SIZE_INFO {$/;"	s
_SHARE_ACCESS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _SHARE_ACCESS {$/;"	s
_SINGLE_TRANSFER	.\SpinAPI\src\cyioctl.h	/^typedef struct _SINGLE_TRANSFER {$/;"	s
_SSDT_ENTRY	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _SSDT_ENTRY {$/;"	s
_SUITE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _SUITE_TYPE {$/;"	g
_SWIG_Py_None	.\ppg_wrap.c	/^_SWIG_Py_None(void)$/;"	f
_SWIG_Py_None	.\swig\Hahn_echo\.c	/^_SWIG_Py_None(void)$/;"	f
_SWIG_Py_None	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^_SWIG_Py_None(void)$/;"	f
_SWIG_Py_None	.\swig\example\example_wrap.c	/^_SWIG_Py_None(void)$/;"	f
_SWIG_Py_None	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^_SWIG_Py_None(void)$/;"	f
_SWIG_Py_None	.\swig\ppg_lang\ppg_lang_wrap.c	/^_SWIG_Py_None(void)$/;"	f
_SWIG_Py_None	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^_SWIG_Py_None(void)$/;"	f
_SWIG_Py_None	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^_SWIG_Py_None(void)$/;"	f
_SWIG_This	.\ppg_wrap.c	/^_SWIG_This(void)$/;"	f
_SWIG_This	.\swig\Hahn_echo\.c	/^_SWIG_This(void)$/;"	f
_SWIG_This	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^_SWIG_This(void)$/;"	f
_SWIG_This	.\swig\example\example_wrap.c	/^_SWIG_This(void)$/;"	f
_SWIG_This	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^_SWIG_This(void)$/;"	f
_SWIG_This	.\swig\ppg_lang\ppg_lang_wrap.c	/^_SWIG_This(void)$/;"	f
_SWIG_This	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^_SWIG_This(void)$/;"	f
_SWIG_This	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^_SWIG_This(void)$/;"	f
_TARGET_DEVICE_CUSTOM_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _TARGET_DEVICE_CUSTOM_NOTIFICATION {$/;"	s
_TARGET_DEVICE_REMOVAL_NOTIFICATION	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _TARGET_DEVICE_REMOVAL_NOTIFICATION {$/;"	s
_THREADINFOCLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _THREADINFOCLASS {$/;"	g
_TIMER_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _TIMER_TYPE {$/;"	g
_TIME_FIELDS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _TIME_FIELDS {$/;"	s
_TRACE_INFORMATION_CLASS	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _TRACE_INFORMATION_CLASS {$/;"	g
_USB_COMMON_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^typedef struct _USB_COMMON_DESCRIPTOR {$/;"	s
_USB_CONFIGURATION_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^typedef struct _USB_CONFIGURATION_DESCRIPTOR { $/;"	s
_USB_CONFIGURATION_POWER_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^typedef struct _USB_CONFIGURATION_POWER_DESCRIPTOR {$/;"	s
_USB_DEVICE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^typedef struct _USB_DEVICE_DESCRIPTOR { $/;"	s
_USB_ENDPOINT_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^typedef struct _USB_ENDPOINT_DESCRIPTOR { $/;"	s
_USB_HUB_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^typedef struct _USB_HUB_DESCRIPTOR {$/;"	s
_USB_INTERFACE_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^typedef struct _USB_INTERFACE_DESCRIPTOR { $/;"	s
_USB_INTERFACE_POWER_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^typedef struct _USB_INTERFACE_POWER_DESCRIPTOR {$/;"	s
_USB_STRING_DESCRIPTOR	.\SpinAPI\src\ddk_headers\usb100.h	/^typedef struct _USB_STRING_DESCRIPTOR {$/;"	s
_UTIL_H	.\SpinAPI\src\util.h	3;"	d
_VPB	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _VPB {$/;"	s
_WAIT_CONTEXT_BLOCK	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _WAIT_CONTEXT_BLOCK {$/;"	s
_WORD_SPLIT	.\SpinAPI\src\cyioctl.h	/^typedef struct _WORD_SPLIT {$/;"	s
_WORK_QUEUE_ITEM	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef struct _WORK_QUEUE_ITEM {$/;"	s
_WORK_QUEUE_TYPE	.\SpinAPI\src\ddk_headers\winddk.h	/^typedef enum _WORK_QUEUE_TYPE {$/;"	g
_ZONE_HEADER	.\SpinAPI\src\ddk_headers\winnt4.h	/^typedef struct _ZONE_HEADER {$/;"	s
_ZONE_SEGMENT_HEADER	.\SpinAPI\src\ddk_headers\winnt4.h	/^typedef struct _ZONE_SEGMENT_HEADER {$/;"	s
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES	.\ppg_wrap.c	130;"	d	file:
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES	.\swig\Hahn_echo\.c	130;"	d	file:
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES	.\swig\Hahn_echo\Hahn_echo_wrap.c	130;"	d	file:
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES	.\swig\example\example_wrap.c	130;"	d	file:
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES	.\swig\example\get_rand_array\get_rand_array_wrap.c	130;"	d	file:
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES	.\swig\ppg_lang\ppg_lang_wrap.c	130;"	d	file:
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES	.\swig\ppg_lang\temp\ppg_temp_wrap.c	130;"	d	file:
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	130;"	d	file:
__CYIOCTL_H__	.\SpinAPI\src\cyioctl.h	39;"	d
__DDS_H__	.\SpinAPI\include\dds.h	2;"	d
__DDS_H__	.\SpinAPI\src\dds.h	2;"	d
__DEBUG_H__	.\SpinAPI\src\debug.h	3;"	d
__FOPEN_S__	.\SpinAPI\src\debug.c	13;"	d	file:
__INTERLOCKED_DECLARED	.\SpinAPI\src\ddk_headers\winddk.h	3818;"	d
__IO_H__	.\SpinAPI\src\io.h	3;"	d
__LOCALTIME_S__	.\SpinAPI\src\debug.c	12;"	d	file:
__LOCALTIME_S__	.\SpinAPI\src\debug.c	19;"	d	file:
__NTDDK_H	.\SpinAPI\src\ddk_headers\ntddk.h	29;"	d
__PULSEBLASTER_H__	.\SpinAPI\include\pulseblaster.h	2;"	d
__PULSEBLASTER_H__	.\SpinAPI\src\pulseblaster.h	2;"	d
__RADIOPROCESSOR_H__	.\SpinAPI\include\radioprocessor.h	2;"	d
__RADIOPROCESSOR_H__	.\SpinAPI\src\radioprocessor.h	2;"	d
__SPINAPI_H__	.\SpinAPI\include\spinapi.h	2;"	d
__SPINAPI_H__	.\SpinAPI\src\spinapi.h	2;"	d
__SPINPTS_H__	.\SpinAPI\include\spinpts.h	2;"	d
__SPINPTS_H__	.\SpinAPI\src\spinpts.h	2;"	d
__SPRINTF_S__	.\SpinAPI\src\debug.c	14;"	d	file:
__STRNCPY_S__	.\SpinAPI\src\debug.c	15;"	d	file:
__USB100_H	.\SpinAPI\src\ddk_headers\usb100.h	24;"	d
__USB_ENDPOINTS_H__	.\SpinAPI\src\usb_endpoints.h	3;"	d
__USE_NTOSKRNL__	.\SpinAPI\src\ddk_headers\ntddk.h	36;"	d
__WIN2K_H	.\SpinAPI\src\ddk_headers\win2k.h	24;"	d
__WINDDK_H	.\SpinAPI\src\ddk_headers\winddk.h	24;"	d
__WINNT4_H	.\SpinAPI\src\ddk_headers\winnt4.h	24;"	d
__WINXP_H	.\SpinAPI\src\ddk_headers\winxp.h	24;"	d
__builtin__	.\ppg.py	/^    import __builtin__$/;"	i
__builtin__	.\ppg.py	/^    import builtins as __builtin__$/;"	i
__builtin__	.\swig\Hahn_echo\Hahn_echo.py	/^    import __builtin__$/;"	i
__builtin__	.\swig\Hahn_echo\Hahn_echo.py	/^    import builtins as __builtin__$/;"	i
__builtin__	.\swig\example\example.py	/^    import __builtin__$/;"	i
__builtin__	.\swig\example\example.py	/^    import builtins as __builtin__$/;"	i
__builtin__	.\swig\example\get_rand_array\get_rand_array.py	/^    import __builtin__$/;"	i
__builtin__	.\swig\example\get_rand_array\get_rand_array.py	/^    import builtins as __builtin__$/;"	i
__builtin__	.\swig\ppg_lang\ppg.py	/^    import __builtin__$/;"	i
__builtin__	.\swig\ppg_lang\ppg.py	/^    import builtins as __builtin__$/;"	i
__builtin__	.\swig\ppg_lang\ppg_lang.py	/^    import __builtin__$/;"	i
__builtin__	.\swig\ppg_lang\ppg_lang.py	/^    import builtins as __builtin__$/;"	i
__builtin__	.\swig\ppg_lang\temp\ppg_temp.py	/^    import __builtin__$/;"	i
__builtin__	.\swig\ppg_lang\temp\ppg_temp.py	/^    import builtins as __builtin__$/;"	i
__builtin__	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^    import __builtin__$/;"	i
__builtin__	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^    import builtins as __builtin__$/;"	i
__func__	.\SpinAPI\include\spinapi.h	11;"	d
__func__	.\SpinAPI\src\spinapi.h	11;"	d
__int64	.\SpinAPI\include\spinapi.h	6;"	d
__int64	.\SpinAPI\src\spinapi.h	6;"	d
__set_pts_	.\SpinAPI\src\spinapi.c	/^int __set_pts_(int pts_index, BCDFREQ freq, int phase)$/;"	f
_debug	.\SpinAPI\src\debug.c	/^_debug (unsigned int severity, const char* function, unsigned int lineno, const char *format, ...)$/;"	f
_example	.\swig\example\example.py	/^            import _example$/;"	i
_example	.\swig\example\example.py	/^    _example = swig_import_helper()$/;"	v
_example	.\swig\example\example.py	/^    import _example$/;"	i
_ft_device_list_info_node	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct _ft_device_list_info_node {$/;"	s
_get_rand_array	.\swig\example\get_rand_array\get_rand_array.py	/^            import _get_rand_array$/;"	i
_get_rand_array	.\swig\example\get_rand_array\get_rand_array.py	/^    _get_rand_array = swig_import_helper()$/;"	v
_get_rand_array	.\swig\example\get_rand_array\get_rand_array.py	/^    import _get_rand_array$/;"	i
_last_error	.\SpinAPI\src\debug.c	/^char _last_error[512];$/;"	v
_log_enabled	.\SpinAPI\src\debug.c	/^static int _log_enabled = 0;$/;"	v	file:
_log_file_name	.\SpinAPI\src\debug.c	/^static char _log_file_name[32] = "log.txt";$/;"	v	file:
_log_fp	.\SpinAPI\src\debug.c	/^static FILE* _log_fp = NULL;$/;"	v	file:
_newclass	.\ppg.py	/^    _newclass = 0$/;"	v
_newclass	.\ppg.py	/^    _newclass = 1$/;"	v
_newclass	.\swig\Hahn_echo\Hahn_echo.py	/^    _newclass = 0$/;"	v
_newclass	.\swig\Hahn_echo\Hahn_echo.py	/^    _newclass = 1$/;"	v
_newclass	.\swig\example\example.py	/^    _newclass = 0$/;"	v
_newclass	.\swig\example\example.py	/^    _newclass = 1$/;"	v
_newclass	.\swig\example\get_rand_array\get_rand_array.py	/^    _newclass = 0$/;"	v
_newclass	.\swig\example\get_rand_array\get_rand_array.py	/^    _newclass = 1$/;"	v
_newclass	.\swig\ppg_lang\ppg.py	/^    _newclass = 0$/;"	v
_newclass	.\swig\ppg_lang\ppg.py	/^    _newclass = 1$/;"	v
_newclass	.\swig\ppg_lang\ppg_lang.py	/^    _newclass = 0$/;"	v
_newclass	.\swig\ppg_lang\ppg_lang.py	/^    _newclass = 1$/;"	v
_newclass	.\swig\ppg_lang\temp\ppg_temp.py	/^    _newclass = 0$/;"	v
_newclass	.\swig\ppg_lang\temp\ppg_temp.py	/^    _newclass = 1$/;"	v
_newclass	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^    _newclass = 0$/;"	v
_newclass	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^    _newclass = 1$/;"	v
_object	.\ppg.py	/^    _object = object$/;"	v
_object	.\ppg.py	/^    class _object:$/;"	c
_object	.\swig\Hahn_echo\Hahn_echo.py	/^    _object = object$/;"	v
_object	.\swig\Hahn_echo\Hahn_echo.py	/^    class _object:$/;"	c
_object	.\swig\example\example.py	/^    _object = object$/;"	v
_object	.\swig\example\example.py	/^    class _object:$/;"	c
_object	.\swig\example\get_rand_array\get_rand_array.py	/^    _object = object$/;"	v
_object	.\swig\example\get_rand_array\get_rand_array.py	/^    class _object:$/;"	c
_object	.\swig\ppg_lang\ppg.py	/^    _object = object$/;"	v
_object	.\swig\ppg_lang\ppg.py	/^    class _object:$/;"	c
_object	.\swig\ppg_lang\ppg_lang.py	/^    _object = object$/;"	v
_object	.\swig\ppg_lang\ppg_lang.py	/^    class _object:$/;"	c
_object	.\swig\ppg_lang\temp\ppg_temp.py	/^    _object = object$/;"	v
_object	.\swig\ppg_lang\temp\ppg_temp.py	/^    class _object:$/;"	c
_object	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^    _object = object$/;"	v
_object	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^    class _object:$/;"	c
_pb_debug_write_header	.\SpinAPI\src\debug.c	/^_pb_debug_write_header(FILE *fp)$/;"	f
_ppg	.\ppg.py	/^            import _ppg$/;"	i
_ppg	.\ppg.py	/^    _ppg = swig_import_helper()$/;"	v
_ppg	.\ppg.py	/^    import _ppg$/;"	i
_ppg	.\swig\ppg_lang\ppg.py	/^            import _ppg$/;"	i
_ppg	.\swig\ppg_lang\ppg.py	/^    _ppg = swig_import_helper()$/;"	v
_ppg	.\swig\ppg_lang\ppg.py	/^    import _ppg$/;"	i
_ppg_lang	.\swig\ppg_lang\ppg_lang.py	/^            import _ppg_lang$/;"	i
_ppg_lang	.\swig\ppg_lang\ppg_lang.py	/^    _ppg_lang = swig_import_helper()$/;"	v
_ppg_lang	.\swig\ppg_lang\ppg_lang.py	/^    import _ppg_lang$/;"	i
_ppg_temp	.\swig\ppg_lang\temp\ppg_temp.py	/^            import _ppg_temp$/;"	i
_ppg_temp	.\swig\ppg_lang\temp\ppg_temp.py	/^    _ppg_temp = swig_import_helper()$/;"	v
_ppg_temp	.\swig\ppg_lang\temp\ppg_temp.py	/^    import _ppg_temp$/;"	i
_ppg_temp_ph	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^            import _ppg_temp_ph$/;"	i
_ppg_temp_ph	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^    _ppg_temp_ph = swig_import_helper()$/;"	v
_ppg_temp_ph	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^    import _ppg_temp_ph$/;"	i
_sleep_us	.\SpinAPI\src\usb.c	/^_sleep_us(unsigned int us_delay)$/;"	f
_sleep_us	.\SpinAPI\src\usb.c	34;"	d	file:
_swig_getattr	.\ppg.py	/^def _swig_getattr(self, class_type, name):$/;"	f
_swig_getattr	.\swig\Hahn_echo\Hahn_echo.py	/^def _swig_getattr(self, class_type, name):$/;"	f
_swig_getattr	.\swig\example\example.py	/^def _swig_getattr(self, class_type, name):$/;"	f
_swig_getattr	.\swig\example\get_rand_array\get_rand_array.py	/^def _swig_getattr(self, class_type, name):$/;"	f
_swig_getattr	.\swig\ppg_lang\ppg.py	/^def _swig_getattr(self, class_type, name):$/;"	f
_swig_getattr	.\swig\ppg_lang\ppg_lang.py	/^def _swig_getattr(self, class_type, name):$/;"	f
_swig_getattr	.\swig\ppg_lang\temp\ppg_temp.py	/^def _swig_getattr(self, class_type, name):$/;"	f
_swig_getattr	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def _swig_getattr(self, class_type, name):$/;"	f
_swig_property	.\ppg.py	/^    _swig_property = property$/;"	v
_swig_property	.\swig\Hahn_echo\Hahn_echo.py	/^    _swig_property = property$/;"	v
_swig_property	.\swig\example\example.py	/^    _swig_property = property$/;"	v
_swig_property	.\swig\example\get_rand_array\get_rand_array.py	/^    _swig_property = property$/;"	v
_swig_property	.\swig\ppg_lang\ppg.py	/^    _swig_property = property$/;"	v
_swig_property	.\swig\ppg_lang\ppg_lang.py	/^    _swig_property = property$/;"	v
_swig_property	.\swig\ppg_lang\temp\ppg_temp.py	/^    _swig_property = property$/;"	v
_swig_property	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^    _swig_property = property$/;"	v
_swig_python_version_info	.\ppg.py	/^from sys import version_info as _swig_python_version_info$/;"	i
_swig_python_version_info	.\swig\Hahn_echo\Hahn_echo.py	/^from sys import version_info as _swig_python_version_info$/;"	i
_swig_python_version_info	.\swig\example\example.py	/^from sys import version_info as _swig_python_version_info$/;"	i
_swig_python_version_info	.\swig\example\get_rand_array\get_rand_array.py	/^from sys import version_info as _swig_python_version_info$/;"	i
_swig_python_version_info	.\swig\ppg_lang\ppg.py	/^from sys import version_info as _swig_python_version_info$/;"	i
_swig_python_version_info	.\swig\ppg_lang\ppg_lang.py	/^from sys import version_info as _swig_python_version_info$/;"	i
_swig_python_version_info	.\swig\ppg_lang\temp\ppg_temp.py	/^from sys import version_info as _swig_python_version_info$/;"	i
_swig_python_version_info	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^from sys import version_info as _swig_python_version_info$/;"	i
_swig_repr	.\ppg.py	/^def _swig_repr(self):$/;"	f
_swig_repr	.\swig\Hahn_echo\Hahn_echo.py	/^def _swig_repr(self):$/;"	f
_swig_repr	.\swig\example\example.py	/^def _swig_repr(self):$/;"	f
_swig_repr	.\swig\example\get_rand_array\get_rand_array.py	/^def _swig_repr(self):$/;"	f
_swig_repr	.\swig\ppg_lang\ppg.py	/^def _swig_repr(self):$/;"	f
_swig_repr	.\swig\ppg_lang\ppg_lang.py	/^def _swig_repr(self):$/;"	f
_swig_repr	.\swig\ppg_lang\temp\ppg_temp.py	/^def _swig_repr(self):$/;"	f
_swig_repr	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def _swig_repr(self):$/;"	f
_swig_setattr	.\ppg.py	/^def _swig_setattr(self, class_type, name, value):$/;"	f
_swig_setattr	.\swig\Hahn_echo\Hahn_echo.py	/^def _swig_setattr(self, class_type, name, value):$/;"	f
_swig_setattr	.\swig\example\example.py	/^def _swig_setattr(self, class_type, name, value):$/;"	f
_swig_setattr	.\swig\example\get_rand_array\get_rand_array.py	/^def _swig_setattr(self, class_type, name, value):$/;"	f
_swig_setattr	.\swig\ppg_lang\ppg.py	/^def _swig_setattr(self, class_type, name, value):$/;"	f
_swig_setattr	.\swig\ppg_lang\ppg_lang.py	/^def _swig_setattr(self, class_type, name, value):$/;"	f
_swig_setattr	.\swig\ppg_lang\temp\ppg_temp.py	/^def _swig_setattr(self, class_type, name, value):$/;"	f
_swig_setattr	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def _swig_setattr(self, class_type, name, value):$/;"	f
_swig_setattr_nondynamic	.\ppg.py	/^def _swig_setattr_nondynamic(self, class_type, name, value, static=1):$/;"	f
_swig_setattr_nondynamic	.\swig\Hahn_echo\Hahn_echo.py	/^def _swig_setattr_nondynamic(self, class_type, name, value, static=1):$/;"	f
_swig_setattr_nondynamic	.\swig\example\example.py	/^def _swig_setattr_nondynamic(self, class_type, name, value, static=1):$/;"	f
_swig_setattr_nondynamic	.\swig\example\get_rand_array\get_rand_array.py	/^def _swig_setattr_nondynamic(self, class_type, name, value, static=1):$/;"	f
_swig_setattr_nondynamic	.\swig\ppg_lang\ppg.py	/^def _swig_setattr_nondynamic(self, class_type, name, value, static=1):$/;"	f
_swig_setattr_nondynamic	.\swig\ppg_lang\ppg_lang.py	/^def _swig_setattr_nondynamic(self, class_type, name, value, static=1):$/;"	f
_swig_setattr_nondynamic	.\swig\ppg_lang\temp\ppg_temp.py	/^def _swig_setattr_nondynamic(self, class_type, name, value, static=1):$/;"	f
_swig_setattr_nondynamic	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def _swig_setattr_nondynamic(self, class_type, name, value, static=1):$/;"	f
_swigc__p___int64	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p___int64[] = {  {&_swigt__p___int64, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_char	.\ppg_wrap.c	/^static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_char	.\swig\Hahn_echo\.c	/^static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_char	.\swig\example\example_wrap.c	/^static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_char	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_char	.\swig\ppg_lang\ppg_lang_wrap.c	/^static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_char	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_char	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_double	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_float	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_int	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_p_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_p_unsigned_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_p_unsigned_long[] = {  {&_swigt__p_p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_short	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_signed___int64	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_signed___int64[] = {  {&_swigt__p_signed___int64, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_signed_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_unsigned___int64	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_unsigned___int64[] = {  {&_swigt__p_unsigned___int64, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_unsigned_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_unsigned_int	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_unsigned_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_unsigned_short	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigt__p___int64	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p___int64 = {"_p___int64", "__int64 *|LONGLONG *|LONG64 *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_char	.\ppg_wrap.c	/^static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_char	.\swig\Hahn_echo\.c	/^static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_char = {"_p_char", "CHAR *|TCHAR *|char *|CCHAR *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_char	.\swig\example\example_wrap.c	/^static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_char	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_char	.\swig\ppg_lang\ppg_lang_wrap.c	/^static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_char	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_char	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_double	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_float	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_float = {"_p_float", "FLOAT *|float *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_int	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_int = {"_p_int", "BOOL *|INT32 *|int *|INT *|INT_PTR *|LONG32 *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_long = {"_p_long", "SHANDLE_PTR *|LONG_PTR *|LONG *|HRESULT *|long *|SSIZE_T *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_p_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_p_char = {"_p_p_char", "PTCH *|PCTSTR *|LPCTSTR *|LPTCH *|PUTSTR *|LPUTSTR *|PCUTSTR *|LPCUTSTR *|char **|PTSTR *|LPTSTR *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_p_unsigned_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_p_unsigned_long = {"_p_p_unsigned_long", "unsigned long **|PLCID *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_short	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_short = {"_p_short", "HALF_PTR *|short *|SHORT *|INT16 *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_signed___int64	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_signed___int64 = {"_p_signed___int64", "INT64 *|signed __int64 *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_signed_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|INT8 *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_unsigned___int64	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_unsigned___int64 = {"_p_unsigned___int64", "UINT64 *|DWORD64 *|unsigned __int64 *|DWORDLONG *|ULONGLONG *|ULONG64 *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_unsigned_char	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "FCHAR *|unsigned char *|UCHAR *|BYTE *|TBYTE *|UINT8 *|BOOLEAN *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_unsigned_int	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "UINT32 *|DWORD32 *|UINT *|unsigned int *|UINT_PTR *|ULONG32 *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_unsigned_long	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "HANDLE_PTR *|DWORD *|ULONG_PTR *|DWORD_PTR *|FLONG *|unsigned long *|ULONG *|SIZE_T *|LCID *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_unsigned_short	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "WORD *|UHALF_PTR *|unsigned short *|USHORT *|FSHORT *|LANGID *|UINT16 *", 0, 0, (void*)0, 0};$/;"	v	file:
a180_time	.\Sleator_apps\CPMG\cpmg.h	/^	double a180_time;           \/\/us$/;"	m	struct:SCANPARAMS
a90_time	.\Sleator_apps\CPMG\cpmg.h	/^	double a90_time;            \/\/us$/;"	m	struct:SCANPARAMS
acqTime_ms	.\CPMG.h	/^    double acqTime_ms;$/;"	m	struct:SCANPARAMS
acqTime_ms	.\Field_Sweep.h	/^    double acqTime_ms;$/;"	m	struct:SCANPARAMS
acqTime_ms	.\GradientEcho.h	/^	double acqTime_ms;$/;"	m	struct:SCANPARAMS
acqTime_ms	.\Hahn_echo.h	/^    double acqTime_ms;$/;"	m	struct:SCANPARAMS
acqTime_ms	.\IR.h	/^    double acqTime_ms;$/;"	m	struct:SCANPARAMS
acqTime_ms	.\JFAB_Hahn_echo_hardcode.c	/^    double acqTime_ms;$/;"	m	struct:SCANPARAMS	file:
acqTime_ms	.\nutation.h	/^    double acqTime_ms;$/;"	m	struct:SCANPARAMS
acqTime_ms	.\nutation90.h	/^    double acqTime_ms;$/;"	m	struct:SCANPARAMS
acqTime_ms	.\p90.h	/^    double acqTime_ms;$/;"	m	struct:SCANPARAMS
acq_1	.\SpinAPI\src\caps.h	/^  unsigned int acq_1;$/;"	m	struct:__anon10
acq_1	.\mrispinapi.h	/^	DWORD acq_1;$/;"	m	struct:__anon4
acq_2	.\SpinAPI\src\caps.h	/^  unsigned int acq_2;$/;"	m	struct:__anon10
acq_2	.\mrispinapi.h	/^	DWORD acq_2;$/;"	m	struct:__anon4
acq_count_reset	.\mrispinapi.h	/^	CONTROL acq_count_reset;$/;"	m	struct:__anon4
acq_num_samples	.\mrispinapi.h	/^	CONTROL acq_num_samples;$/;"	m	struct:__anon4
acq_num_segments	.\mrispinapi.h	/^	CONTROL acq_num_segments;$/;"	m	struct:__anon4
acq_segment_reset	.\mrispinapi.h	/^	CONTROL acq_segment_reset;$/;"	m	struct:__anon4
acq_time	.\swig\Hahn_echo\run_Hahn_echo.py	/^acq_time = Hahn_echo.configureRX(SW_kHz, nPoints, nScans) #ms$/;"	v
acquisition_disabled	.\SpinAPI\src\caps.h	/^  int acquisition_disabled;   \/** set to 1 if board does not allow data acquisition *\/$/;"	m	struct:__anon10
actualSW_Hz	.\CPMG.h	/^    double actualSW_Hz;$/;"	m	struct:SCANPARAMS
actualSW_Hz	.\Field_Sweep.h	/^    double actualSW_Hz;$/;"	m	struct:SCANPARAMS
actualSW_Hz	.\Hahn_echo.h	/^    double actualSW_Hz;$/;"	m	struct:SCANPARAMS
actualSW_Hz	.\IR.h	/^    double actualSW_Hz;$/;"	m	struct:SCANPARAMS
actualSW_Hz	.\JFAB_Hahn_echo_hardcode.c	/^    double actualSW_Hz;$/;"	m	struct:SCANPARAMS	file:
actualSW_Hz	.\nutation.h	/^    double actualSW_Hz;$/;"	m	struct:SCANPARAMS
actualSW_Hz	.\nutation90.h	/^    double actualSW_Hz;$/;"	m	struct:SCANPARAMS
actualSW_Hz	.\p90.h	/^    double actualSW_Hz;$/;"	m	struct:SCANPARAMS
actualSpectralWidth	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double actualSpectralWidth;$/;"	m	struct:SCANPARAMS
actualSpectralWidth	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double actualSpectralWidth;$/;"	m	struct:SCANPARAMS
actualSpectralWidth	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double actualSpectralWidth;$/;"	m	struct:SCANPARAMS
actualSpectralWidth	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double actualSpectralWidth;$/;"	m	struct:SCANPARAMS
actualSpectralWidth	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	double actualSpectralWidth;$/;"	m	struct:SCANPARAMS
actualSpectralWidth_Hz	.\GradientEcho.h	/^	double actualSpectralWidth_Hz;$/;"	m	struct:SCANPARAMS
actual_SW	.\Sleator_apps\CPMG\cpmg.h	/^	double actual_SW;           \/\/kHz$/;"	m	struct:SCANPARAMS
actual_SW	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	double actual_SW;           \/\/kHz$/;"	m	struct:SCANPARAMS
adc	.\SpinAPI\include\radioprocessor.h	/^  int adc;$/;"	m	struct:__anon9
adc	.\SpinAPI\src\radioprocessor.h	/^  int adc;$/;"	m	struct:__anon94
adcFrequency	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double adcFrequency;$/;"	m	struct:SCANPARAMS
adcFrequency	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double adcFrequency;$/;"	m	struct:SCANPARAMS
adcFrequency	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double adcFrequency;$/;"	m	struct:SCANPARAMS
adcFrequency	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double adcFrequency;$/;"	m	struct:SCANPARAMS
adcFrequency	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	double adcFrequency;$/;"	m	struct:SCANPARAMS
adcFrequency_MHz	.\CPMG.h	/^    double adcFrequency_MHz;$/;"	m	struct:SCANPARAMS
adcFrequency_MHz	.\Field_Sweep.h	/^    double adcFrequency_MHz;$/;"	m	struct:SCANPARAMS
adcFrequency_MHz	.\GradientEcho.h	/^	double adcFrequency_MHz;$/;"	m	struct:SCANPARAMS
adcFrequency_MHz	.\Hahn_echo.h	/^    double adcFrequency_MHz;$/;"	m	struct:SCANPARAMS
adcFrequency_MHz	.\IR.h	/^    double adcFrequency_MHz;$/;"	m	struct:SCANPARAMS
adcFrequency_MHz	.\JFAB_Hahn_echo_hardcode.c	/^    double adcFrequency_MHz;$/;"	m	struct:SCANPARAMS	file:
adcFrequency_MHz	.\nutation.h	/^    double adcFrequency_MHz;$/;"	m	struct:SCANPARAMS
adcFrequency_MHz	.\nutation90.h	/^    double adcFrequency_MHz;$/;"	m	struct:SCANPARAMS
adcFrequency_MHz	.\p90.h	/^    double adcFrequency_MHz;$/;"	m	struct:SCANPARAMS
adcOffset	.\2D_MRI.py	/^adcOffset=74$/;"	v
adcOffset	.\CPMG.h	/^    int adcOffset;$/;"	m	struct:SCANPARAMS
adcOffset	.\Field_Sweep.h	/^    int adcOffset;$/;"	m	struct:SCANPARAMS
adcOffset	.\GradientEcho.h	/^	int adcOffset; \/\/ 74 for K004$/;"	m	struct:SCANPARAMS
adcOffset	.\Hahn_echo.h	/^    int adcOffset;$/;"	m	struct:SCANPARAMS
adcOffset	.\IR.h	/^    int adcOffset;$/;"	m	struct:SCANPARAMS
adcOffset	.\JFAB_Hahn_echo_hardcode.c	/^    int adcOffset;$/;"	m	struct:SCANPARAMS	file:
adcOffset	.\nutation.h	/^    int adcOffset;$/;"	m	struct:SCANPARAMS
adcOffset	.\nutation90.h	/^    int adcOffset;$/;"	m	struct:SCANPARAMS
adcOffset	.\p90.h	/^    int adcOffset;$/;"	m	struct:SCANPARAMS
adcOffset	.\swig\Hahn_echo\run_Hahn_echo.py	/^adcOffset = 48$/;"	v
adcOffset	.\swig\ppg_lang\temp\run_temp.py	/^adcOffset = 48$/;"	v
adcOffset	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^adcOffset = 48$/;"	v
adc_clock_MHz	.\SpinAPI\src\caps.h	/^  double adc_clock_MHz;$/;"	m	struct:__anon10
adc_clock_MHz	.\mrispinapi.h	/^	double adc_clock_MHz;$/;"	m	struct:__anon4
adc_offset	.\mrispinapi.h	/^	CONTROL adc_offset;$/;"	m	struct:__anon4
add_sub_im_0	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int add_sub_im_0;$/;"	m	struct:CYCLOPSPARAMS
add_sub_im_1	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int add_sub_im_1;$/;"	m	struct:CYCLOPSPARAMS
add_sub_im_2	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int add_sub_im_2;$/;"	m	struct:CYCLOPSPARAMS
add_sub_im_3	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int add_sub_im_3;$/;"	m	struct:CYCLOPSPARAMS
add_sub_re_0	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int add_sub_re_0;$/;"	m	struct:CYCLOPSPARAMS
add_sub_re_1	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int add_sub_re_1;$/;"	m	struct:CYCLOPSPARAMS
add_sub_re_2	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int add_sub_re_2;$/;"	m	struct:CYCLOPSPARAMS
add_sub_re_3	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int add_sub_re_3;$/;"	m	struct:CYCLOPSPARAMS
addr_offset	.\devices.h	/^	DWORD addr_offset;$/;"	m	struct:__anon3
address	.\controls.h	/^	DWORD address;$/;"	m	struct:__anon2
allocInitMem	.\Sleator_apps\CPMG\cpmg.c	/^int allocInitMem (void **array, int size){$/;"	f
allocInitMem	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^int allocInitMem (void **array, int size){$/;"	f
amp_shape	.\mrispinapi.h	/^	DEVICE amp_shape;$/;"	m	struct:__anon4
amp_shape_offset	.\SpinAPI\src\caps.h	/^  unsigned int amp_shape_offset;$/;"	m	struct:__anon10
amp_shape_width	.\SpinAPI\src\caps.h	/^  unsigned int amp_shape_width; \/\/ uses shape registers$/;"	m	struct:__anon10
amplitude	.\2D_MRI.py	/^amplitude=1.0$/;"	v
amplitude	.\CPMG.h	/^    double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\Field_Sweep.h	/^    double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\GradientEcho.h	/^	double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\Hahn_echo.h	/^    double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\IR.h	/^    double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\JFAB_Hahn_echo_hardcode.c	/^    double amplitude;$/;"	m	struct:SCANPARAMS	file:
amplitude	.\Sleator_apps\CPMG\cpmg.h	/^	double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^    double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\nutation.h	/^    double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\nutation90.h	/^    double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\p90.h	/^    double amplitude;$/;"	m	struct:SCANPARAMS
amplitude	.\swig\Hahn_echo\run_Hahn_echo.py	/^amplitude = 1.0$/;"	v
amplitude	.\swig\ppg_lang\temp\run_temp.py	/^amplitude = 1.0$/;"	v
amplitude	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^amplitude = 1.0$/;"	v
apply_cycles	.\swig\ppg_lang\ppg_lang.py	/^def apply_cycles(ppg_in,list_of_cycles_found):$/;"	f
apply_cycles	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def apply_cycles(ppg_in,list_of_cycles_found):$/;"	f
array_clearflags	.\swig\Hahn_echo\Hahn_echo_wrap.c	3344;"	d	file:
array_clearflags	.\swig\Hahn_echo\Hahn_echo_wrap.c	3359;"	d	file:
array_clearflags	.\swig\example\get_rand_array\get_rand_array_wrap.c	3049;"	d	file:
array_clearflags	.\swig\example\get_rand_array\get_rand_array_wrap.c	3064;"	d	file:
array_data	.\swig\Hahn_echo\Hahn_echo_wrap.c	3341;"	d	file:
array_data	.\swig\Hahn_echo\Hahn_echo_wrap.c	3355;"	d	file:
array_data	.\swig\example\get_rand_array\get_rand_array_wrap.c	3046;"	d	file:
array_data	.\swig\example\get_rand_array\get_rand_array_wrap.c	3060;"	d	file:
array_descr	.\swig\Hahn_echo\Hahn_echo_wrap.c	3342;"	d	file:
array_descr	.\swig\Hahn_echo\Hahn_echo_wrap.c	3356;"	d	file:
array_descr	.\swig\example\get_rand_array\get_rand_array_wrap.c	3047;"	d	file:
array_descr	.\swig\example\get_rand_array\get_rand_array_wrap.c	3061;"	d	file:
array_dimensions	.\swig\Hahn_echo\Hahn_echo_wrap.c	3337;"	d	file:
array_dimensions	.\swig\Hahn_echo\Hahn_echo_wrap.c	3351;"	d	file:
array_dimensions	.\swig\example\get_rand_array\get_rand_array_wrap.c	3042;"	d	file:
array_dimensions	.\swig\example\get_rand_array\get_rand_array_wrap.c	3056;"	d	file:
array_enableflags	.\swig\Hahn_echo\Hahn_echo_wrap.c	3345;"	d	file:
array_enableflags	.\swig\Hahn_echo\Hahn_echo_wrap.c	3358;"	d	file:
array_enableflags	.\swig\example\get_rand_array\get_rand_array_wrap.c	3050;"	d	file:
array_enableflags	.\swig\example\get_rand_array\get_rand_array_wrap.c	3063;"	d	file:
array_flags	.\swig\Hahn_echo\Hahn_echo_wrap.c	3343;"	d	file:
array_flags	.\swig\Hahn_echo\Hahn_echo_wrap.c	3357;"	d	file:
array_flags	.\swig\example\get_rand_array\get_rand_array_wrap.c	3048;"	d	file:
array_flags	.\swig\example\get_rand_array\get_rand_array_wrap.c	3062;"	d	file:
array_is_contiguous	.\swig\Hahn_echo\Hahn_echo_wrap.c	3362;"	d	file:
array_is_contiguous	.\swig\example\get_rand_array\get_rand_array_wrap.c	3067;"	d	file:
array_is_fortran	.\swig\Hahn_echo\Hahn_echo_wrap.c	3346;"	d	file:
array_is_fortran	.\swig\Hahn_echo\Hahn_echo_wrap.c	3360;"	d	file:
array_is_fortran	.\swig\example\get_rand_array\get_rand_array_wrap.c	3051;"	d	file:
array_is_fortran	.\swig\example\get_rand_array\get_rand_array_wrap.c	3065;"	d	file:
array_is_native	.\swig\Hahn_echo\Hahn_echo_wrap.c	3363;"	d	file:
array_is_native	.\swig\example\get_rand_array\get_rand_array_wrap.c	3068;"	d	file:
array_numdims	.\swig\Hahn_echo\Hahn_echo_wrap.c	3336;"	d	file:
array_numdims	.\swig\Hahn_echo\Hahn_echo_wrap.c	3350;"	d	file:
array_numdims	.\swig\example\get_rand_array\get_rand_array_wrap.c	3041;"	d	file:
array_numdims	.\swig\example\get_rand_array\get_rand_array_wrap.c	3055;"	d	file:
array_size	.\swig\Hahn_echo\Hahn_echo_wrap.c	3338;"	d	file:
array_size	.\swig\Hahn_echo\Hahn_echo_wrap.c	3354;"	d	file:
array_size	.\swig\example\get_rand_array\get_rand_array_wrap.c	3043;"	d	file:
array_size	.\swig\example\get_rand_array\get_rand_array_wrap.c	3059;"	d	file:
array_stride	.\swig\Hahn_echo\Hahn_echo_wrap.c	3340;"	d	file:
array_stride	.\swig\Hahn_echo\Hahn_echo_wrap.c	3353;"	d	file:
array_stride	.\swig\example\get_rand_array\get_rand_array_wrap.c	3045;"	d	file:
array_stride	.\swig\example\get_rand_array\get_rand_array_wrap.c	3058;"	d	file:
array_strides	.\swig\Hahn_echo\Hahn_echo_wrap.c	3339;"	d	file:
array_strides	.\swig\Hahn_echo\Hahn_echo_wrap.c	3352;"	d	file:
array_strides	.\swig\example\get_rand_array\get_rand_array_wrap.c	3044;"	d	file:
array_strides	.\swig\example\get_rand_array\get_rand_array_wrap.c	3057;"	d	file:
array_type	.\swig\Hahn_echo\Hahn_echo_wrap.c	3335;"	d	file:
array_type	.\swig\Hahn_echo\Hahn_echo_wrap.c	3349;"	d	file:
array_type	.\swig\example\get_rand_array\get_rand_array_wrap.c	3040;"	d	file:
array_type	.\swig\example\get_rand_array\get_rand_array_wrap.c	3054;"	d	file:
as_buffer	.\ppg_wrap.c	/^  PyBufferProcs as_buffer;$/;"	m	struct:__anon5	file:
as_buffer	.\swig\Hahn_echo\.c	/^  PyBufferProcs as_buffer;$/;"	m	struct:__anon103	file:
as_buffer	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyBufferProcs as_buffer;$/;"	m	struct:__anon107	file:
as_buffer	.\swig\example\example_wrap.c	/^  PyBufferProcs as_buffer;$/;"	m	struct:__anon95	file:
as_buffer	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyBufferProcs as_buffer;$/;"	m	struct:__anon99	file:
as_buffer	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyBufferProcs as_buffer;$/;"	m	struct:__anon111	file:
as_buffer	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyBufferProcs as_buffer;$/;"	m	struct:__anon115	file:
as_buffer	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyBufferProcs as_buffer;$/;"	m	struct:__anon119	file:
as_mapping	.\ppg_wrap.c	/^  PyMappingMethods as_mapping;$/;"	m	struct:__anon5	file:
as_mapping	.\swig\Hahn_echo\.c	/^  PyMappingMethods as_mapping;$/;"	m	struct:__anon103	file:
as_mapping	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyMappingMethods as_mapping;$/;"	m	struct:__anon107	file:
as_mapping	.\swig\example\example_wrap.c	/^  PyMappingMethods as_mapping;$/;"	m	struct:__anon95	file:
as_mapping	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyMappingMethods as_mapping;$/;"	m	struct:__anon99	file:
as_mapping	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyMappingMethods as_mapping;$/;"	m	struct:__anon111	file:
as_mapping	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyMappingMethods as_mapping;$/;"	m	struct:__anon115	file:
as_mapping	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyMappingMethods as_mapping;$/;"	m	struct:__anon119	file:
as_number	.\ppg_wrap.c	/^  PyNumberMethods as_number;$/;"	m	struct:__anon5	file:
as_number	.\swig\Hahn_echo\.c	/^  PyNumberMethods as_number;$/;"	m	struct:__anon103	file:
as_number	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyNumberMethods as_number;$/;"	m	struct:__anon107	file:
as_number	.\swig\example\example_wrap.c	/^  PyNumberMethods as_number;$/;"	m	struct:__anon95	file:
as_number	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyNumberMethods as_number;$/;"	m	struct:__anon99	file:
as_number	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyNumberMethods as_number;$/;"	m	struct:__anon111	file:
as_number	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyNumberMethods as_number;$/;"	m	struct:__anon115	file:
as_number	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyNumberMethods as_number;$/;"	m	struct:__anon119	file:
as_sequence	.\ppg_wrap.c	/^  PySequenceMethods as_sequence;$/;"	m	struct:__anon5	file:
as_sequence	.\swig\Hahn_echo\.c	/^  PySequenceMethods as_sequence;$/;"	m	struct:__anon103	file:
as_sequence	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PySequenceMethods as_sequence;$/;"	m	struct:__anon107	file:
as_sequence	.\swig\example\example_wrap.c	/^  PySequenceMethods as_sequence;$/;"	m	struct:__anon95	file:
as_sequence	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PySequenceMethods as_sequence;$/;"	m	struct:__anon99	file:
as_sequence	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PySequenceMethods as_sequence;$/;"	m	struct:__anon111	file:
as_sequence	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PySequenceMethods as_sequence;$/;"	m	struct:__anon115	file:
as_sequence	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PySequenceMethods as_sequence;$/;"	m	struct:__anon119	file:
average	.\SpinAPI\include\radioprocessor.h	/^  int average;$/;"	m	struct:__anon9
average	.\SpinAPI\src\radioprocessor.h	/^  int average;$/;"	m	struct:__anon94
avg_min	.\proc_quick.py	/^    avg_min = abs(even_echo['echo':(10,-1)]).data.mean()$/;"	v
avg_min	.\swig\Hahn_echo\proc_echo.py	/^    avg_min = abs(even_echo['echo':(10,-1)]).data.mean()$/;"	v
b	.\bitmap.h	/^	char b;$/;"	m	struct:tagPIXELCOLOR
b	.\bitmap.h	/^	unsigned char* b;$/;"	m	struct:tagCOLORMAP
bAlternateSetting	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bAlternateSetting;$/;"	m	struct:_USB_INTERFACE_DESCRIPTOR
bBusPowerSavingD1	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bBusPowerSavingD1;$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
bBusPowerSavingD1	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bBusPowerSavingD1;$/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
bBusPowerSavingD2	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bBusPowerSavingD2;$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
bBusPowerSavingD2	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bBusPowerSavingD2;$/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
bBusPowerSavingD3	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bBusPowerSavingD3;$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
bBusPowerSavingD3	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bBusPowerSavingD3;$/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
bChanged	.\SpinAPI\interpreter\src\gui.cpp	/^bool bChanged = false; \/\/ Has the open file changed?$/;"	v
bConfigurationValue	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bConfigurationValue;$/;"	m	struct:_USB_CONFIGURATION_DESCRIPTOR
bDebug	.\SpinAPI\interpreter\src\gui.cpp	/^bool bDebug = false; \/\/ Show debug info?$/;"	v
bDescriptorLength	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bDescriptorLength;$/;"	m	struct:_USB_HUB_DESCRIPTOR
bDescriptorType	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bDescriptorType;$/;"	m	struct:_USB_COMMON_DESCRIPTOR
bDescriptorType	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bDescriptorType;$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
bDescriptorType	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bDescriptorType;$/;"	m	struct:_USB_HUB_DESCRIPTOR
bDescriptorType	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bDescriptorType;$/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
bDescriptorType	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bDescriptorType;$/;"	m	struct:_USB_CONFIGURATION_DESCRIPTOR
bDescriptorType	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bDescriptorType;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
bDescriptorType	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bDescriptorType;$/;"	m	struct:_USB_ENDPOINT_DESCRIPTOR
bDescriptorType	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bDescriptorType;$/;"	m	struct:_USB_INTERFACE_DESCRIPTOR
bDescriptorType	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bDescriptorType;$/;"	m	struct:_USB_STRING_DESCRIPTOR
bDeviceClass	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bDeviceClass;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
bDeviceProtocol	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bDeviceProtocol;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
bDeviceSubClass	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bDeviceSubClass;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
bEndpointAddress	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bEndpointAddress;$/;"	m	struct:_USB_ENDPOINT_DESCRIPTOR
bHubControlCurrent	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bHubControlCurrent;$/;"	m	struct:_USB_HUB_DESCRIPTOR
bInterfaceClass	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bInterfaceClass;$/;"	m	struct:_USB_INTERFACE_DESCRIPTOR
bInterfaceNumber	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bInterfaceNumber;$/;"	m	struct:_USB_INTERFACE_DESCRIPTOR
bInterfaceProtocol	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bInterfaceProtocol;$/;"	m	struct:_USB_INTERFACE_DESCRIPTOR
bInterfaceSubClass	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bInterfaceSubClass;$/;"	m	struct:_USB_INTERFACE_DESCRIPTOR
bInterval	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bInterval;$/;"	m	struct:_USB_ENDPOINT_DESCRIPTOR
bLength	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bLength;$/;"	m	struct:_USB_COMMON_DESCRIPTOR
bLength	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bLength;$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
bLength	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bLength;$/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
bLength	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bLength;$/;"	m	struct:_USB_CONFIGURATION_DESCRIPTOR
bLength	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bLength;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
bLength	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bLength;$/;"	m	struct:_USB_ENDPOINT_DESCRIPTOR
bLength	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bLength;$/;"	m	struct:_USB_INTERFACE_DESCRIPTOR
bLength	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bLength;$/;"	m	struct:_USB_STRING_DESCRIPTOR
bMaxPacketSize0	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bMaxPacketSize0;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
bNumConfigurations	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bNumConfigurations;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
bNumEndpoints	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bNumEndpoints;$/;"	m	struct:_USB_INTERFACE_DESCRIPTOR
bNumInterfaces	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bNumInterfaces;$/;"	m	struct:_USB_CONFIGURATION_DESCRIPTOR
bNumberOfPorts	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bNumberOfPorts;$/;"	m	struct:_USB_HUB_DESCRIPTOR
bPowerOnToPowerGood	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bPowerOnToPowerGood;$/;"	m	struct:_USB_HUB_DESCRIPTOR
bPowerSummaryId	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bPowerSummaryId;$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
bRemoveAndPowerMask	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bRemoveAndPowerMask[64];$/;"	m	struct:_USB_HUB_DESCRIPTOR
bRequest	.\SpinAPI\src\cyioctl.h	/^    UCHAR bRequest;$/;"	m	struct:_SETUP_PACKET
bSelfPowerSavingD1	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bSelfPowerSavingD1;$/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
bSelfPowerSavingD1	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bSelfPowerSavingD1;$/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
bSelfPowerSavingD2	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bSelfPowerSavingD2; $/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
bSelfPowerSavingD2	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bSelfPowerSavingD2; $/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
bSelfPowerSavingD3	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bSelfPowerSavingD3; $/;"	m	struct:_USB_CONFIGURATION_POWER_DESCRIPTOR
bSelfPowerSavingD3	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bSelfPowerSavingD3; $/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
bString	.\SpinAPI\src\ddk_headers\usb100.h	/^  WCHAR  bString[1];$/;"	m	struct:_USB_STRING_DESCRIPTOR
base_addr_array	.\SpinAPI\src\driver-linux-direct.c	/^static int base_addr_array[MAX_NUM_BOARDS];$/;"	v	file:
bcdDevice	.\SpinAPI\src\ddk_headers\usb100.h	/^  USHORT  bcdDevice;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
bcdUSB	.\SpinAPI\src\ddk_headers\usb100.h	/^  USHORT  bcdUSB;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
bcd_Hz	.\SpinAPI\include\spinpts.h	/^	char bcd_Hz[3];  $/;"	m	struct:BCDFREQ
bcd_Hz	.\SpinAPI\src\spinpts.h	/^	char bcd_Hz[3];  $/;"	m	struct:BCDFREQ
bcd_MHz	.\SpinAPI\include\spinpts.h	/^	char bcd_MHz[3]; $/;"	m	struct:BCDFREQ
bcd_MHz	.\SpinAPI\src\spinpts.h	/^	char bcd_MHz[3]; $/;"	m	struct:BCDFREQ
bcd_kHz	.\SpinAPI\include\spinpts.h	/^	char bcd_kHz[3]; $/;"	m	struct:BCDFREQ
bcd_kHz	.\SpinAPI\src\spinpts.h	/^	char bcd_kHz[3]; $/;"	m	struct:BCDFREQ
bcd_pHz	.\SpinAPI\include\spinpts.h	/^	char bcd_pHz[3]; $/;"	m	struct:BCDFREQ
bcd_pHz	.\SpinAPI\src\spinpts.h	/^	char bcd_pHz[3]; $/;"	m	struct:BCDFREQ
bfOffBits	.\bitmap.h	/^	uint32_t bfOffBits;$/;"	m	struct:tagBITMAPFILEHEADER
bfReserved1	.\bitmap.h	/^	uint16_t bfReserved1;$/;"	m	struct:tagBITMAPFILEHEADER
bfReserved2	.\bitmap.h	/^	uint16_t bfReserved2;$/;"	m	struct:tagBITMAPFILEHEADER
bfSize	.\bitmap.h	/^	uint32_t bfSize;$/;"	m	struct:tagBITMAPFILEHEADER
biBitCount	.\bitmap.h	/^ 	int16_t biBitCount;$/;"	m	struct:tagBITMAPINFOHEADER
biClrImportant	.\bitmap.h	/^ 	uint32_t biClrImportant;$/;"	m	struct:tagBITMAPINFOHEADER
biClrUsed	.\bitmap.h	/^ 	uint32_t biClrUsed;$/;"	m	struct:tagBITMAPINFOHEADER
biCompression	.\bitmap.h	/^ 	uint32_t biCompression;$/;"	m	struct:tagBITMAPINFOHEADER
biHeight	.\bitmap.h	/^ 	int32_t biHeight;$/;"	m	struct:tagBITMAPINFOHEADER
biPlanes	.\bitmap.h	/^ 	int16_t biPlanes;$/;"	m	struct:tagBITMAPINFOHEADER
biSize	.\bitmap.h	/^ 	uint32_t biSize;$/;"	m	struct:tagBITMAPINFOHEADER
biSizeImage	.\bitmap.h	/^ 	uint32_t biSizeImage;$/;"	m	struct:tagBITMAPINFOHEADER
biWidth	.\bitmap.h	/^ 	int32_t biWidth;$/;"	m	struct:tagBITMAPINFOHEADER
biXPelsPerMeter	.\bitmap.h	/^ 	int32_t biXPelsPerMeter;$/;"	m	struct:tagBITMAPINFOHEADER
biYPelsPerMeter	.\bitmap.h	/^ 	int32_t biYPelsPerMeter;$/;"	m	struct:tagBITMAPINFOHEADER
bitrev	.\SpinAPI\src\util.c	/^bitrev(int value, int bits)$/;"	f
bits	.\SpinAPI\src\ddk_headers\winddk.h	/^    } bits;$/;"	m	union:_PCI_SLOT_NUMBER::__anon82	typeref:struct:_PCI_SLOT_NUMBER::__anon82::__anon83
bits	.\controls.h	/^	int bits;$/;"	m	struct:__anon2
blankBit	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	unsigned int blankBit;$/;"	m	struct:SCANPARAMS
blankBit	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	unsigned int blankBit;$/;"	m	struct:SCANPARAMS
blankBit	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	unsigned int blankBit;$/;"	m	struct:SCANPARAMS
blankBit	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	unsigned int blankBit;$/;"	m	struct:SCANPARAMS
blankDelay	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double blankDelay;$/;"	m	struct:SCANPARAMS
blankDelay	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double blankDelay;$/;"	m	struct:SCANPARAMS
blankDelay	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double blankDelay;$/;"	m	struct:SCANPARAMS
blankDelay	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double blankDelay;$/;"	m	struct:SCANPARAMS
blankMask	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	char blankMask;$/;"	m	struct:SCANPARAMS
blankMask	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	char blankMask;$/;"	m	struct:SCANPARAMS
blankMask	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	char blankMask;$/;"	m	struct:SCANPARAMS
blankMask	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	char blankMask;$/;"	m	struct:SCANPARAMS
blankingBit	.\2D_MRI.py	/^blankingBit=0$/;"	v
blankingBit	.\GradientEcho.h	/^	unsigned int blankingBit;$/;"	m	struct:SCANPARAMS
blankingBit	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^    char blankingBit;$/;"	m	struct:SCANPARAMS
blankingDelay	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^    double blankingDelay;$/;"	m	struct:SCANPARAMS
blankingDelay_ms	.\2D_MRI.py	/^blankingDelay_ms=3.0$/;"	v
blankingDelay_ms	.\GradientEcho.h	/^	double blankingDelay_ms;$/;"	m	struct:SCANPARAMS
blankingEnable	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^    char blankingEnable;$/;"	m	struct:SCANPARAMS
bmAttributes	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bmAttributes;$/;"	m	struct:_USB_CONFIGURATION_DESCRIPTOR
bmAttributes	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  bmAttributes;$/;"	m	struct:_USB_ENDPOINT_DESCRIPTOR
bmCapabilitiesFlags	.\SpinAPI\src\ddk_headers\usb100.h	/^	UCHAR  bmCapabilitiesFlags;$/;"	m	struct:_USB_INTERFACE_POWER_DESCRIPTOR
bmReqType	.\SpinAPI\src\cyioctl.h	/^        BM_REQ_TYPE bmReqType;$/;"	m	union:_SETUP_PACKET::__anon11
bmRequest	.\SpinAPI\src\cyioctl.h	/^        UCHAR bmRequest;$/;"	m	union:_SETUP_PACKET::__anon11
bmp_color_conv	.\bitmap.c	/^int bmp_color_conv( double color, unsigned char* r, unsigned char* g, unsigned char* b, COLORMAP map) {$/;"	f
bmp_create_data	.\bitmap.c	/^int bmp_create_data( IMAGE* image, char* data )$/;"	f
bmp_create_file_header	.\bitmap.c	/^int bmp_create_file_header( IMAGE* image, BMPFH* bmp_file_header )$/;"	f
bmp_create_info_header	.\bitmap.c	/^int bmp_create_info_header( IMAGE* image, BMPIH* bmp_info_header )$/;"	f
bmp_file	.\bitmap.h	/^	FILE* bmp_file;$/;"	m	struct:tagBMPFILE
bmp_init_swrite	.\bitmap.c	/^int bmp_init_swrite( BMPFILE* bmp, int rows, int cols, char* file_name )$/;"	f
bmp_swrite	.\bitmap.c	/^int bmp_swrite( BMPFILE* bmp, unsigned char r, unsigned char g, unsigned char b )$/;"	f
bmp_swrite_map	.\bitmap.c	/^int bmp_swrite_map( BMPFILE* bmp, double color, COLORMAP map )$/;"	f
bmp_swrite_progress	.\bitmap.c	/^double bmp_swrite_progress( BMPFILE* bmp )$/;"	f
bmp_write_image_to_bmp	.\bitmap.c	/^int bmp_write_image_to_bmp( IMAGE* image, char* file_name ) {$/;"	f
bmpfh	.\bitmap.h	/^	BMPFH bmpfh;$/;"	m	struct:tagBMPFILE
bmpih	.\bitmap.h	/^	BMPIH bmpih;$/;"	m	struct:tagBMPFILE
bnc_clk_sel	.\mrispinapi.h	/^	CONTROL bnc_clk_sel;$/;"	m	struct:__anon4
board	.\SpinAPI\src\spinapi.c	/^BOARD_INFO board[MAX_NUM_BOARDS];$/;"	v
board_clock_MHz	.\mrispinapi.h	/^	double board_clock_MHz;$/;"	m	struct:__anon4
board_num	.\Sleator_apps\CPMG\cpmg.h	/^	int board_num;$/;"	m	struct:SCANPARAMS
board_num	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	int board_num;$/;"	m	struct:SCANPARAMS
board_num	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	int board_num;$/;"	m	struct:SCANPARAMS
board_num	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	int board_num;$/;"	m	struct:SCANPARAMS
board_num	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	int board_num;$/;"	m	struct:SCANPARAMS
board_num	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int board_num;$/;"	m	struct:SCANPARAMS
board_num	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	int board_num;$/;"	m	struct:SCANPARAMS
bool	.\SpinAPI\src\fid.h	37;"	d
buffer	.\SpinAPI\src\io.h	/^	void *buffer; \/*< Pointer to user-allocated buffer for the IO*\/$/;"	m	struct:io_future_t
bypass_fir	.\Sleator_apps\CPMG\cpmg.h	/^	unsigned short bypass_fir;$/;"	m	struct:SCANPARAMS
bypass_fir	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	unsigned short bypass_fir;$/;"	m	struct:SCANPARAMS
bypass_fir	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	unsigned short bypass_fir;$/;"	m	struct:SCANPARAMS
bypass_fir	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	unsigned short bypass_fir;$/;"	m	struct:SCANPARAMS
bypass_fir	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	unsigned short bypass_fir;$/;"	m	struct:SCANPARAMS
bypass_fir	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	unsigned short bypass_fir;$/;"	m	struct:SCANPARAMS
bypass_fir	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	unsigned short bypass_fir;$/;"	m	struct:SCANPARAMS
calcExpFit	.\Sleator_apps\CPMG\cpmg.c	/^double calcExpFit(int num_points, double* x, double* exp_y){$/;"	f
calcMag	.\Sleator_apps\CPMG\cpmg.c	/^ double * calcMag(int* real, int* imag, int num_points){$/;"	f
calcT2	.\Sleator_apps\CPMG\cpmg.c	/^double calcT2(int num_points, double time_per_point, double* mag){$/;"	f
carrierFreq_MHz	.\CPMG.h	/^    double carrierFreq_MHz;$/;"	m	struct:SCANPARAMS
carrierFreq_MHz	.\Field_Sweep.h	/^    double carrierFreq_MHz;$/;"	m	struct:SCANPARAMS
carrierFreq_MHz	.\Hahn_echo.h	/^    double carrierFreq_MHz;$/;"	m	struct:SCANPARAMS
carrierFreq_MHz	.\IR.h	/^    double carrierFreq_MHz;$/;"	m	struct:SCANPARAMS
carrierFreq_MHz	.\JFAB_Hahn_echo_hardcode.c	/^    double carrierFreq_MHz;$/;"	m	struct:SCANPARAMS	file:
carrierFreq_MHz	.\nutation.h	/^    double carrierFreq_MHz;$/;"	m	struct:SCANPARAMS
carrierFreq_MHz	.\nutation90.h	/^    double carrierFreq_MHz;$/;"	m	struct:SCANPARAMS
carrierFreq_MHz	.\p90.h	/^    double carrierFreq_MHz;$/;"	m	struct:SCANPARAMS
carrierFreq_MHz	.\swig\Hahn_echo\run_Hahn_echo.py	/^carrierFreq_MHz = 14.46$/;"	v
carrierFreq_MHz	.\swig\ppg_lang\temp\run_temp.py	/^carrierFreq_MHz = 14.46$/;"	v
carrierFreq_MHz	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^carrierFreq_MHz = 5.0 $/;"	v
carrier_shape	.\mrispinapi.h	/^	DEVICE carrier_shape;$/;"	m	struct:__anon4
carrier_shape_offset	.\SpinAPI\src\caps.h	/^  unsigned int carrier_shape_offset;$/;"	m	struct:__anon10
carrier_shape_width	.\SpinAPI\src\caps.h	/^  unsigned int carrier_shape_width;$/;"	m	struct:__anon10
cast	.\ppg_wrap.c	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:
cast	.\swig\Hahn_echo\.c	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:
cast	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:
cast	.\swig\example\example_wrap.c	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:
cast	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:
cast	.\swig\ppg_lang\ppg_lang_wrap.c	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:
cast	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:
cast	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:
cast_initial	.\ppg_wrap.c	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:
cast_initial	.\swig\Hahn_echo\.c	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:
cast_initial	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:
cast_initial	.\swig\example\example_wrap.c	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:
cast_initial	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:
cast_initial	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:
cast_initial	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:
cast_initial	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:
cbInQue	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD cbInQue;$/;"	m	struct:_FTCOMSTAT
cbOutQue	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD cbOutQue;$/;"	m	struct:_FTCOMSTAT
charbufferproc	.\ppg_wrap.c	/^typedef getcharbufferproc charbufferproc;$/;"	t	file:
charbufferproc	.\swig\Hahn_echo\.c	/^typedef getcharbufferproc charbufferproc;$/;"	t	file:
charbufferproc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef getcharbufferproc charbufferproc;$/;"	t	file:
charbufferproc	.\swig\example\example_wrap.c	/^typedef getcharbufferproc charbufferproc;$/;"	t	file:
charbufferproc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef getcharbufferproc charbufferproc;$/;"	t	file:
charbufferproc	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef getcharbufferproc charbufferproc;$/;"	t	file:
charbufferproc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef getcharbufferproc charbufferproc;$/;"	t	file:
charbufferproc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef getcharbufferproc charbufferproc;$/;"	t	file:
checkUndersampling	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^checkUndersampling (SCANPARAMS * myScan, int verbose)$/;"	f
checkUndersampling	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^double checkUndersampling (SCANPARAMS * myScan){$/;"	f
cic	.\SpinAPI\include\radioprocessor.h	/^  int cic;$/;"	m	struct:__anon9
cic	.\SpinAPI\src\radioprocessor.h	/^  int cic;$/;"	m	struct:__anon94
cic_1	.\SpinAPI\src\caps.h	/^  unsigned int cic_1;$/;"	m	struct:__anon10
cic_1	.\mrispinapi.h	/^	DWORD cic_1;$/;"	m	struct:__anon4
cic_2	.\SpinAPI\src\caps.h	/^  unsigned int cic_2;$/;"	m	struct:__anon10
cic_2	.\mrispinapi.h	/^	DWORD cic_2;$/;"	m	struct:__anon4
cic_bypass	.\mrispinapi.h	/^	CONTROL cic_bypass;$/;"	m	struct:__anon4
cic_dec_amount	.\mrispinapi.h	/^	CONTROL cic_dec_amount;$/;"	m	struct:__anon4
cic_m_is_two	.\mrispinapi.h	/^	CONTROL cic_m_is_two;$/;"	m	struct:__anon4
cic_max_decim	.\SpinAPI\src\caps.h	/^  int cic_max_decim;$/;"	m	struct:__anon10
cic_max_shift	.\SpinAPI\src\caps.h	/^  int cic_max_shift;$/;"	m	struct:__anon10
cic_max_stages	.\SpinAPI\src\caps.h	/^  int cic_max_stages;$/;"	m	struct:__anon10
cic_shift_amount	.\mrispinapi.h	/^	CONTROL cic_shift_amount;$/;"	m	struct:__anon4
cic_stages	.\mrispinapi.h	/^	CONTROL cic_stages;$/;"	m	struct:__anon4
clientdata	.\ppg_wrap.c	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:
clientdata	.\ppg_wrap.c	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:
clientdata	.\swig\Hahn_echo\.c	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:
clientdata	.\swig\Hahn_echo\.c	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:
clientdata	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:
clientdata	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:
clientdata	.\swig\example\example_wrap.c	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:
clientdata	.\swig\example\example_wrap.c	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:
clientdata	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:
clientdata	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:
clientdata	.\swig\ppg_lang\ppg_lang_wrap.c	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:
clientdata	.\swig\ppg_lang\ppg_lang_wrap.c	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:
clientdata	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:
clientdata	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:
clientdata	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:
clientdata	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:
clock	.\SpinAPI\src\caps.h	/^  double clock;  \/** the clock speed of this board (in GHz)*\/$/;"	m	struct:__anon10
colNum	.\SpinAPI\interpreter\src\interpreter.cpp	/^	unsigned int lineNum, colNum;$/;"	m	struct:tagToken	file:
color	.\bitmap.h	/^	double* color;$/;"	m	struct:tagCOLORMAP
columns	.\bitmap.h	/^	int columns;$/;"	m	struct:tagIMAGE
command	.\SpinAPI\interpreter\src\interpreter.cpp	/^	std::string command;$/;"	m	struct:tagProgramLine	file:
common	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_EEPROM_HEADER common;	\/\/ common elements for all device EEPROMs$/;"	m	struct:ft_eeprom_2232
common	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_EEPROM_HEADER common;	\/\/ common elements for all device EEPROMs$/;"	m	struct:ft_eeprom_2232h
common	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_EEPROM_HEADER common;	\/\/ common elements for all device EEPROMs$/;"	m	struct:ft_eeprom_232b
common	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_EEPROM_HEADER common;	\/\/ common elements for all device EEPROMs$/;"	m	struct:ft_eeprom_232h
common	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_EEPROM_HEADER common;	\/\/ common elements for all device EEPROMs$/;"	m	struct:ft_eeprom_232r
common	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_EEPROM_HEADER common;	\/\/ common elements for all device EEPROMs$/;"	m	struct:ft_eeprom_4232h
common	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_EEPROM_HEADER common;	\/\/ common elements for all device EEPROMs$/;"	m	struct:ft_eeprom_x_series
configureBoard	.\GradientEcho.c	/^int configureBoard(SCANPARAMS * scanParams)$/;"	f
configureBoard	.\JFAB_Hahn_echo_hardcode.c	/^int configureBoard(SCANPARAMS * scanParams)$/;"	f
configureBoard	.\RPG_CPMG.c	/^int configureBoard(SCANPARAMS * scanParams)$/;"	f
configureBoard	.\RPG_Field_Sweep.c	/^int configureBoard(SCANPARAMS * scanParams)$/;"	f
configureBoard	.\RPG_Hahn_echo.c	/^int configureBoard(SCANPARAMS * scanParams)$/;"	f
configureBoard	.\RPG_IR.c	/^int configureBoard(SCANPARAMS * scanParams)$/;"	f
configureBoard	.\RPG_nutation.c	/^int configureBoard(SCANPARAMS * scanParams)$/;"	f
configureBoard	.\RPG_nutation90.c	/^int configureBoard(SCANPARAMS * scanParams)$/;"	f
configureBoard	.\RPG_p90.c	/^int configureBoard(SCANPARAMS * scanParams)$/;"	f
configureBoard	.\Sleator_apps\CPMG\cpmg.c	/^int configureBoard (SCANPARAMS * myScan){$/;"	f
configureBoard	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^configureBoard (SCANPARAMS * myScan)$/;"	f
configureBoard	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^int configureBoard (SCANPARAMS * myScan){$/;"	f
configureBoard	.\adc_offset.c	/^int configureBoard(int adc_offset)$/;"	f
configureRX	.\swig\Hahn_echo\Hahn_echo.c	/^double configureRX(double SW_kHz, unsigned int nPoints, unsigned int nScans){$/;"	f
configureRX	.\swig\Hahn_echo\Hahn_echo.py	/^configureRX = _Hahn_echo.configureRX$/;"	v
configureRX	.\swig\Hahn_echo\Hahn_echo.py	/^def configureRX(SW_kHz, nPoints, nScans):$/;"	f
configureTX	.\swig\Hahn_echo\Hahn_echo.c	/^int configureTX(int adcOffset, double carrierFreq_MHz, double tx_phase, double amplitude, unsigned int nPoints){$/;"	f
configureTX	.\swig\Hahn_echo\Hahn_echo.py	/^configureTX = _Hahn_echo.configureTX$/;"	v
configureTX	.\swig\Hahn_echo\Hahn_echo.py	/^def configureTX(adcOffset, carrierFreq_MHz, tx_phase, amplitude, nPoints):$/;"	f
configureTX	.\swig\ppg_lang\temp\ppg_temp.c	/^int configureTX(int adcOffset, double carrierFreq_MHz, double tx_phase, double amplitude, unsigned int nPoints){$/;"	f
configureTX	.\swig\ppg_lang\temp\ppg_temp.py	/^configureTX = _ppg_temp.configureTX$/;"	v
configureTX	.\swig\ppg_lang\temp\ppg_temp.py	/^def configureTX(adcOffset, carrierFreq_MHz, tx_phase, amplitude, nPoints):$/;"	f
configureTX	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^int configureTX(int adcOffset, double carrierFreq_MHz, double phase1, double phase2, double phase3, double phase4, int nPhases, double amplitude, unsigned int nPoints){$/;"	f
configureTX	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^configureTX = _ppg_temp_ph.configureTX$/;"	v
configureTX	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def configureTX(adcOffset, carrierFreq_MHz, phase1, phase2, phase3, phase4, nPhases, amplitude, nPoints):$/;"	f
converter	.\ppg_wrap.c	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:
converter	.\swig\Hahn_echo\.c	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:
converter	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:
converter	.\swig\example\example_wrap.c	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:
converter	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:
converter	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:
converter	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:
converter	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:
cos_phase	.\mrispinapi.h	/^	DEVICE cos_phase;$/;"	m	struct:__anon4
cos_phase_width	.\SpinAPI\src\caps.h	/^  unsigned int cos_phase_width;$/;"	m	struct:__anon10
cos_sin_phase_default_rpg	.\SpinAPI\src\if.c	/^cos_sin_phase_default_rpg(void)$/;"	f
createFelixTitleBlock	.\Sleator_apps\CPMG\cpmg.c	/^void createFelixTitleBlock(SCANPARAMS *myScan, char *title_string){$/;"	f
createFelixTitleBlock	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^void createFelixTitleBlock(SCANPARAMS *myScan, char *title_string){$/;"	f
ctypes	.\spinapi.py	/^import ctypes$/;"	i
cur_board	.\SpinAPI\src\spinapi.c	/^int cur_board = 0;$/;"	v
cur_dds	.\SpinAPI\src\spinapi.c	/^int cur_dds = 0;$/;"	v
cur_dev	.\SpinAPI\src\usb.c	/^int cur_dev = 0;$/;"	v
cur_device	.\SpinAPI\src\spinapi.c	/^static int cur_device = -1;$/;"	v	file:
cur_device_addr	.\SpinAPI\src\spinapi.c	/^static int cur_device_addr = 0;$/;"	v	file:
current_column	.\bitmap.h	/^	int current_column;$/;"	m	struct:tagBMPFILE
current_row	.\bitmap.h	/^	int current_row;$/;"	m	struct:tagBMPFILE
custom_design	.\SpinAPI\src\caps.h	/^  int custom_design;   \/** 0 => not a custom design$/;"	m	struct:__anon10
cvar	.\swig\example\example.py	/^cvar = _example.cvar$/;"	v
dac_clock_MHz	.\mrispinapi.h	/^	double dac_clock_MHz;$/;"	m	struct:__anon4
dac_clock_int_MHz	.\SpinAPI\src\caps.h	/^  double dac_clock_int_MHz;$/;"	m	struct:__anon10
dac_div	.\mrispinapi.h	/^	CONTROL dac_div;$/;"	m	struct:__anon4
dac_feedthrough	.\mrispinapi.h	/^	CONTROL dac_feedthrough;$/;"	m	struct:__anon4
dac_int_clock_MHz	.\mrispinapi.h	/^	double dac_int_clock_MHz;$/;"	m	struct:__anon4
data	.\SpinAPI\interpreter\src\interpreter.cpp	/^	std::string data;$/;"	m	struct:tagProgramLine	file:
data	.\convert_txt2h5.py	/^            data = ndshape([len(field_axis),len(time_axis)],$/;"	v
data	.\convert_txt2h5.py	/^    data = nddata(array(result),'t')$/;"	v
data	.\swig\Hahn_echo\run_Hahn_echo.py	/^data = []$/;"	v
data	.\swig\Hahn_echo\run_Hahn_echo.py	/^data = nddata(array(data),'t')$/;"	v
data_length	.\swig\Hahn_echo\run_Hahn_echo.py	/^data_length = 2*nPoints*nEchoes$/;"	v
date	.\convert_txt2h5.py	/^date = "181121"$/;"	v
date	.\proc_sweep.py	/^date = '181121'$/;"	v
date	.\swig\Hahn_echo\run_Hahn_echo.py	/^date = '181208'$/;"	v
date	.\swig\ppg_lang\temp\run_temp.py	/^date = '181210'$/;"	v
date	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^date = '181210'$/;"	v
dcast	.\ppg_wrap.c	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:
dcast	.\swig\Hahn_echo\.c	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:
dcast	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:
dcast	.\swig\example\example_wrap.c	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:
dcast	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:
dcast	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:
dcast	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:
dcast	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:
dds_address	.\SpinAPI\src\caps.h	/^  unsigned int dds_address[4];$/;"	m	struct:__anon10
dds_clock_mult	.\SpinAPI\src\caps.h	/^  double dds_clock_mult;  \/** this times clock is the dds clock speed *\/$/;"	m	struct:__anon10
dds_freq_extreg	.\SpinAPI\src\if.c	/^dds_freq_extreg (int cur_board, int addr, int freq_word, int freq_word2)$/;"	f
dds_freq_rpg	.\SpinAPI\src\if.c	/^dds_freq_rpg (int bdnum, int reg, double freq)$/;"	f
dds_list	.\SpinAPI\src\caps.h	/^  unsigned int dds_list[4];$/;"	m	struct:__anon10
dds_namp	.\SpinAPI\src\caps.h	/^  unsigned int dds_namp[4];$/;"	m	struct:__anon10
dds_nfreq	.\SpinAPI\src\caps.h	/^  unsigned int dds_nfreq[4];$/;"	m	struct:__anon10
dds_nphase	.\SpinAPI\src\caps.h	/^  unsigned int dds_nphase[4];$/;"	m	struct:__anon10
dds_phase_extreg	.\SpinAPI\src\if.c	/^dds_phase_extreg (int cur_board, int phase_bank, int addr, int phase_word)$/;"	f
dds_phase_rpg	.\SpinAPI\src\if.c	/^void dds_phase_rpg (int bdnum, int device, int addr, double phase)$/;"	f
dds_prog_method	.\SpinAPI\src\caps.h	/^  int dds_prog_method; \/** either DDS_PROG_OLDPB -or- DDS_PROG_EXTREG *\/$/;"	m	struct:__anon10
deblank_bit	.\Sleator_apps\CPMG\cpmg.h	/^	unsigned short deblank_bit;$/;"	m	struct:SCANPARAMS
deblank_bit	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	unsigned short deblank_bit;$/;"	m	struct:SCANPARAMS
deblank_bit_mask	.\Sleator_apps\CPMG\cpmg.h	/^	char deblank_bit_mask;$/;"	m	struct:SCANPARAMS
deblank_bit_mask	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	char deblank_bit_mask;$/;"	m	struct:SCANPARAMS
deblank_delay	.\Sleator_apps\CPMG\cpmg.h	/^	double deblank_delay;         \/\/ms$/;"	m	struct:SCANPARAMS
deblank_delay	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	double deblank_delay;       \/\/ms$/;"	m	struct:SCANPARAMS
debug	.\Sleator_apps\CPMG\cpmg.h	/^	unsigned short debug;$/;"	m	struct:SCANPARAMS
debug	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	unsigned short debug;$/;"	m	struct:SCANPARAMS
debug	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	unsigned short debug;$/;"	m	struct:SCANPARAMS
debug	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	unsigned short debug;$/;"	m	struct:SCANPARAMS
debug	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	unsigned short debug;$/;"	m	struct:SCANPARAMS
debug	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	unsigned short debug;$/;"	m	struct:SCANPARAMS
debug	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	unsigned short debug;$/;"	m	struct:SCANPARAMS
debug	.\SpinAPI\src\debug.h	14;"	d
default_shape_period	.\SpinAPI\src\caps.h	/^  float default_shape_period;$/;"	m	struct:__anon10
delargs	.\ppg_wrap.c	/^  int delargs;$/;"	m	struct:__anon6	file:
delargs	.\swig\Hahn_echo\.c	/^  int delargs;$/;"	m	struct:__anon104	file:
delargs	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int delargs;$/;"	m	struct:__anon108	file:
delargs	.\swig\example\example_wrap.c	/^  int delargs;$/;"	m	struct:__anon96	file:
delargs	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int delargs;$/;"	m	struct:__anon100	file:
delargs	.\swig\ppg_lang\ppg_lang_wrap.c	/^  int delargs;$/;"	m	struct:__anon112	file:
delargs	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  int delargs;$/;"	m	struct:__anon116	file:
delargs	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  int delargs;$/;"	m	struct:__anon120	file:
delta_tau	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double delta_tau;$/;"	m	struct:SCANPARAMS
delta_tau	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double delta_tau;$/;"	m	struct:SCANPARAMS
destaddr_addr	.\devices.h	/^	DWORD destaddr_addr;$/;"	m	struct:__anon3
destdata_addr	.\devices.h	/^	DWORD destdata_addr;$/;"	m	struct:__anon3
destroy	.\ppg_wrap.c	/^  PyObject *destroy;$/;"	m	struct:__anon6	file:
destroy	.\swig\Hahn_echo\.c	/^  PyObject *destroy;$/;"	m	struct:__anon104	file:
destroy	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyObject *destroy;$/;"	m	struct:__anon108	file:
destroy	.\swig\example\example_wrap.c	/^  PyObject *destroy;$/;"	m	struct:__anon96	file:
destroy	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyObject *destroy;$/;"	m	struct:__anon100	file:
destroy	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyObject *destroy;$/;"	m	struct:__anon112	file:
destroy	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyObject *destroy;$/;"	m	struct:__anon116	file:
destroy	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyObject *destroy;$/;"	m	struct:__anon120	file:
detect_boards	.\SpinAPI\examples\General\pb_debug.c	/^int detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\General\pb_start.c	/^int detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\General\pb_stop.c	/^int detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PBDDS-III\pbdds3_ex1.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PBDDS-III\pbdds3_ex2.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example1.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example2.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example3.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example4.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example1.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example2.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example3.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster24\pb24_ex1.c	/^int detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster24\pb24_ex2.c	/^int detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster24\pb24_ex3.c	/^int detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster24\pb24_ex4.c	/^int detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster24\pb24_mem_depth_test.c	/^int detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlaster24\pb24_programmable_clock.c	/^int detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTL_only.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_load_shape_ram.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_cont.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_excite_test.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_phase_test.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example1.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example2.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example3.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example4.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example5.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_reset.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_trigger.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_example1.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_long_delay_test.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_loop_test.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_shortpulse_disable.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_start_address.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_subtest.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR\pbesr_long_delay_test.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR\pbesr_loop_test.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR\pbesr_manual_example.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\PulseBlasterESR\pbesr_sub_test.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\RadioProcessor\awg.c	/^detect_boards()$/;"	f
detect_boards	.\SpinAPI\examples\RadioProcessor\excite_test.c	/^int detect_boards()$/;"	f
dev_id_array	.\SpinAPI\src\driver-linux-direct.c	/^static int dev_id_array[MAX_NUM_BOARDS];$/;"	v	file:
deviceType	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_DEVICE deviceType;		\/\/ FTxxxx device type to be programmed$/;"	m	struct:ft_eeprom_header
devices	.\SpinAPI\src\driver-linux-usb.c	/^static struct usb_device** devices = 0;$/;"	v	typeref:struct:usb_device	file:
dict	.\ppg_wrap.c	/^  PyObject *dict;$/;"	m	struct:__anon7	file:
dict	.\swig\Hahn_echo\.c	/^  PyObject *dict;$/;"	m	struct:__anon105	file:
dict	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyObject *dict;$/;"	m	struct:__anon109	file:
dict	.\swig\example\example_wrap.c	/^  PyObject *dict;$/;"	m	struct:__anon97	file:
dict	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyObject *dict;$/;"	m	struct:__anon101	file:
dict	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyObject *dict;$/;"	m	struct:__anon113	file:
dict	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyObject *dict;$/;"	m	struct:__anon117	file:
dict	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyObject *dict;$/;"	m	struct:__anon121	file:
did_init	.\SpinAPI\src\caps.h	/^  int did_init;	   \/** nonzero if this board has been initialized *\/$/;"	m	struct:__anon10
directory	.\convert_txt2h5.py	/^directory = str(os.path.dirname(os.path.realpath(__file__)))$/;"	v
directory	.\proc_quick.py	/^            directory = getDATADIR($/;"	v
directory	.\proc_sweep.py	/^        directory = getDATADIR(exp_type = 'test_equip' ))$/;"	v
directory	.\swig\Hahn_echo\proc_echo.py	/^            directory = getDATADIR($/;"	v
dirname	.\ppg.py	/^        from os.path import dirname$/;"	i
dirname	.\swig\Hahn_echo\Hahn_echo.py	/^        from os.path import dirname$/;"	i
dirname	.\swig\example\example.py	/^        from os.path import dirname$/;"	i
dirname	.\swig\example\get_rand_array\get_rand_array.py	/^        from os.path import dirname$/;"	i
dirname	.\swig\ppg_lang\ppg.py	/^        from os.path import dirname$/;"	i
dirname	.\swig\ppg_lang\ppg_lang.py	/^        from os.path import dirname$/;"	i
dirname	.\swig\ppg_lang\temp\ppg_temp.py	/^        from os.path import dirname$/;"	i
dirname	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^        from os.path import dirname$/;"	i
do_amcc_inp	.\SpinAPI\src\util.c	/^do_amcc_inp (int card_num, unsigned int address)$/;"	f
do_amcc_outp	.\SpinAPI\src\util.c	/^do_amcc_outp (int card_num, unsigned int address, char data)$/;"	f
do_amcc_outp_old	.\SpinAPI\src\util.c	/^do_amcc_outp_old (int card_num, unsigned int address, int data)$/;"	f
do_os_close	.\SpinAPI\src\spinapi.c	/^do_os_close (int board)$/;"	f
do_os_init	.\SpinAPI\src\spinapi.c	/^do_os_init (int board)$/;"	f
dvalue	.\ppg_wrap.c	/^  double dvalue;$/;"	m	struct:swig_const_info	file:
dvalue	.\swig\Hahn_echo\.c	/^  double dvalue;$/;"	m	struct:swig_const_info	file:
dvalue	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  double dvalue;$/;"	m	struct:swig_const_info	file:
dvalue	.\swig\example\example_wrap.c	/^  double dvalue;$/;"	m	struct:swig_const_info	file:
dvalue	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  double dvalue;$/;"	m	struct:swig_const_info	file:
dvalue	.\swig\ppg_lang\ppg_lang_wrap.c	/^  double dvalue;$/;"	m	struct:swig_const_info	file:
dvalue	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  double dvalue;$/;"	m	struct:swig_const_info	file:
dvalue	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  double dvalue;$/;"	m	struct:swig_const_info	file:
dwBuildNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  dwBuildNumber;$/;"	m	struct:_RTL_OSVERSIONINFOEXW
dwBuildNumber	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  dwBuildNumber;$/;"	m	struct:_RTL_OSVERSIONINFOW
dwBytes	.\SpinAPI\src\io_os.h	/^	DWORD dwBytes; \/*Number of bytes completed*\/$/;"	m	struct:io_future_desc
dwMajorVersion	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  dwMajorVersion;$/;"	m	struct:_RTL_OSVERSIONINFOEXW
dwMajorVersion	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  dwMajorVersion;$/;"	m	struct:_RTL_OSVERSIONINFOW
dwMinorVersion	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  dwMinorVersion;$/;"	m	struct:_RTL_OSVERSIONINFOEXW
dwMinorVersion	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  dwMinorVersion;$/;"	m	struct:_RTL_OSVERSIONINFOW
dwOSVersionInfoSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  dwOSVersionInfoSize;$/;"	m	struct:_RTL_OSVERSIONINFOEXW
dwOSVersionInfoSize	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  dwOSVersionInfoSize;$/;"	m	struct:_RTL_OSVERSIONINFOW
dwPlatformId	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  dwPlatformId;$/;"	m	struct:_RTL_OSVERSIONINFOEXW
dwPlatformId	.\SpinAPI\src\ddk_headers\winddk.h	/^  ULONG  dwPlatformId;$/;"	m	struct:_RTL_OSVERSIONINFOW
echoDelayTime_us	.\GradientEcho.h	/^	double echoDelayTime_us;$/;"	m	struct:SCANPARAMS
enable_rx	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	unsigned short enable_rx;$/;"	m	struct:SCANPARAMS
enable_rx	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	unsigned short enable_rx;$/;"	m	struct:SCANPARAMS
enable_tx	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	unsigned short enable_tx;$/;"	m	struct:SCANPARAMS
enable_tx	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^    unsigned short enable_tx;	$/;"	m	struct:SCANPARAMS
enum	.\spinapi.py	/^def enum(**enums):$/;"	f
envelope_freq	.\mrispinapi.h	/^	DEVICE envelope_freq;$/;"	m	struct:__anon4
envelope_freq_offset	.\SpinAPI\src\caps.h	/^  unsigned int envelope_freq_offset;$/;"	m	struct:__anon10
envelope_shape	.\mrispinapi.h	/^	DEVICE envelope_shape;$/;"	m	struct:__anon4
envelope_shape_offset	.\SpinAPI\src\caps.h	/^  unsigned int envelope_shape_offset;$/;"	m	struct:__anon10
envelope_shape_width	.\SpinAPI\src\caps.h	/^  unsigned int envelope_shape_width;$/;"	m	struct:__anon10
errfunc	.\proc_quick.py	/^    errfunc = lambda p_arg, x_arg, y_arg: fitfunc(p_arg, x_arg) - y_arg$/;"	v
errfunc	.\swig\Hahn_echo\proc_echo.py	/^    errfunc = lambda p_arg, x_arg, y_arg: fitfunc(p_arg, x_arg) - y_arg$/;"	v
errfunc2	.\proc_quick.py	/^    errfunc2 = lambda q_arg, x_arg, y_arg: fitfunc2(q_arg, x_arg) - y_arg$/;"	v
errfunc2	.\swig\Hahn_echo\proc_echo.py	/^    errfunc2 = lambda q_arg, x_arg, y_arg: fitfunc2(q_arg, x_arg) - y_arg$/;"	v
error_catch	.\GradientEcho.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\JFAB_Hahn_echo_hardcode.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\RPG_CPMG.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\RPG_Field_Sweep.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\RPG_Hahn_echo.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\RPG_IR.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\RPG_excite_test.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\RPG_nutation.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\RPG_nutation90.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\RPG_p90.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\RPG_tune.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\adc_offset.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\example_1.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\example_2.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\swig\Hahn_echo\Hahn_echo.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\swig\ppg_lang\temp\ppg_temp.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_catch	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^DWORD error_catch(int error, int line_number)$/;"	f
error_message	.\ppg.c	/^char *error_message = "";$/;"	v
error_message	.\swig\ppg_lang\ppg_lang.c	/^char *error_message = "";$/;"	v
error_message	.\swig\ppg_lang\temp\ppg_temp.c	/^char *error_message = "";$/;"	v
error_message	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^char *error_message = "";$/;"	v
even_echo	.\proc_quick.py	/^    even_echo = ndshape([len(r_[0:indirect_points\/2.0:1]),len(indirect_time_axis)],$/;"	v
even_echo	.\swig\Hahn_echo\proc_echo.py	/^    even_echo = ndshape([len(r_[0:indirect_points\/2.0:1]),len(indirect_time_axis)],$/;"	v
exception_info	.\ppg.c	/^char *exception_info() {$/;"	f
exception_info	.\swig\ppg_lang\ppg_lang.c	/^char *exception_info() {$/;"	f
exception_info	.\swig\ppg_lang\temp\ppg_temp.c	/^char *exception_info() {$/;"	f
exception_info	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^char *exception_info() {$/;"	f
exit	.\SpinAPI\drivers\_uninstall.bat	/^:exit$/;"	l
exit_success	.\SpinAPI\drivers\_uninstall.bat	/^:exit_success$/;"	l
exp_type	.\proc_quick.py	/^                exp_type = 'test_equip'))$/;"	v
exp_type	.\swig\Hahn_echo\proc_echo.py	/^                exp_type = 'test_equip'))$/;"	v
fAbortOnError	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fAbortOnError:1;		\/* Abort all reads and writes on Error	*\/$/;"	m	struct:_FTDCB
fBinary	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fBinary: 1;			\/* Binary Mode (skip EOF check)			*\/$/;"	m	struct:_FTDCB
fCtsHold	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fCtsHold : 1;$/;"	m	struct:_FTCOMSTAT
fDsrHold	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fDsrHold : 1;$/;"	m	struct:_FTCOMSTAT
fDsrSensitivity	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fDsrSensitivity:1;	\/* DSR Sensitivity						*\/$/;"	m	struct:_FTDCB
fDtrControl	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fDtrControl:2;		\/* DTR Flow control						*\/$/;"	m	struct:_FTDCB
fDummy2	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fDummy2:17;			\/* Reserved								*\/$/;"	m	struct:_FTDCB
fEof	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fEof : 1;$/;"	m	struct:_FTCOMSTAT
fErrorChar	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fErrorChar: 1;		\/* Enable Err Replacement				*\/$/;"	m	struct:_FTDCB
fInX	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fInX: 1;				\/* Enable input X-ON\/X-OFF				*\/$/;"	m	struct:_FTDCB
fNull	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fNull: 1;				\/* Enable Null stripping				*\/$/;"	m	struct:_FTDCB
fOutX	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fOutX: 1;				\/* Enable output X-ON\/X-OFF				*\/$/;"	m	struct:_FTDCB
fOutxCtsFlow	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fOutxCtsFlow:1;		\/* CTS handshaking on output			*\/$/;"	m	struct:_FTDCB
fOutxDsrFlow	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fOutxDsrFlow:1;		\/* DSR handshaking on output			*\/$/;"	m	struct:_FTDCB
fParity	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fParity: 1;			\/* Enable parity checking				*\/$/;"	m	struct:_FTDCB
fReserved	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fReserved : 25;$/;"	m	struct:_FTCOMSTAT
fRlsdHold	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fRlsdHold : 1;$/;"	m	struct:_FTCOMSTAT
fRtsControl	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fRtsControl:2;		\/* Rts Flow control						*\/$/;"	m	struct:_FTDCB
fTXContinueOnXoff	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fTXContinueOnXoff: 1;	\/* Continue TX when Xoff sent			*\/$/;"	m	struct:_FTDCB
fTxim	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fTxim : 1;$/;"	m	struct:_FTCOMSTAT
fXoffHold	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fXoffHold : 1;$/;"	m	struct:_FTCOMSTAT
fXoffSent	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		DWORD fXoffSent : 1;$/;"	m	struct:_FTCOMSTAT
fact	.\swig\example\example.c	/^int fact(int n) {$/;"	f
fact	.\swig\example\example.py	/^def fact(n):$/;"	f
fact	.\swig\example\example.py	/^fact = _example.fact$/;"	v
false	.\SpinAPI\src\util.c	24;"	d	file:
fastDown	.\SpinAPI\examples\USB-PTS\USB-PTS_Controller.tcl	/^proc fastDown {} {$/;"	p
fastUp	.\SpinAPI\examples\USB-PTS\USB-PTS_Controller.tcl	/^proc fastUp {} {$/;"	p
fftw_iodim64_do_not_use_me	.\fftw3.h	/^struct fftw_iodim64_do_not_use_me {$/;"	s
fftw_iodim_do_not_use_me	.\fftw3.h	/^struct fftw_iodim_do_not_use_me {$/;"	s
fftw_r2r_kind_do_not_use_me	.\fftw3.h	/^enum fftw_r2r_kind_do_not_use_me {$/;"	g
fid_time	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double fid_time;$/;"	m	struct:SCANPARAMS
field_axis	.\convert_txt2h5.py	/^    field_axis = linspace(3407.5,3409.4,20)$/;"	v
field_sweep	.\convert_txt2h5.py	/^    field_sweep = True$/;"	v
field_sweep	.\convert_txt2h5.py	/^field_sweep = False$/;"	v
file_name	.\Sleator_apps\CPMG\cpmg.h	/^	char* file_name;$/;"	m	struct:SCANPARAMS
file_name	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	char* file_name;$/;"	m	struct:SCANPARAMS
file_name	.\convert_txt2h5.py	/^        file_name = date+'_'+name+'_'+'SE%d'%(index)$/;"	v
file_name	.\convert_txt2h5.py	/^file_name = date+'_'+name$/;"	v
filename	.\proc_quick.py	/^    filename = date+'_'+id_string+'.h5'$/;"	v
filename	.\proc_sweep.py	/^filename = date+'_'+id_string+'.h5'$/;"	v
filename	.\swig\Hahn_echo\proc_echo.py	/^    filename = date+'_'+id_string+'.h5'$/;"	v
filter_bypass_mult	.\mrispinapi.h	/^	CONTROL filter_bypass_mult;$/;"	m	struct:__anon4
filter_sel_internal_dds	.\mrispinapi.h	/^	CONTROL filter_sel_internal_dds;$/;"	m	struct:__anon4
findPeaks	.\Sleator_apps\CPMG\cpmg.c	/^ double * findPeaks(double* data, SCANPARAMS* myScan){$/;"	f
fir	.\SpinAPI\include\radioprocessor.h	/^  int fir;$/;"	m	struct:__anon9
fir	.\SpinAPI\src\radioprocessor.h	/^  int fir;$/;"	m	struct:__anon94
fir_1	.\SpinAPI\src\caps.h	/^  unsigned int fir_1;$/;"	m	struct:__anon10
fir_1	.\mrispinapi.h	/^	DWORD fir_1;$/;"	m	struct:__anon4
fir_2	.\SpinAPI\src\caps.h	/^  unsigned int fir_2;$/;"	m	struct:__anon10
fir_2	.\mrispinapi.h	/^	DWORD fir_2;$/;"	m	struct:__anon4
fir_bypass	.\mrispinapi.h	/^	CONTROL fir_bypass;$/;"	m	struct:__anon4
fir_coef_width	.\SpinAPI\src\caps.h	/^  int fir_coef_width;    \/** width in bits of the fir coefficients *\/$/;"	m	struct:__anon10
fir_coeff	.\mrispinapi.h	/^	DEVICE fir_coeff;$/;"	m	struct:__anon4
fir_coeff_addr	.\mrispinapi.h	/^	DWORD fir_coeff_addr;$/;"	m	struct:__anon4
fir_coeff_data	.\mrispinapi.h	/^	DWORD fir_coeff_data;$/;"	m	struct:__anon4
fir_dec_amount	.\mrispinapi.h	/^	CONTROL fir_dec_amount;$/;"	m	struct:__anon4
fir_default2	.\SpinAPI\src\if.c	/^static const int fir_default2[] = {$/;"	v	file:
fir_max_decim	.\SpinAPI\src\caps.h	/^  int fir_max_decim;$/;"	m	struct:__anon10
fir_max_shift	.\SpinAPI\src\caps.h	/^  int fir_max_shift;$/;"	m	struct:__anon10
fir_max_taps	.\SpinAPI\src\caps.h	/^  int fir_max_taps;$/;"	m	struct:__anon10
fir_num_taps	.\mrispinapi.h	/^	CONTROL fir_num_taps;$/;"	m	struct:__anon4
fir_reset	.\mrispinapi.h	/^	CONTROL fir_reset;$/;"	m	struct:__anon4
fir_shift_amount	.\mrispinapi.h	/^	CONTROL fir_shift_amount;$/;"	m	struct:__anon4
firmware_id	.\SpinAPI\src\caps.h	/^  unsigned int firmware_id; \/** *\/$/;"	m	struct:__anon10
firmware_id	.\mrispinapi.h	/^	int firmware_id;$/;"	m	struct:__anon4
fitfunc	.\proc_quick.py	/^    fitfunc = lambda p, x: p[0]*exp(-1*x\/p[1])-p[2]$/;"	v
fitfunc	.\swig\Hahn_echo\proc_echo.py	/^    fitfunc = lambda p, x: p[0]*exp(-1*x\/p[1])-p[2]$/;"	v
fitfunc2	.\proc_quick.py	/^    fitfunc2 = lambda q, x: p1[0]*exp(-1*x\/q[0])-p1[2]$/;"	v
fitfunc2	.\swig\Hahn_echo\proc_echo.py	/^    fitfunc2 = lambda q, x: p1[0]*exp(-1*x\/q[0])-p1[2]$/;"	v
fl	.\convert_txt2h5.py	/^fl = figlist_var()$/;"	v
fl	.\proc_quick.py	/^fl = figlist_var()$/;"	v
fl	.\proc_sweep.py	/^fl = figlist_var()$/;"	v
fl	.\swig\Hahn_echo\proc_echo.py	/^fl = figlist_var()$/;"	v
fl	.\swig\Hahn_echo\run_Hahn_echo.py	/^fl = figlist_var()$/;"	v
fname	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	char* fname;$/;"	m	struct:SCANPARAMS
fname	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	char* fname;$/;"	m	struct:SCANPARAMS
fname	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	char* fname;$/;"	m	struct:SCANPARAMS
fname	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	char* fname;$/;"	m	struct:SCANPARAMS
fopen	.\bitmap.h	/^	int fopen;$/;"	m	struct:tagBMPFILE
free_cap	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  void free_cap(PyObject * cap)$/;"	f
free_cap	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  void free_cap(PyObject * cap)$/;"	f
freefunc	.\ppg_wrap.c	/^typedef destructor freefunc;$/;"	t	file:
freefunc	.\swig\Hahn_echo\.c	/^typedef destructor freefunc;$/;"	t	file:
freefunc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef destructor freefunc;$/;"	t	file:
freefunc	.\swig\example\example_wrap.c	/^typedef destructor freefunc;$/;"	t	file:
freefunc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef destructor freefunc;$/;"	t	file:
freefunc	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef destructor freefunc;$/;"	t	file:
freefunc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef destructor freefunc;$/;"	t	file:
freefunc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef destructor freefunc;$/;"	t	file:
freq_addr	.\SpinAPI\src\caps.h	/^  unsigned int freq_addr;$/;"	m	struct:__anon10
freq_addr	.\mrispinapi.h	/^	DWORD freq_addr;$/;"	m	struct:__anon4
freq_data	.\SpinAPI\src\caps.h	/^  unsigned int freq_data;$/;"	m	struct:__anon10
freq_data	.\mrispinapi.h	/^	DWORD freq_data;$/;"	m	struct:__anon4
freq_double_to_bcd	.\SpinAPI\src\spinapi.c	/^BCDFREQ* freq_double_to_bcd(double freq, BCDFREQ* bcdfreq, int is3200)$/;"	f
freq_rx_offset	.\SpinAPI\src\caps.h	/^  unsigned int freq_rx_offset;$/;"	m	struct:__anon10
freq_tx_offset	.\SpinAPI\src\caps.h	/^  unsigned int freq_tx_offset;$/;"	m	struct:__anon10
fsweep	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_160.c	/^int fsweep(double maxFreq, int is160, int is3200, int allowPhase, int noPTS, double fstart, double fend, double dF, double delay)$/;"	f
fsweep	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_250.c	/^int fsweep(double maxFreq, int is160, int is3200, int allowPhase, int noPTS, double fstart, double fend, double dF, double delay)$/;"	f
fsweep	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_300.c	/^int fsweep(double maxFreq, int is160, int is3200, int allowPhase, int noPTS, double fstart, double fend, double dF, int phase, double delay)$/;"	f
fsweep	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_3200.c	/^int fsweep(double maxFreq, int is160, int is3200, int allowPhase, int noPTS, double fstart, double fend, double dF, double delay)$/;"	f
fsweep	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_500.c	/^int fsweep(double maxFreq, int is160, int is3200, int allowPhase, int noPTS, double fstart, double fend, double dF, double delay)$/;"	f
fsweep	.\SpinAPI\examples\USB-PTS\pts_fsweep.c	/^void fsweep(double maxFreq, int is160, int is3200, int allowPhase, int noPTS, double fstart, double fend, double dF, double delay)$/;"	f
ftHandle	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		FT_HANDLE ftHandle;$/;"	m	struct:_ft_device_list_info_node
ft_eeprom_2232	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct ft_eeprom_2232 {$/;"	s
ft_eeprom_2232h	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct ft_eeprom_2232h {$/;"	s
ft_eeprom_232b	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct ft_eeprom_232b {$/;"	s
ft_eeprom_232h	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct ft_eeprom_232h {$/;"	s
ft_eeprom_232r	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct ft_eeprom_232r {$/;"	s
ft_eeprom_4232h	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct ft_eeprom_4232h {$/;"	s
ft_eeprom_header	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct ft_eeprom_header {$/;"	s
ft_eeprom_x_series	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct ft_eeprom_x_series {$/;"	s
ft_program_data	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^	typedef struct ft_program_data {$/;"	s
g	.\bitmap.h	/^	char g;$/;"	m	struct:tagPIXELCOLOR
g	.\bitmap.h	/^	unsigned char* g;$/;"	m	struct:tagCOLORMAP
getData	.\swig\Hahn_echo\Hahn_echo.c	/^void getData(int* output_array, int length, unsigned int nPoints, unsigned int nEchoes, char* output_name){$/;"	f
getData	.\swig\Hahn_echo\Hahn_echo.py	/^def getData(output_array, nPoints, nEchoes, output_name):$/;"	f
getData	.\swig\Hahn_echo\Hahn_echo.py	/^getData = _Hahn_echo.getData$/;"	v
get_attr	.\ppg_wrap.c	/^    PyObject *(*get_attr)(void);       \/* Return the current value *\/$/;"	m	struct:swig_globalvar	file:
get_attr	.\swig\Hahn_echo\.c	/^    PyObject *(*get_attr)(void);       \/* Return the current value *\/$/;"	m	struct:swig_globalvar	file:
get_attr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^    PyObject *(*get_attr)(void);       \/* Return the current value *\/$/;"	m	struct:swig_globalvar	file:
get_attr	.\swig\example\example_wrap.c	/^    PyObject *(*get_attr)(void);       \/* Return the current value *\/$/;"	m	struct:swig_globalvar	file:
get_attr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^    PyObject *(*get_attr)(void);       \/* Return the current value *\/$/;"	m	struct:swig_globalvar	file:
get_attr	.\swig\ppg_lang\ppg_lang_wrap.c	/^    PyObject *(*get_attr)(void);       \/* Return the current value *\/$/;"	m	struct:swig_globalvar	file:
get_attr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^    PyObject *(*get_attr)(void);       \/* Return the current value *\/$/;"	m	struct:swig_globalvar	file:
get_attr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^    PyObject *(*get_attr)(void);       \/* Return the current value *\/$/;"	m	struct:swig_globalvar	file:
get_caps	.\SpinAPI\src\caps.c	/^get_caps (BOARD_INFO * board, int dev_id)$/;"	f
get_dc_value	.\adc_offset.c	/^double get_dc_value(int adc_offset)$/;"	f
get_rand_array	.\swig\example\get_rand_array\get_rand_array.c	/^void get_rand_array(double* output_array, int length){$/;"	f
get_rand_array	.\swig\example\get_rand_array\get_rand_array.py	/^def get_rand_array(output_array):$/;"	f
get_rand_array	.\swig\example\get_rand_array\get_rand_array.py	/^get_rand_array = _get_rand_array.get_rand_array$/;"	v
get_time	.\ppg.c	/^char *get_time()$/;"	f
get_time	.\swig\Hahn_echo\Hahn_echo.c	/^char *get_time()$/;"	f
get_time	.\swig\Hahn_echo\Hahn_echo.py	/^def get_time():$/;"	f
get_time	.\swig\Hahn_echo\Hahn_echo.py	/^get_time = _Hahn_echo.get_time$/;"	v
get_time	.\swig\example\example.c	/^char *get_time()$/;"	f
get_time	.\swig\example\example.py	/^def get_time():$/;"	f
get_time	.\swig\example\example.py	/^get_time = _example.get_time$/;"	v
get_time	.\swig\ppg_lang\temp\ppg_temp.c	/^char *get_time()$/;"	f
get_time	.\swig\ppg_lang\temp\ppg_temp.py	/^def get_time():$/;"	f
get_time	.\swig\ppg_lang\temp\ppg_temp.py	/^get_time = _ppg_temp.get_time$/;"	v
get_time	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^char *get_time()$/;"	f
get_time	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def get_time():$/;"	f
get_time	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^get_time = _ppg_temp_ph.get_time$/;"	v
gradientEchoDelay_us	.\2D_MRI.py	/^gradientEchoDelay_us=100.0$/;"	v
hEdit	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hEdit; \/\/ Edit Control$/;"	v
hFrequency	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hFrequency; \/\/ Frequency$/;"	v
hFrequencyLabel	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hFrequencyLabel; \/\/ Frequency Label$/;"	v
hMhz	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hMhz; \/\/ MHZ Label$/;"	v
hOpen	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hOpen; \/\/ Load button$/;"	v
hOutput	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hOutput; \/\/ Output$/;"	v
hPos	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hPos; \/\/ Position indicator$/;"	v
hProgram	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hProgram; \/\/ Program Button$/;"	v
hSave	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hSave; \/\/ Save Button$/;"	v
hStart	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hStart; \/\/ Start button$/;"	v
hStop	.\SpinAPI\interpreter\src\gui.cpp	/^HWND hStop; \/\/ Stop button$/;"	v
h_list	.\SpinAPI\src\driver-usb-windows.c	/^static HANDLE h_list[MAX_USB];$/;"	v	file:
handle	.\SpinAPI\src\io.h	/^	HANDLE handle; \/*< Device subsystem handle*\/$/;"	m	struct:io_future_t
handle	.\SpinAPI\src\io_os.h	/^	HANDLE handle; \/*< Windows system device handle*\/$/;"	m	struct:io_future_desc
handles	.\SpinAPI\src\driver-linux-usb.c	/^static usb_dev_handle** handles = 0;$/;"	v	file:
has_FF_fix	.\SpinAPI\src\caps.h	/^  int has_FF_fix;\/** PB Core "1FF" issue status (equal to 1 if the board has the fix) *\/$/;"	m	struct:__anon10
has_firmware_id	.\SpinAPI\src\caps.h	/^  int has_firmware_id;     \/** nonzero if the firmware id register exists. if 1, it is at location 0xFF, if 2, it is at location 0x15, if 3, it is at location 0x7F *\/$/;"	m	struct:__anon10
has_wraparound_problem	.\SpinAPI\src\caps.h	/^  int has_wraparound_problem;$/;"	m	struct:__anon10
hiByte	.\SpinAPI\src\cyioctl.h	/^    UCHAR hiByte;$/;"	m	struct:_WORD_SPLIT
iConfiguration	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  iConfiguration;$/;"	m	struct:_USB_CONFIGURATION_DESCRIPTOR
iInterface	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  iInterface;$/;"	m	struct:_USB_INTERFACE_DESCRIPTOR
iManufacturer	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  iManufacturer;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
iProduct	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  iProduct;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
iSerialNumber	.\SpinAPI\src\ddk_headers\usb100.h	/^  UCHAR  iSerialNumber;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
i_tau	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	unsigned int i_tau;  $/;"	m	struct:SCANPARAMS
i_tau	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	unsigned int i_tau;  $/;"	m	struct:SCANPARAMS
idProduct	.\SpinAPI\src\ddk_headers\usb100.h	/^  USHORT  idProduct;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
idVendor	.\SpinAPI\src\ddk_headers\usb100.h	/^  USHORT  idVendor;$/;"	m	struct:_USB_DEVICE_DESCRIPTOR
id_string	.\proc_sweep.py	/^id_string = 'sweep1'$/;"	v
imp	.\ppg.py	/^        import imp$/;"	i
imp	.\swig\Hahn_echo\Hahn_echo.py	/^        import imp$/;"	i
imp	.\swig\example\example.py	/^        import imp$/;"	i
imp	.\swig\example\get_rand_array\get_rand_array.py	/^        import imp$/;"	i
imp	.\swig\ppg_lang\ppg.py	/^        import imp$/;"	i
imp	.\swig\ppg_lang\ppg_lang.py	/^        import imp$/;"	i
imp	.\swig\ppg_lang\temp\ppg_temp.py	/^        import imp$/;"	i
imp	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^        import imp$/;"	i
implicitconv	.\ppg_wrap.c	/^  int implicitconv;$/;"	m	struct:__anon6	file:
implicitconv	.\swig\Hahn_echo\.c	/^  int implicitconv;$/;"	m	struct:__anon104	file:
implicitconv	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int implicitconv;$/;"	m	struct:__anon108	file:
implicitconv	.\swig\example\example_wrap.c	/^  int implicitconv;$/;"	m	struct:__anon96	file:
implicitconv	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int implicitconv;$/;"	m	struct:__anon100	file:
implicitconv	.\swig\ppg_lang\ppg_lang_wrap.c	/^  int implicitconv;$/;"	m	struct:__anon112	file:
implicitconv	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  int implicitconv;$/;"	m	struct:__anon116	file:
implicitconv	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  int implicitconv;$/;"	m	struct:__anon120	file:
importlib	.\ppg.py	/^        import importlib$/;"	i
importlib	.\swig\Hahn_echo\Hahn_echo.py	/^        import importlib$/;"	i
importlib	.\swig\example\example.py	/^        import importlib$/;"	i
importlib	.\swig\example\get_rand_array\get_rand_array.py	/^        import importlib$/;"	i
importlib	.\swig\ppg_lang\ppg.py	/^        import importlib$/;"	i
importlib	.\swig\ppg_lang\ppg_lang.py	/^        import importlib$/;"	i
importlib	.\swig\ppg_lang\temp\ppg_temp.py	/^        import importlib$/;"	i
importlib	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^        import importlib$/;"	i
imw_amp_bits	.\mrispinapi.h	/^	int imw_amp_bits;$/;"	m	struct:__anon4
imw_amp_start	.\mrispinapi.h	/^	int imw_amp_start;$/;"	m	struct:__anon4
imw_base_addr	.\SpinAPI\src\caps.h	/^  unsigned int imw_base_addr;$/;"	m	struct:__anon10
imw_base_data_addr	.\SpinAPI\src\caps.h	/^  unsigned int imw_base_data_addr;$/;"	m	struct:__anon10
imw_carrier_freq_bits	.\mrispinapi.h	/^	int imw_carrier_freq_bits;$/;"	m	struct:__anon4
imw_carrier_freq_start	.\mrispinapi.h	/^	int imw_carrier_freq_start;$/;"	m	struct:__anon4
imw_ch_swap	.\mrispinapi.h	/^	int imw_ch_swap;$/;"	m	struct:__anon4
imw_cos_phase_bits	.\mrispinapi.h	/^	int imw_cos_phase_bits;$/;"	m	struct:__anon4
imw_cos_phase_start	.\mrispinapi.h	/^	int imw_cos_phase_start;$/;"	m	struct:__anon4
imw_dac_addr_bits	.\mrispinapi.h	/^	int imw_dac_addr_bits;$/;"	m	struct:__anon4
imw_dac_addr_start	.\mrispinapi.h	/^	int imw_dac_addr_start;$/;"	m	struct:__anon4
imw_dac_amp_bits	.\mrispinapi.h	/^	int imw_dac_amp_bits;$/;"	m	struct:__anon4
imw_dac_amp_start	.\mrispinapi.h	/^	int imw_dac_amp_start;$/;"	m	struct:__anon4
imw_dac_clear	.\mrispinapi.h	/^	int imw_dac_clear;$/;"	m	struct:__anon4
imw_dac_update	.\mrispinapi.h	/^	int imw_dac_update;$/;"	m	struct:__anon4
imw_dac_write	.\mrispinapi.h	/^	int imw_dac_write;$/;"	m	struct:__anon4
imw_envelope_freq_bits	.\mrispinapi.h	/^	int imw_envelope_freq_bits;$/;"	m	struct:__anon4
imw_envelope_freq_start	.\mrispinapi.h	/^	int imw_envelope_freq_start;$/;"	m	struct:__anon4
imw_imag_add_sub	.\mrispinapi.h	/^	int imw_imag_add_sub;$/;"	m	struct:__anon4
imw_phase_reset	.\mrispinapi.h	/^	int imw_phase_reset;$/;"	m	struct:__anon4
imw_real_add_sub	.\mrispinapi.h	/^	int imw_real_add_sub;$/;"	m	struct:__anon4
imw_sin_phase_bits	.\mrispinapi.h	/^	int imw_sin_phase_bits;$/;"	m	struct:__anon4
imw_sin_phase_start	.\mrispinapi.h	/^	int imw_sin_phase_start;$/;"	m	struct:__anon4
imw_trigger_scan	.\mrispinapi.h	/^	int imw_trigger_scan;$/;"	m	struct:__anon4
imw_tx_en	.\mrispinapi.h	/^	int imw_tx_en;$/;"	m	struct:__anon4
imw_tx_phase_bits	.\mrispinapi.h	/^	int imw_tx_phase_bits;$/;"	m	struct:__anon4
imw_tx_phase_start	.\mrispinapi.h	/^	int imw_tx_phase_start;$/;"	m	struct:__anon4
include_90	.\Sleator_apps\CPMG\cpmg.h	/^	unsigned short include_90;$/;"	m	struct:SCANPARAMS
indirect_acq_time	.\proc_quick.py	/^    indirect_acq_time = nPoints\/SW$/;"	v
indirect_acq_time	.\swig\Hahn_echo\proc_echo.py	/^    indirect_acq_time = nPoints\/SW$/;"	v
indirect_dt	.\proc_quick.py	/^    indirect_dt = indirect_acq_time\/indirect_points$/;"	v
indirect_dt	.\swig\Hahn_echo\proc_echo.py	/^    indirect_dt = indirect_acq_time\/indirect_points$/;"	v
indirect_points	.\proc_quick.py	/^    indirect_points = nEchoes$/;"	v
indirect_points	.\swig\Hahn_echo\proc_echo.py	/^    indirect_points = nEchoes$/;"	v
indirect_time_axis	.\proc_quick.py	/^    indirect_time_axis = linspace(0.0,indirect_acq_time,nPoints)$/;"	v
indirect_time_axis	.\swig\Hahn_echo\proc_echo.py	/^    indirect_time_axis = linspace(0.0,indirect_acq_time,nPoints)$/;"	v
inf	.\SpinAPI\drivers\_install.bat	/^:inf$/;"	l
inf	.\SpinAPI\drivers\_windriver.bat	/^:inf$/;"	l
init_ppg	.\swig\ppg_lang\temp\ppg_temp.c	/^int init_ppg(){$/;"	f
init_ppg	.\swig\ppg_lang\temp\ppg_temp.py	/^def init_ppg():$/;"	f
init_ppg	.\swig\ppg_lang\temp\ppg_temp.py	/^init_ppg = _ppg_temp.init_ppg$/;"	v
init_ppg	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^int init_ppg(){$/;"	f
init_ppg	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def init_ppg():$/;"	f
init_ppg	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^init_ppg = _ppg_temp_ph.init_ppg$/;"	v
initialized	.\mrispinapi.h	/^	int initialized;$/;"	m	struct:__anon4
inline	.\Sleator_apps\CPMG\cpmg.c	65;"	d	file:
inline	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	40;"	d	file:
inline	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	43;"	d	file:
input_clock	.\SpinAPI\examples\PulseBlaster24\pb24_ex1.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlaster24\pb24_ex2.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlaster24\pb24_ex3.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlaster24\pb24_ex4.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlaster24\pb24_mem_depth_test.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_example1.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_long_delay_test.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_loop_test.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_shortpulse_disable.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_start_address.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_subtest.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlasterESR\pbesr_long_delay_test.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlasterESR\pbesr_loop_test.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlasterESR\pbesr_manual_example.c	/^int input_clock(double *retClock)$/;"	f
input_clock	.\SpinAPI\examples\PulseBlasterESR\pbesr_sub_test.c	/^int input_clock(double *retClock)$/;"	f
input_freq	.\SpinAPI\examples\USB-PTS\usb-pts_ex_160.c	/^int input_freq(double *retFreq)$/;"	f
input_freq	.\SpinAPI\examples\USB-PTS\usb-pts_ex_250.c	/^int input_freq(double *retFreq)$/;"	f
input_freq	.\SpinAPI\examples\USB-PTS\usb-pts_ex_300.c	/^int input_freq(double *retFreq)$/;"	f
input_freq	.\SpinAPI\examples\USB-PTS\usb-pts_ex_3200.c	/^int input_freq(double *retFreq)$/;"	f
input_freq	.\SpinAPI\examples\USB-PTS\usb-pts_ex_500.c	/^int input_freq(double *retFreq)$/;"	f
install	.\SpinAPI\drivers\_install.bat	/^:install$/;"	l
install	.\SpinAPI\drivers\_uninstall.bat	/^:install$/;"	l
install	.\SpinAPI\drivers\_windriver.bat	/^:install$/;"	l
io_future_cancel	.\SpinAPI\src\io.c	/^io_future_cancel(struct io_future_t *future) $/;"	f
io_future_desc	.\SpinAPI\src\io_os.h	/^struct io_future_desc $/;"	s
io_future_free	.\SpinAPI\src\io.c	/^io_future_free(struct io_future_t *future)$/;"	f
io_future_init	.\SpinAPI\src\io.c	/^io_future_init(struct io_future_t *future)$/;"	f
io_future_reset	.\SpinAPI\src\io.c	/^io_future_reset(struct io_future_t *future)$/;"	f
io_future_status	.\SpinAPI\src\io.c	/^io_future_status(struct io_future_t *future)$/;"	f
io_future_t	.\SpinAPI\src\io.h	/^struct io_future_t $/;"	s
io_future_wait	.\SpinAPI\src\io.c	/^io_future_wait(struct io_future_t *future)$/;"	f
is	.\fftw3.h	/^     int is;			\/* input stride *\/$/;"	m	struct:fftw_iodim_do_not_use_me
is	.\fftw3.h	/^     ptrdiff_t is;			\/* input stride *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
is_Nutation	.\proc_quick.py	/^        is_Nutation = True$/;"	v
is_Nutation	.\proc_quick.py	/^    is_Nutation = False$/;"	v
is_Nutation	.\swig\Hahn_echo\proc_echo.py	/^    is_Nutation = False$/;"	v
is_array	.\swig\Hahn_echo\Hahn_echo_wrap.c	3334;"	d	file:
is_array	.\swig\Hahn_echo\Hahn_echo_wrap.c	3348;"	d	file:
is_array	.\swig\example\get_rand_array\get_rand_array_wrap.c	3039;"	d	file:
is_array	.\swig\example\get_rand_array\get_rand_array_wrap.c	3053;"	d	file:
is_pcie	.\SpinAPI\src\caps.h	/^	int is_pcie;$/;"	m	struct:__anon10
is_radioprocessor	.\SpinAPI\src\caps.h	/^  int is_radioprocessor; \/** 1 if normal, 2 if RPG *\/$/;"	m	struct:__anon10
is_usb	.\SpinAPI\src\caps.h	/^	int is_usb;      \/** nonzero if this is a usb devices *\/$/;"	m	struct:__anon10
isoCmd	.\SpinAPI\src\cyioctl.h	/^    USHORT isoCmd;$/;"	m	struct:_ISO_ADV_PARAMS
isoId	.\SpinAPI\src\cyioctl.h	/^    USHORT isoId;$/;"	m	struct:_ISO_ADV_PARAMS
jump_addresses	.\swig\ppg_lang\ppg_lang.c	/^DWORD jump_addresses[10];$/;"	v
jump_addresses	.\swig\ppg_lang\temp\ppg_temp.c	/^DWORD jump_addresses[10];$/;"	v
jump_addresses	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^DWORD jump_addresses[10];$/;"	v
kHz	.\SpinAPI\include\radioprocessor.h	37;"	d
kHz	.\SpinAPI\src\radioprocessor.h	37;"	d
kHz	.\spinapi.py	/^kHz = 0.001$/;"	v
keep_90_deblank	.\Sleator_apps\CPMG\cpmg.h	/^	unsigned short keep_90_deblank;$/;"	m	struct:SCANPARAMS
key_colors	.\bitmap.h	/^	int key_colors;$/;"	m	struct:tagCOLORMAP
klass	.\ppg_wrap.c	/^  PyObject *klass;$/;"	m	struct:__anon6	file:
klass	.\swig\Hahn_echo\.c	/^  PyObject *klass;$/;"	m	struct:__anon104	file:
klass	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyObject *klass;$/;"	m	struct:__anon108	file:
klass	.\swig\example\example_wrap.c	/^  PyObject *klass;$/;"	m	struct:__anon96	file:
klass	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyObject *klass;$/;"	m	struct:__anon100	file:
klass	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyObject *klass;$/;"	m	struct:__anon112	file:
klass	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyObject *klass;$/;"	m	struct:__anon116	file:
klass	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyObject *klass;$/;"	m	struct:__anon120	file:
last_rounded_value	.\SpinAPI\src\spinapi.c	/^double last_rounded_value;$/;"	v
lb_value	.\GradientEcho.h	/^	double lb_value; \/\/ line broadening value: 0 is none, 1 is a small amount, 5 is lots (maybe too much)$/;"	m	struct:SCANPARAMS
leastsq	.\proc_quick.py	/^from scipy.optimize import leastsq$/;"	i
leastsq	.\swig\Hahn_echo\proc_echo.py	/^from scipy.optimize import leastsq$/;"	i
lenfunc	.\ppg_wrap.c	/^typedef inquiry lenfunc;$/;"	t	file:
lenfunc	.\swig\Hahn_echo\.c	/^typedef inquiry lenfunc;$/;"	t	file:
lenfunc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef inquiry lenfunc;$/;"	t	file:
lenfunc	.\swig\example\example_wrap.c	/^typedef inquiry lenfunc;$/;"	t	file:
lenfunc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef inquiry lenfunc;$/;"	t	file:
lenfunc	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef inquiry lenfunc;$/;"	t	file:
lenfunc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef inquiry lenfunc;$/;"	t	file:
lenfunc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef inquiry lenfunc;$/;"	t	file:
line	.\SpinAPI\interpreter\src\interpreter.cpp	/^	int line;$/;"	m	struct:tagLabel	file:
lineNum	.\SpinAPI\interpreter\src\interpreter.cpp	/^	unsigned int lineNum, colNum;$/;"	m	struct:tagToken	file:
lineNum	.\SpinAPI\interpreter\src\interpreter.cpp	/^	unsigned int lineNum;$/;"	m	struct:tagProgramLine	file:
lineNum	.\SpinAPI\interpreter\src\interpreter.cpp	/^	unsigned int lineNum;$/;"	m	struct:tagVariable	file:
linebroadening_value	.\2D_MRI.py	/^linebroadening_value=0.0$/;"	v
load	.\ppg.py	/^def load(args):$/;"	f
load	.\swig\ppg_lang\ppg.py	/^def load(args):$/;"	f
load	.\swig\ppg_lang\ppg_lang.py	/^def load(args):$/;"	f
load	.\swig\ppg_lang\temp\ppg_temp.py	/^def load(args):$/;"	f
load	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def load(args):$/;"	f
log2_int	.\SpinAPI\src\util.c	/^log2_int(int value)$/;"	f
lowByte	.\SpinAPI\src\cyioctl.h	/^    UCHAR lowByte;$/;"	m	struct:_WORD_SPLIT
lvalue	.\ppg_wrap.c	/^  long lvalue;$/;"	m	struct:swig_const_info	file:
lvalue	.\swig\Hahn_echo\.c	/^  long lvalue;$/;"	m	struct:swig_const_info	file:
lvalue	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  long lvalue;$/;"	m	struct:swig_const_info	file:
lvalue	.\swig\example\example_wrap.c	/^  long lvalue;$/;"	m	struct:swig_const_info	file:
lvalue	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  long lvalue;$/;"	m	struct:swig_const_info	file:
lvalue	.\swig\ppg_lang\ppg_lang_wrap.c	/^  long lvalue;$/;"	m	struct:swig_const_info	file:
lvalue	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  long lvalue;$/;"	m	struct:swig_const_info	file:
lvalue	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  long lvalue;$/;"	m	struct:swig_const_info	file:
main	.\GradientEcho.c	/^int main(int argc, char *argv[])$/;"	f
main	.\JFAB_Hahn_echo_hardcode.c	/^int main(int argc, char *argv[])$/;"	f
main	.\RPG_CPMG.c	/^int main(int argc, char *argv[])$/;"	f
main	.\RPG_Field_Sweep.c	/^int main(int argc, char *argv[])$/;"	f
main	.\RPG_Hahn_echo.c	/^int main(int argc, char *argv[])$/;"	f
main	.\RPG_IR.c	/^int main(int argc, char *argv[])$/;"	f
main	.\RPG_excite_test.c	/^int main(int argc, char *argv[])$/;"	f
main	.\RPG_nutation.c	/^int main(int argc, char *argv[])$/;"	f
main	.\RPG_nutation90.c	/^int main(int argc, char *argv[])$/;"	f
main	.\RPG_p90.c	/^int main(int argc, char *argv[])$/;"	f
main	.\RPG_tune.c	/^int main(int argc, char *argv[])$/;"	f
main	.\Sleator_apps\CPMG\cpmg.c	/^int main (int argc, char **argv){$/;"	f
main	.\Sleator_apps\Hahn_echo\Hahn_echo.c	/^main (int argc, char **argv)$/;"	f
main	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.c	/^main (int argc, char **argv)$/;"	f
main	.\Sleator_apps\Stimulated_echo\Stimulated_echo.c	/^main (int argc, char **argv)$/;"	f
main	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\General\pb_debug.c	/^int main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\General\pb_read_firmware.c	/^int main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\General\pb_start.c	/^int main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\General\pb_stop.c	/^int main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PBDDS-III\pbdds3_ex1.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PBDDS-III\pbdds3_ex2.c	/^main (void)$/;"	f
main	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example1.c	/^main (void)$/;"	f
main	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example2.c	/^main (void)$/;"	f
main	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example3.c	/^main (void)$/;"	f
main	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example4.c	/^main (void)$/;"	f
main	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example1.c	/^main (void)$/;"	f
main	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example2.c	/^main (void)$/;"	f
main	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example3.c	/^main (void)$/;"	f
main	.\SpinAPI\examples\PulseBlaster24\pb24_ex1.c	/^int main()$/;"	f
main	.\SpinAPI\examples\PulseBlaster24\pb24_ex2.c	/^int main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlaster24\pb24_ex3.c	/^int main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlaster24\pb24_ex4.c	/^int main()$/;"	f
main	.\SpinAPI\examples\PulseBlaster24\pb24_mem_depth_test.c	/^int main(int argc, char ** argv)$/;"	f
main	.\SpinAPI\examples\PulseBlaster24\pb24_programmable_clock.c	/^int main()$/;"	f
main	.\SpinAPI\examples\PulseBlaster24\pb24_two_boards.c	/^int main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTL_only.c	/^main (int argc, char *argv[])$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	/^main (int argc, char *argv[])$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	/^main(int argc, char *argv[])$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	/^main(int argc, char *argv[])$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_load_shape_ram.c	/^main(int argc, char *argv[])$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	/^main (int argc, char *argv[])$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_cont.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_excite_test.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_phase_test.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example1.c	/^main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example2.c	/^main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example3.c	/^main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example4.c	/^int main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example5.c	/^main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_reset.c	/^main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_trigger.c	/^int main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_example1.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_long_delay_test.c	/^main (int argc, const char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_loop_test.c	/^main (int argc, const char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_shortpulse_disable.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_start_address.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_subtest.c	/^main (int argc, const char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR\pbesr_long_delay_test.c	/^main (int argc, const char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR\pbesr_loop_test.c	/^main (int argc, const char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR\pbesr_manual_example.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\PulseBlasterESR\pbesr_sub_test.c	/^main (int argc, const char **argv)$/;"	f
main	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^main (int argc, char *argv[])$/;"	f
main	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	/^main (void)$/;"	f
main	.\SpinAPI\examples\RadioProcessor\awg.c	/^main (int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\RadioProcessor\excite_test.c	/^int main(int argc, char **argv)$/;"	f
main	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^int main (int argc, char *argv[]){$/;"	f
main	.\SpinAPI\examples\USB-PTS\includes\incl_160.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\includes\incl_250.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\includes\incl_300.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\includes\incl_3200.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\includes\incl_500.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_160.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_250.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_300.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_3200.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_500.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\pts_fsweep.c	/^int main()\/\/int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\usb-pts_ex_160.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\usb-pts_ex_250.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\usb-pts_ex_300.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\usb-pts_ex_3200.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\examples\USB-PTS\usb-pts_ex_500.c	/^int main(int argc, char* argv[])$/;"	f
main	.\SpinAPI\interpreter\src\commandline.cpp	/^int main(int argc, char *argv[])$/;"	f
main	.\adc_offset.c	/^int main(int argc, char *argv[])$/;"	f
main	.\example_1.c	/^int main(int argc, char *argv[])$/;"	f
main	.\example_2.c	/^int main(int argc, char *argv[])$/;"	f
main	.\test_c\calc_nutation.c	/^int main(void)$/;"	f
main	.\test_c\calc_vd.c	/^int main(void)$/;"	f
make_contiguous	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyArrayObject* make_contiguous(PyArrayObject* ary,$/;"	f
make_contiguous	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyArrayObject* make_contiguous(PyArrayObject* ary,$/;"	f
make_fortran	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyArrayObject* make_fortran(PyArrayObject* ary,$/;"	f
make_fortran	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyArrayObject* make_fortran(PyArrayObject* ary,$/;"	f
make_shape_data	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^make_shape_data (float *shape_array, void *arg,$/;"	f
make_shape_data	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^void make_shape_data (float *shape_array, void *arg, void (*shapefnc) (float *, void *)){$/;"	f
marker_names	.\ppg.py	/^marker_names = {}$/;"	v
marker_names	.\swig\ppg_lang\ppg.py	/^marker_names = {}$/;"	v
marker_names	.\swig\ppg_lang\ppg_lang.py	/^marker_names = {}$/;"	v
marker_names	.\swig\ppg_lang\temp\ppg_temp.py	/^marker_names = {}$/;"	v
marker_names	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^marker_names = {}$/;"	v
max_val	.\proc_quick.py	/^    max_val = amax(abs(even_echo).data)$/;"	v
max_val	.\swig\Hahn_echo\proc_echo.py	/^    max_val = amax(abs(even_echo).data)$/;"	v
mem_bypass_average	.\mrispinapi.h	/^	CONTROL mem_bypass_average;$/;"	m	struct:__anon4
mem_force_average	.\mrispinapi.h	/^	CONTROL mem_force_average;$/;"	m	struct:__anon4
memory	.\mrispinapi.h	/^	DEVICE memory;$/;"	m	struct:__anon4
memory_addr	.\SpinAPI\src\caps.h	/^  unsigned int memory_addr;$/;"	m	struct:__anon10
memory_addr	.\mrispinapi.h	/^	DWORD memory_addr;$/;"	m	struct:__anon4
memory_data	.\SpinAPI\src\caps.h	/^  unsigned int memory_data;$/;"	m	struct:__anon10
memory_data	.\mrispinapi.h	/^	DWORD memory_data;$/;"	m	struct:__anon4
memory_offset	.\SpinAPI\src\caps.h	/^  unsigned int memory_offset;$/;"	m	struct:__anon10
misc_1	.\SpinAPI\src\caps.h	/^  unsigned int misc_1;$/;"	m	struct:__anon10
misc_1	.\mrispinapi.h	/^	DWORD misc_1;$/;"	m	struct:__anon4
ms	.\SpinAPI\include\pulseblaster.h	14;"	d
ms	.\SpinAPI\src\pulseblaster.h	14;"	d
ms	.\mrispinapi.h	87;"	d
ms	.\spinapi.py	/^ms = 1000000.0$/;"	v
my_getline	.\SpinAPI\src\driver-linux-direct.c	/^my_getline (char **lineptr, size_t * n, FILE * stream)$/;"	f
my_mod	.\swig\example\example.c	/^int my_mod(int x, int y) {$/;"	f
my_mod	.\swig\example\example.py	/^def my_mod(x, y):$/;"	f
my_mod	.\swig\example\example.py	/^my_mod = _example.my_mod$/;"	v
my_sprintf	.\SpinAPI\src\util.c	/^my_sprintf (const char *format, ...)$/;"	f
my_strcat	.\SpinAPI\src\util.c	/^my_strcat (const char *a, const char *b)$/;"	f
n	.\fftw3.h	/^     int n;                     \/* dimension size *\/$/;"	m	struct:fftw_iodim_do_not_use_me
n	.\fftw3.h	/^     ptrdiff_t n;                     \/* dimension size *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
nEchoes	.\CPMG.h	/^    unsigned int nEchoes;$/;"	m	struct:SCANPARAMS
nEchoes	.\IR.h	/^    int nEchoes;$/;"	m	struct:SCANPARAMS
nEchoes	.\proc_quick.py	/^                nEchoes = float(temp[1])$/;"	v
nEchoes	.\swig\Hahn_echo\run_Hahn_echo.py	/^nEchoes = 1$/;"	v
nEchoes	.\swig\ppg_lang\temp\run_temp.py	/^nEchoes = 1$/;"	v
nEchoes	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^nEchoes = 1$/;"	v
nPhases	.\2D_MRI.py	/^nPhases=128$/;"	v
nPhases	.\Field_Sweep.h	/^    unsigned int nPhases;$/;"	m	struct:SCANPARAMS
nPhases	.\GradientEcho.h	/^	unsigned int nPhases;$/;"	m	struct:SCANPARAMS
nPhases	.\Hahn_echo.h	/^    unsigned int nPhases;$/;"	m	struct:SCANPARAMS
nPhases	.\JFAB_Hahn_echo_hardcode.c	/^    unsigned int nPhases;$/;"	m	struct:SCANPARAMS	file:
nPhases	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^nPhases = 4 $/;"	v
nPoints	.\2D_MRI.py	/^nPoints=128$/;"	v
nPoints	.\CPMG.h	/^    unsigned int nPoints;$/;"	m	struct:SCANPARAMS
nPoints	.\Field_Sweep.h	/^    unsigned int nPoints;$/;"	m	struct:SCANPARAMS
nPoints	.\GradientEcho.h	/^	unsigned int nPoints;$/;"	m	struct:SCANPARAMS
nPoints	.\Hahn_echo.h	/^    unsigned int nPoints;$/;"	m	struct:SCANPARAMS
nPoints	.\IR.h	/^    unsigned int nPoints;$/;"	m	struct:SCANPARAMS
nPoints	.\JFAB_Hahn_echo_hardcode.c	/^    unsigned int nPoints;$/;"	m	struct:SCANPARAMS	file:
nPoints	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	unsigned int nPoints;$/;"	m	struct:SCANPARAMS
nPoints	.\nutation.h	/^    unsigned int nPoints;$/;"	m	struct:SCANPARAMS
nPoints	.\nutation90.h	/^    unsigned int nPoints;$/;"	m	struct:SCANPARAMS
nPoints	.\p90.h	/^    unsigned int nPoints;$/;"	m	struct:SCANPARAMS
nPoints	.\proc_quick.py	/^                nPoints = float(temp[1])$/;"	v
nPoints	.\swig\Hahn_echo\run_Hahn_echo.py	/^nPoints = 1024$/;"	v
nPoints	.\swig\ppg_lang\temp\run_temp.py	/^nPoints = 1024$/;"	v
nPoints	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^nPoints = 1024$/;"	v
nPoints_Nutation	.\nutation.h	/^    unsigned int nPoints_Nutation;$/;"	m	struct:SCANPARAMS
nPoints_Nutation	.\nutation90.h	/^    unsigned int nPoints_Nutation;$/;"	m	struct:SCANPARAMS
nPoints_Nutation	.\p90.h	/^    unsigned int nPoints_Nutation;$/;"	m	struct:SCANPARAMS
nPoints_Nutation	.\proc_quick.py	/^                nPoints_Nutation = int(temp[1])$/;"	v
nPoints_total	.\CPMG.h	/^    double nPoints_total;$/;"	m	struct:SCANPARAMS
nPoints_total	.\IR.h	/^    double nPoints_total;$/;"	m	struct:SCANPARAMS
nPoints_total	.\nutation.h	/^    double nPoints_total;$/;"	m	struct:SCANPARAMS
nPoints_total	.\nutation90.h	/^    double nPoints_total;$/;"	m	struct:SCANPARAMS
nPoints_total	.\p90.h	/^    double nPoints_total;$/;"	m	struct:SCANPARAMS
nPoints_vd	.\IR.h	/^    unsigned int nPoints_vd;$/;"	m	struct:SCANPARAMS
nScans	.\2D_MRI.py	/^nScans=1$/;"	v
nScans	.\CPMG.h	/^    unsigned int nScans;$/;"	m	struct:SCANPARAMS
nScans	.\Field_Sweep.h	/^    unsigned int nScans;$/;"	m	struct:SCANPARAMS
nScans	.\GradientEcho.h	/^	unsigned int nScans;$/;"	m	struct:SCANPARAMS
nScans	.\Hahn_echo.h	/^    unsigned int nScans;$/;"	m	struct:SCANPARAMS
nScans	.\IR.h	/^    unsigned int nScans;$/;"	m	struct:SCANPARAMS
nScans	.\JFAB_Hahn_echo_hardcode.c	/^    unsigned int nScans;$/;"	m	struct:SCANPARAMS	file:
nScans	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	unsigned int nScans;$/;"	m	struct:SCANPARAMS
nScans	.\nutation.h	/^    unsigned int nScans;$/;"	m	struct:SCANPARAMS
nScans	.\nutation90.h	/^    unsigned int nScans;$/;"	m	struct:SCANPARAMS
nScans	.\p90.h	/^    unsigned int nScans;$/;"	m	struct:SCANPARAMS
nScans	.\proc_quick.py	/^                nScans = int(temp[1])$/;"	v
nScans	.\swig\Hahn_echo\run_Hahn_echo.py	/^nScans = 1$/;"	v
nScans	.\swig\ppg_lang\temp\run_temp.py	/^nScans = 1$/;"	v
nScans	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^nScans = 1$/;"	v
n_tau	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	unsigned int n_tau;$/;"	m	struct:SCANPARAMS
n_tau	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	unsigned int n_tau;$/;"	m	struct:SCANPARAMS
name	.\SpinAPI\interpreter\src\interpreter.cpp	/^	std::string name;$/;"	m	struct:tagLabel	file:
name	.\SpinAPI\interpreter\src\interpreter.cpp	/^	std::string name;$/;"	m	struct:tagVariable	file:
name	.\convert_txt2h5.py	/^name = "IR_1"$/;"	v
name	.\ppg_wrap.c	/^    char       *name;                  \/* Name of global variable *\/$/;"	m	struct:swig_globalvar	file:
name	.\ppg_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon5	file:
name	.\ppg_wrap.c	/^  char *name;$/;"	m	struct:swig_const_info	file:
name	.\ppg_wrap.c	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:
name	.\swig\Hahn_echo\.c	/^    char       *name;                  \/* Name of global variable *\/$/;"	m	struct:swig_globalvar	file:
name	.\swig\Hahn_echo\.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon103	file:
name	.\swig\Hahn_echo\.c	/^  char *name;$/;"	m	struct:swig_const_info	file:
name	.\swig\Hahn_echo\.c	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:
name	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^    char       *name;                  \/* Name of global variable *\/$/;"	m	struct:swig_globalvar	file:
name	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon107	file:
name	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  char *name;$/;"	m	struct:swig_const_info	file:
name	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:
name	.\swig\example\example_wrap.c	/^    char       *name;                  \/* Name of global variable *\/$/;"	m	struct:swig_globalvar	file:
name	.\swig\example\example_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon95	file:
name	.\swig\example\example_wrap.c	/^  char *name;$/;"	m	struct:swig_const_info	file:
name	.\swig\example\example_wrap.c	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:
name	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^    char       *name;                  \/* Name of global variable *\/$/;"	m	struct:swig_globalvar	file:
name	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon99	file:
name	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  char *name;$/;"	m	struct:swig_const_info	file:
name	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:
name	.\swig\ppg_lang\ppg_lang_wrap.c	/^    char       *name;                  \/* Name of global variable *\/$/;"	m	struct:swig_globalvar	file:
name	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon111	file:
name	.\swig\ppg_lang\ppg_lang_wrap.c	/^  char *name;$/;"	m	struct:swig_const_info	file:
name	.\swig\ppg_lang\ppg_lang_wrap.c	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:
name	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^    char       *name;                  \/* Name of global variable *\/$/;"	m	struct:swig_globalvar	file:
name	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon115	file:
name	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  char *name;$/;"	m	struct:swig_const_info	file:
name	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:
name	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^    char       *name;                  \/* Name of global variable *\/$/;"	m	struct:swig_globalvar	file:
name	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon119	file:
name	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  char *name;$/;"	m	struct:swig_const_info	file:
name	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:
new_y	.\proc_quick.py	/^    new_y = []$/;"	v
new_y	.\swig\Hahn_echo\proc_echo.py	/^    new_y = []$/;"	v
newargs	.\ppg_wrap.c	/^  PyObject *newargs;$/;"	m	struct:__anon6	file:
newargs	.\swig\Hahn_echo\.c	/^  PyObject *newargs;$/;"	m	struct:__anon104	file:
newargs	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyObject *newargs;$/;"	m	struct:__anon108	file:
newargs	.\swig\example\example_wrap.c	/^  PyObject *newargs;$/;"	m	struct:__anon96	file:
newargs	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyObject *newargs;$/;"	m	struct:__anon100	file:
newargs	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyObject *newargs;$/;"	m	struct:__anon112	file:
newargs	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyObject *newargs;$/;"	m	struct:__anon116	file:
newargs	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyObject *newargs;$/;"	m	struct:__anon120	file:
newraw	.\ppg_wrap.c	/^  PyObject *newraw;$/;"	m	struct:__anon6	file:
newraw	.\swig\Hahn_echo\.c	/^  PyObject *newraw;$/;"	m	struct:__anon104	file:
newraw	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyObject *newraw;$/;"	m	struct:__anon108	file:
newraw	.\swig\example\example_wrap.c	/^  PyObject *newraw;$/;"	m	struct:__anon96	file:
newraw	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyObject *newraw;$/;"	m	struct:__anon100	file:
newraw	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyObject *newraw;$/;"	m	struct:__anon112	file:
newraw	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyObject *newraw;$/;"	m	struct:__anon116	file:
newraw	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyObject *newraw;$/;"	m	struct:__anon120	file:
next	.\ppg_wrap.c	/^    struct swig_globalvar *next;$/;"	m	struct:swig_globalvar	typeref:struct:swig_globalvar::swig_globalvar	file:
next	.\ppg_wrap.c	/^  PyObject *next;$/;"	m	struct:__anon7	file:
next	.\ppg_wrap.c	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
next	.\ppg_wrap.c	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:
next	.\swig\Hahn_echo\.c	/^    struct swig_globalvar *next;$/;"	m	struct:swig_globalvar	typeref:struct:swig_globalvar::swig_globalvar	file:
next	.\swig\Hahn_echo\.c	/^  PyObject *next;$/;"	m	struct:__anon105	file:
next	.\swig\Hahn_echo\.c	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
next	.\swig\Hahn_echo\.c	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:
next	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^    struct swig_globalvar *next;$/;"	m	struct:swig_globalvar	typeref:struct:swig_globalvar::swig_globalvar	file:
next	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyObject *next;$/;"	m	struct:__anon109	file:
next	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
next	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:
next	.\swig\example\example_wrap.c	/^    struct swig_globalvar *next;$/;"	m	struct:swig_globalvar	typeref:struct:swig_globalvar::swig_globalvar	file:
next	.\swig\example\example_wrap.c	/^  PyObject *next;$/;"	m	struct:__anon97	file:
next	.\swig\example\example_wrap.c	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
next	.\swig\example\example_wrap.c	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:
next	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^    struct swig_globalvar *next;$/;"	m	struct:swig_globalvar	typeref:struct:swig_globalvar::swig_globalvar	file:
next	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyObject *next;$/;"	m	struct:__anon101	file:
next	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
next	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:
next	.\swig\ppg_lang\ppg_lang_wrap.c	/^    struct swig_globalvar *next;$/;"	m	struct:swig_globalvar	typeref:struct:swig_globalvar::swig_globalvar	file:
next	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyObject *next;$/;"	m	struct:__anon113	file:
next	.\swig\ppg_lang\ppg_lang_wrap.c	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
next	.\swig\ppg_lang\ppg_lang_wrap.c	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:
next	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^    struct swig_globalvar *next;$/;"	m	struct:swig_globalvar	typeref:struct:swig_globalvar::swig_globalvar	file:
next	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyObject *next;$/;"	m	struct:__anon117	file:
next	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
next	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:
next	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^    struct swig_globalvar *next;$/;"	m	struct:swig_globalvar	typeref:struct:swig_globalvar::swig_globalvar	file:
next	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyObject *next;$/;"	m	struct:__anon121	file:
next	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
next	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:
nodename	.\proc_quick.py	/^    nodename = 'signal'$/;"	v
nodename	.\proc_sweep.py	/^nodename = 'signal'$/;"	v
nodename	.\swig\Hahn_echo\proc_echo.py	/^    nodename = 'signal'$/;"	v
ns	.\SpinAPI\include\pulseblaster.h	12;"	d
ns	.\SpinAPI\src\pulseblaster.h	12;"	d
ns	.\mrispinapi.h	85;"	d
ns	.\spinapi.py	/^ns = 1.0$/;"	v
ns_to_magnitude	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	/^ns_to_magnitude(double ns_val)$/;"	f
ns_to_units	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	/^ns_to_units(double ns_val)$/;"	f
num_IMW_bytes	.\SpinAPI\src\caps.h	/^  int num_IMW_bytes;          \/** number of bytes making up the internal memory word **\/$/;"	m	struct:__anon10
num_amp	.\SpinAPI\src\caps.h	/^  int num_amp;     \/** number of amplitude registers that are available *\/$/;"	m	struct:__anon10
num_bits	.\SpinAPI\src\if.c	/^num_bits (int num)$/;"	f
num_cards	.\SpinAPI\src\driver-linux-direct.c	/^static int num_cards = -1;$/;"	v	file:
num_cols	.\bitmap.h	/^	int num_cols;$/;"	m	struct:tagBMPFILE
num_echo_points	.\Sleator_apps\CPMG\cpmg.h	/^	unsigned short num_echo_points;$/;"	m	struct:SCANPARAMS
num_echoes	.\Sleator_apps\CPMG\cpmg.h	/^	unsigned int num_echoes;$/;"	m	struct:SCANPARAMS
num_freq0	.\SpinAPI\src\caps.h	/^  int num_freq0;    \/** number of frequency registers *\/$/;"	m	struct:__anon10
num_instructions	.\SpinAPI\src\caps.h	/^  int num_instructions;      \/** number of pulse instructions the design can hold **\/$/;"	m	struct:__anon10
num_instructions	.\SpinAPI\src\spinapi.c	/^int num_instructions = 0;$/;"	v
num_instructions	.\mrispinapi.h	/^	int num_instructions;$/;"	m	struct:__anon4
num_pci_boards	.\SpinAPI\src\spinapi.c	/^static int num_pci_boards = -1;$/;"	v	file:
num_phase0	.\SpinAPI\src\caps.h	/^  int num_phase0;   \/** number of phase registers in bank 0 (tx)*\/$/;"	m	struct:__anon10
num_phase1	.\SpinAPI\src\caps.h	/^  int num_phase1;   \/** number of phase registers in bank 1 (rx)*\/$/;"	m	struct:__anon10
num_phase2	.\SpinAPI\src\caps.h	/^  int num_phase2;   \/** number of phase registers in bank 2 (ref)*\/$/;"	m	struct:__anon10
num_points	.\Sleator_apps\CPMG\cpmg.h	/^	unsigned int num_points;$/;"	m	struct:SCANPARAMS
num_points	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	unsigned int num_points;$/;"	m	struct:SCANPARAMS
num_points	.\SpinAPI\src\caps.h	/^  int num_points; \/** number of complex points the board can hold *\/$/;"	m	struct:__anon10
num_registers	.\devices.h	/^	int num_registers;$/;"	m	struct:__anon3
num_rows	.\bitmap.h	/^	int num_rows;$/;"	m	struct:tagBMPFILE
num_scans	.\Sleator_apps\CPMG\cpmg.h	/^	unsigned int num_scans;$/;"	m	struct:SCANPARAMS
num_scans	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	unsigned int num_scans;$/;"	m	struct:SCANPARAMS
num_scans	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	unsigned int num_scans;$/;"	m	struct:SCANPARAMS
num_scans	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	unsigned int num_scans;$/;"	m	struct:SCANPARAMS
num_scans	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	unsigned int num_scans;$/;"	m	struct:SCANPARAMS
num_scans	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	unsigned int num_scans;$/;"	m	struct:SCANPARAMS
num_shape	.\SpinAPI\src\caps.h	/^  int num_shape;   \/** number of period registers for the dds shape *\/$/;"	m	struct:__anon10
num_usb_devices	.\SpinAPI\src\spinapi.c	/^static int num_usb_devices = -1;$/;"	v	file:
number_of_dds	.\SpinAPI\src\caps.h	/^  int number_of_dds;$/;"	m	struct:__anon10
nutation_step	.\nutation.h	/^    double nutation_step;$/;"	m	struct:SCANPARAMS
nutation_step	.\nutation90.h	/^    double nutation_step;$/;"	m	struct:SCANPARAMS
nutation_step	.\p90.h	/^    double nutation_step;$/;"	m	struct:SCANPARAMS
nutation_step	.\proc_quick.py	/^                nutation_step = float(temp[1])$/;"	v
obj_to_array_allow_conversion	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyArrayObject* obj_to_array_allow_conversion(PyObject* input,$/;"	f
obj_to_array_allow_conversion	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyArrayObject* obj_to_array_allow_conversion(PyObject* input,$/;"	f
obj_to_array_contiguous_allow_conversion	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyArrayObject* obj_to_array_contiguous_allow_conversion(PyObject* input,$/;"	f
obj_to_array_contiguous_allow_conversion	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyArrayObject* obj_to_array_contiguous_allow_conversion(PyObject* input,$/;"	f
obj_to_array_fortran_allow_conversion	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyArrayObject* obj_to_array_fortran_allow_conversion(PyObject* input,$/;"	f
obj_to_array_fortran_allow_conversion	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyArrayObject* obj_to_array_fortran_allow_conversion(PyObject* input,$/;"	f
obj_to_array_no_conversion	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyArrayObject* obj_to_array_no_conversion(PyObject* input,$/;"	f
obj_to_array_no_conversion	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyArrayObject* obj_to_array_no_conversion(PyObject* input,$/;"	f
odd_echo	.\proc_quick.py	/^    odd_echo = ndshape([len(r_[0:indirect_points\/2.0:1]),len(indirect_time_axis)],$/;"	v
odd_echo	.\swig\Hahn_echo\proc_echo.py	/^    odd_echo = ndshape([len(r_[0:indirect_points\/2.0:1]),len(indirect_time_axis)],$/;"	v
offset_plot	.\proc_sweep.py	/^offset_plot = s.C$/;"	v
offset_plot_shift	.\proc_sweep.py	/^offset_plot_shift = s.C$/;"	v
os	.\2D_MRI.py	/^import os$/;"	i
os	.\convert_txt2h5.py	/^import os$/;"	i
os	.\fftw3.h	/^     int os;			\/* output stride *\/$/;"	m	struct:fftw_iodim_do_not_use_me
os	.\fftw3.h	/^     ptrdiff_t os;			\/* output stride *\/$/;"	m	struct:fftw_iodim64_do_not_use_me
os	.\swig\Hahn_echo\run_Hahn_echo.py	/^import os$/;"	i
os_close	.\SpinAPI\src\driver-linux-direct.c	/^os_close (int card_num)$/;"	f
os_close	.\SpinAPI\src\driver-stub.c	/^os_close (int card_num)$/;"	f
os_count_boards	.\SpinAPI\src\driver-linux-direct.c	/^os_count_boards (int vend_id)$/;"	f
os_count_boards	.\SpinAPI\src\driver-stub.c	/^os_count_boards (int vend_id)$/;"	f
os_init	.\SpinAPI\src\driver-linux-direct.c	/^os_init (int card_num)$/;"	f
os_init	.\SpinAPI\src\driver-stub.c	/^os_init (int card_num)$/;"	f
os_inp	.\SpinAPI\src\driver-linux-direct.c	/^os_inp (int card_num, unsigned int address)$/;"	f
os_inp	.\SpinAPI\src\driver-stub.c	/^os_inp (int card_num, unsigned int address)$/;"	f
os_inw	.\SpinAPI\src\driver-linux-direct.c	/^os_inw (int card_num, unsigned int address)$/;"	f
os_inw	.\SpinAPI\src\driver-stub.c	/^os_inw (int card_num, unsigned int address)$/;"	f
os_outp	.\SpinAPI\src\driver-linux-direct.c	/^os_outp (int card_num, unsigned int address, char data)$/;"	f
os_outp	.\SpinAPI\src\driver-stub.c	/^os_outp (int card_num, unsigned int address, char data)$/;"	f
os_outw	.\SpinAPI\src\driver-linux-direct.c	/^os_outw (int card_num, unsigned int addresss, unsigned int data)$/;"	f
os_outw	.\SpinAPI\src\driver-stub.c	/^os_outw (int card_num, unsigned int addresss, unsigned int data)$/;"	f
os_usb_close	.\SpinAPI\src\driver-linux-usb.c	/^int os_usb_close()$/;"	f
os_usb_close	.\SpinAPI\src\driver-usb-stub.c	/^os_usb_close ()$/;"	f
os_usb_close	.\SpinAPI\src\driver-usb-windows.c	/^os_usb_close ()$/;"	f
os_usb_count_devices	.\SpinAPI\src\driver-linux-usb.c	/^int os_usb_count_devices(int vendor_id)$/;"	f
os_usb_count_devices	.\SpinAPI\src\driver-usb-stub.c	/^os_usb_count_devices (int vendor_id)$/;"	f
os_usb_count_devices	.\SpinAPI\src\driver-usb-windows.c	/^os_usb_count_devices (int vendor_id)$/;"	f
os_usb_init	.\SpinAPI\src\driver-linux-usb.c	/^int os_usb_init(int dev_num)$/;"	f
os_usb_init	.\SpinAPI\src\driver-usb-stub.c	/^os_usb_init (int dev_num)$/;"	f
os_usb_init	.\SpinAPI\src\driver-usb-windows.c	/^os_usb_init (int dev_num)$/;"	f
os_usb_read	.\SpinAPI\src\driver-linux-usb.c	/^int os_usb_read(int dev_num, int pipe, void *data, int size)$/;"	f
os_usb_read	.\SpinAPI\src\driver-usb-stub.c	/^os_usb_read (int dev_num, int pipe, void *data, int size)$/;"	f
os_usb_read	.\SpinAPI\src\driver-usb-windows.c	/^os_usb_read (int dev_num, int pipe, void *data, int size)$/;"	f
os_usb_reset_pipes	.\SpinAPI\src\driver-linux-usb.c	/^int os_usb_reset_pipes(int dev_num)$/;"	f
os_usb_reset_pipes	.\SpinAPI\src\driver-usb-stub.c	/^os_usb_reset_pipes (int dev_num)$/;"	f
os_usb_reset_pipes	.\SpinAPI\src\driver-usb-windows.c	/^os_usb_reset_pipes (int dev_num)$/;"	f
os_usb_write	.\SpinAPI\src\driver-linux-usb.c	/^int os_usb_write(int dev_num, int pipe, const void *data, int size)$/;"	f
os_usb_write	.\SpinAPI\src\driver-usb-stub.c	/^os_usb_write (int dev_num, int pipe, const void *data, int size)$/;"	f
os_usb_write	.\SpinAPI\src\driver-usb-windows.c	/^os_usb_write (int dev_num, int pipe, const void *data, int size)$/;"	f
output	.\SpinAPI\interpreter\src\interpreter.cpp	/^	std::string output;$/;"	m	struct:tagProgramLine	file:
outputFilename	.\2D_MRI.py	/^outputFilename='2D_MRI'$/;"	v
outputFilename	.\CPMG.h	/^    char* outputFilename;$/;"	m	struct:SCANPARAMS
outputFilename	.\Field_Sweep.h	/^    char* outputFilename;$/;"	m	struct:SCANPARAMS
outputFilename	.\GradientEcho.h	/^	char* outputFilename;$/;"	m	struct:SCANPARAMS
outputFilename	.\Hahn_echo.h	/^    char* outputFilename;$/;"	m	struct:SCANPARAMS
outputFilename	.\IR.h	/^    char* outputFilename;$/;"	m	struct:SCANPARAMS
outputFilename	.\JFAB_Hahn_echo_hardcode.c	/^    char* outputFilename;$/;"	m	struct:SCANPARAMS	file:
outputFilename	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	char* outputFilename;$/;"	m	struct:SCANPARAMS
outputFilename	.\nutation.h	/^    char* outputFilename;$/;"	m	struct:SCANPARAMS
outputFilename	.\nutation90.h	/^    char* outputFilename;$/;"	m	struct:SCANPARAMS
outputFilename	.\p90.h	/^    char* outputFilename;$/;"	m	struct:SCANPARAMS
outputScanParams	.\Sleator_apps\Hahn_echo\Hahn_echo.c	/^outputScanParams (SCANPARAMS * myScan)$/;"	f
outputScanParams	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.c	/^outputScanParams (SCANPARAMS * myScan)$/;"	f
outputScanParams	.\Sleator_apps\Stimulated_echo\Stimulated_echo.c	/^outputScanParams (SCANPARAMS * myScan)$/;"	f
outputScanParams	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.c	/^outputScanParams (SCANPARAMS * myScan)$/;"	f
outputScanParams	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^outputScanParams (SCANPARAMS * myScan)$/;"	f
output_name	.\swig\Hahn_echo\run_Hahn_echo.py	/^output_name = 'test_echo_2'$/;"	v
output_name	.\swig\ppg_lang\temp\run_temp.py	/^output_name = 'testing'$/;"	v
output_name	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^output_name = 'testing'$/;"	v
ov	.\SpinAPI\src\io_os.h	/^	OVERLAPPED ov; \/*< Associated overlapped IO data structure*\/$/;"	m	struct:io_future_desc
overflow_reset	.\mrispinapi.h	/^	CONTROL overflow_reset;$/;"	m	struct:__anon4
own	.\ppg_wrap.c	/^  int own;$/;"	m	struct:__anon7	file:
own	.\swig\Hahn_echo\.c	/^  int own;$/;"	m	struct:__anon105	file:
own	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int own;$/;"	m	struct:__anon109	file:
own	.\swig\example\example_wrap.c	/^  int own;$/;"	m	struct:__anon97	file:
own	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int own;$/;"	m	struct:__anon101	file:
own	.\swig\ppg_lang\ppg_lang_wrap.c	/^  int own;$/;"	m	struct:__anon113	file:
own	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  int own;$/;"	m	struct:__anon117	file:
own	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  int own;$/;"	m	struct:__anon121	file:
owndata	.\ppg_wrap.c	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:
owndata	.\swig\Hahn_echo\.c	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:
owndata	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:
owndata	.\swig\example\example_wrap.c	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:
owndata	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:
owndata	.\swig\ppg_lang\ppg_lang_wrap.c	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:
owndata	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:
owndata	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:
p0	.\proc_quick.py	/^    p0 = [max_val,0.2,avg_min]$/;"	v
p0	.\swig\Hahn_echo\proc_echo.py	/^    p0 = [max_val,0.2,avg_min]$/;"	v
p180Time_us	.\CPMG.h	/^    double p180Time_us;$/;"	m	struct:SCANPARAMS
p180Time_us	.\Field_Sweep.h	/^    double p180Time_us;$/;"	m	struct:SCANPARAMS
p180Time_us	.\Hahn_echo.h	/^    double p180Time_us;$/;"	m	struct:SCANPARAMS
p180Time_us	.\IR.h	/^    double p180Time_us;$/;"	m	struct:SCANPARAMS
p180Time_us	.\JFAB_Hahn_echo_hardcode.c	/^    double p180Time_us;$/;"	m	struct:SCANPARAMS	file:
p180Time_us	.\nutation.h	/^    double p180Time_us;$/;"	m	struct:SCANPARAMS
p180Time_us	.\nutation90.h	/^    double p180Time_us;$/;"	m	struct:SCANPARAMS
p180Time_us	.\p90.h	/^    double p180Time_us;$/;"	m	struct:SCANPARAMS
p180_phase	.\Sleator_apps\CPMG\cpmg.h	/^	double p180_phase;          \/\/degrees$/;"	m	struct:SCANPARAMS
p180_time	.\Sleator_apps\CPMG\cpmg.h	/^	double p180_time;           \/\/us$/;"	m	struct:SCANPARAMS
p1_phase	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double p1_phase;$/;"	m	struct:SCANPARAMS
p1_phase	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double p1_phase;$/;"	m	struct:SCANPARAMS
p1_phase	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double p1_phase;$/;"	m	struct:SCANPARAMS
p1_phase	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double p1_phase;$/;"	m	struct:SCANPARAMS
p1_time	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double p1_time;$/;"	m	struct:SCANPARAMS
p1_time	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double p1_time;$/;"	m	struct:SCANPARAMS
p1_time	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double p1_time;$/;"	m	struct:SCANPARAMS
p1_time	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double p1_time;$/;"	m	struct:SCANPARAMS
p2_phase	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double p2_phase;$/;"	m	struct:SCANPARAMS
p2_phase	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double p2_phase;$/;"	m	struct:SCANPARAMS
p2_phase	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double p2_phase;$/;"	m	struct:SCANPARAMS
p2_phase	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double p2_phase;$/;"	m	struct:SCANPARAMS
p2_time	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double p2_time;$/;"	m	struct:SCANPARAMS
p2_time	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double p2_time;$/;"	m	struct:SCANPARAMS
p2_time	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double p2_time;$/;"	m	struct:SCANPARAMS
p2_time	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double p2_time;$/;"	m	struct:SCANPARAMS
p3_phase	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double p3_phase;$/;"	m	struct:SCANPARAMS
p3_time	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double p3_time;$/;"	m	struct:SCANPARAMS
p90	.\swig\Hahn_echo\run_Hahn_echo.py	/^p90 = 1.0 # us$/;"	v
p90Time_us	.\CPMG.h	/^    double p90Time_us;$/;"	m	struct:SCANPARAMS
p90Time_us	.\Field_Sweep.h	/^    double p90Time_us;$/;"	m	struct:SCANPARAMS
p90Time_us	.\Hahn_echo.h	/^    double p90Time_us;$/;"	m	struct:SCANPARAMS
p90Time_us	.\IR.h	/^    double p90Time_us;$/;"	m	struct:SCANPARAMS
p90Time_us	.\JFAB_Hahn_echo_hardcode.c	/^    double p90Time_us;$/;"	m	struct:SCANPARAMS	file:
p90Time_us	.\nutation.h	/^    double p90Time_us;$/;"	m	struct:SCANPARAMS
p90Time_us	.\nutation90.h	/^    double p90Time_us;$/;"	m	struct:SCANPARAMS
p90Time_us	.\p90.h	/^    double p90Time_us;$/;"	m	struct:SCANPARAMS
p90Time_us	.\proc_quick.py	/^                p90Time_us = float(temp[1])$/;"	v
p90_phase	.\Sleator_apps\CPMG\cpmg.h	/^	double p90_phase;           \/\/degrees$/;"	m	struct:SCANPARAMS
p90_phase	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	double p90_phase;           \/\/degrees$/;"	m	struct:SCANPARAMS
p90_time	.\Sleator_apps\CPMG\cpmg.h	/^	double p90_time;            \/\/us$/;"	m	struct:SCANPARAMS
p90_time	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	double p90_time;            \/\/us$/;"	m	struct:SCANPARAMS
pack	.\ppg_wrap.c	/^  void *pack;$/;"	m	struct:__anon8	file:
pack	.\swig\Hahn_echo\.c	/^  void *pack;$/;"	m	struct:__anon106	file:
pack	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  void *pack;$/;"	m	struct:__anon110	file:
pack	.\swig\example\example_wrap.c	/^  void *pack;$/;"	m	struct:__anon98	file:
pack	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  void *pack;$/;"	m	struct:__anon102	file:
pack	.\swig\ppg_lang\ppg_lang_wrap.c	/^  void *pack;$/;"	m	struct:__anon114	file:
pack	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  void *pack;$/;"	m	struct:__anon118	file:
pack	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  void *pack;$/;"	m	struct:__anon122	file:
pause	.\GradientEcho.c	/^void pause(void)$/;"	f
pause	.\JFAB_Hahn_echo_hardcode.c	/^void pause(void)$/;"	f
pause	.\RPG_CPMG.c	/^void pause(void)$/;"	f
pause	.\RPG_Field_Sweep.c	/^void pause(void)$/;"	f
pause	.\RPG_Hahn_echo.c	/^void pause(void)$/;"	f
pause	.\RPG_IR.c	/^void pause(void)$/;"	f
pause	.\RPG_excite_test.c	/^void pause(void)$/;"	f
pause	.\RPG_nutation.c	/^void pause(void)$/;"	f
pause	.\RPG_nutation90.c	/^void pause(void)$/;"	f
pause	.\RPG_p90.c	/^void pause(void)$/;"	f
pause	.\RPG_tune.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\General\pb_debug.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\General\pb_read_firmware.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\General\pb_start.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\General\pb_stop.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PBDDS-III\pbdds3_ex1.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PBDDS-III\pbdds3_ex2.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlaster24\pb24_ex1.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlaster24\pb24_ex2.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlaster24\pb24_ex3.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlaster24\pb24_ex4.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlaster24\pb24_mem_depth_test.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlaster24\pb24_programmable_clock.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlaster24\pb24_two_boards.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTL_only.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_load_shape_ram.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg_ramp.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_cont.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_excite_test.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_phase_test.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example1.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example2.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example3.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example4.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example5.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_reset.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_trigger.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_example1.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_long_delay_test.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_loop_test.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_shortpulse_disable.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_start_address.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_subtest.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR\pbesr_long_delay_test.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR\pbesr_loop_test.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR\pbesr_manual_example.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\PulseBlasterESR\pbesr_sub_test.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\RadioProcessor\awg.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\RadioProcessor\excite_test.c	/^void pause(void)$/;"	f
pause	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^void pause(void)$/;"	f
pause	.\example_1.c	/^void pause(void)$/;"	f
pause	.\example_2.c	/^void pause(void)$/;"	f
pause	.\swig\Hahn_echo\Hahn_echo.c	/^void pause(void)$/;"	f
pause	.\swig\Hahn_echo\Hahn_echo.py	/^def pause():$/;"	f
pause	.\swig\Hahn_echo\Hahn_echo.py	/^pause = _Hahn_echo.pause$/;"	v
pause	.\swig\ppg_lang\temp\ppg_temp.c	/^void pause(void)$/;"	f
pause	.\swig\ppg_lang\temp\ppg_temp.py	/^def pause():$/;"	f
pause	.\swig\ppg_lang\temp\ppg_temp.py	/^pause = _ppg_temp.pause$/;"	v
pause	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^void pause(void)$/;"	f
pause	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def pause():$/;"	f
pause	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^pause = _ppg_temp_ph.pause$/;"	v
pb_4C_inst	.\SpinAPI\src\spinapi.c	/^pb_4C_inst(int flag, double length)$/;"	f
pb_4C_stop	.\SpinAPI\src\spinapi.c	/^pb_4C_stop(void)$/;"	f
pb_adc_zero	.\SpinAPI\src\if.c	/^SPINCORE_API int pb_adc_zero(int set)$/;"	f
pb_base_address	.\SpinAPI\src\caps.h	/^  unsigned int pb_base_address;$/;"	m	struct:__anon10
pb_bypass_FF_fix	.\SpinAPI\src\spinapi.c	/^pb_bypass_FF_fix (int option)$/;"	f
pb_clock_MHz	.\mrispinapi.h	/^	double pb_clock_MHz;$/;"	m	struct:__anon4
pb_clock_mult	.\SpinAPI\src\caps.h	/^  double pb_clock_mult;   \/** this times clock is the pulseblaster clock speed *\/$/;"	m	struct:__anon10
pb_clock_period_ns	.\mrispinapi.h	/^	double pb_clock_period_ns;$/;"	m	struct:__anon4
pb_close	.\SpinAPI\src\spinapi.c	/^pb_close (void)$/;"	f
pb_close	.\spinapi.py	/^def pb_close():$/;"	f
pb_core_clock	.\SpinAPI\src\spinapi.c	/^pb_core_clock (double clock_freq)$/;"	f
pb_core_clock	.\spinapi.py	/^def pb_core_clock(clock):$/;"	f
pb_core_version	.\SpinAPI\src\caps.h	/^  unsigned int pb_core_version;$/;"	m	struct:__anon10
pb_count_boards	.\SpinAPI\src\spinapi.c	/^pb_count_boards (void)$/;"	f
pb_count_boards	.\spinapi.py	/^def pb_count_boards():$/;"	f
pb_dds_load	.\SpinAPI\src\if.c	/^pb_dds_load (const float *data, int device)$/;"	f
pb_dds_set_envelope_freq	.\SpinAPI\src\if.c	/^pb_dds_set_envelope_freq(float f, int n)$/;"	f
pb_fft	.\SpinAPI\src\if.c	/^pb_fft (int n, const int *real_in, const int *imag_in, double *real_out, double *imag_out, double *mag_fft)$/;"	f
pb_fft_find_resonance	.\SpinAPI\src\if.c	/^pb_fft_find_resonance (int num_points, double SF, double SW, const int *real, const int *imag)$/;"	f
pb_generate_interrupt	.\SpinAPI\src\spinapi.c	/^pb_generate_interrupt (char mask)$/;"	f
pb_get_data	.\SpinAPI\src\if.c	/^pb_get_data (int num_points, int *real_data, int *imag_data)$/;"	f
pb_get_data_direct	.\SpinAPI\src\if.c	/^SPINCORE_API int pb_get_data_direct(int num_points, short *data)$/;"	f
pb_get_error	.\SpinAPI\src\debug.c	/^pb_get_error(void)$/;"	f
pb_get_error	.\spinapi.py	/^def pb_get_error():$/;"	f
pb_get_firmware_id	.\SpinAPI\src\spinapi.c	/^pb_get_firmware_id (void)$/;"	f
pb_get_last_error	.\SpinAPI\src\debug.c	/^pb_get_last_error(char *buffer, unsigned int size)$/;"	f
pb_get_version	.\SpinAPI\src\spinapi.c	/^pb_get_version (void)$/;"	f
pb_get_version	.\spinapi.py	/^def pb_get_version():$/;"	f
pb_get_wait_time	.\SpinAPI\include\radioprocessor.h	478;"	d
pb_get_wait_time	.\SpinAPI\src\radioprocessor.h	478;"	d
pb_init	.\SpinAPI\src\spinapi.c	/^pb_init (void)$/;"	f
pb_init	.\spinapi.py	/^def pb_init():$/;"	f
pb_inp	.\SpinAPI\src\spinapi.c	/^pb_inp (unsigned int address)$/;"	f
pb_inst	.\SpinAPI\include\dds.h	9;"	d
pb_inst	.\SpinAPI\include\pulseblaster.h	35;"	d
pb_inst	.\SpinAPI\include\pulseblaster.h	39;"	d
pb_inst	.\SpinAPI\include\pulseblaster.h	43;"	d
pb_inst	.\SpinAPI\include\pulseblaster.h	47;"	d
pb_inst	.\SpinAPI\src\dds.h	9;"	d
pb_inst	.\SpinAPI\src\pulseblaster.h	35;"	d
pb_inst	.\SpinAPI\src\pulseblaster.h	39;"	d
pb_inst	.\SpinAPI\src\pulseblaster.h	43;"	d
pb_inst	.\SpinAPI\src\pulseblaster.h	47;"	d
pb_inst_dds	.\SpinAPI\include\dds.h	181;"	d
pb_inst_dds	.\SpinAPI\src\dds.h	181;"	d
pb_inst_dds2	.\SpinAPI\src\spinapi.c	/^pb_inst_dds2 (int freq0, int phase0, int amp0, int dds_en0, int phase_reset0,$/;"	f
pb_inst_dds2	.\spinapi.py	/^def pb_inst_dds2(*args):$/;"	f
pb_inst_dds2_shape	.\SpinAPI\src\if.c	/^pb_inst_dds2_shape (int freq0, int phase0, int amp0, int use_shape0, int dds_en0, int phase_reset0,$/;"	f
pb_inst_dds_shape	.\SpinAPI\include\dds.h	184;"	d
pb_inst_dds_shape	.\SpinAPI\src\dds.h	184;"	d
pb_inst_direct	.\SpinAPI\src\spinapi.c	/^pb_inst_direct (const int *pflags, int inst, int inst_data_direct, int length)$/;"	f
pb_inst_hs24	.\SpinAPI\src\spinapi.c	/^pb_inst_hs24(const char* Flags, double length)$/;"	f
pb_inst_hs8	.\SpinAPI\src\spinapi.c	/^pb_inst_hs8(const char* Flags, double length)$/;"	f
pb_inst_onerf	.\SpinAPI\src\spinapi.c	/^pb_inst_onerf (int freq, int phase, int rf_output_enable, int flags, int inst,$/;"	f
pb_inst_pbonly	.\SpinAPI\src\spinapi.c	/^pb_inst_pbonly (unsigned int flags, int inst, int inst_data, double length)$/;"	f
pb_inst_pbonly64	.\SpinAPI\src\spinapi.c	/^pb_inst_pbonly64 (__int64 flags, int inst, int inst_data, double length)$/;"	f
pb_inst_radio	.\SpinAPI\src\if.c	/^pb_inst_radio (int freq, int cos_phase, int sin_phase, int tx_phase,$/;"	f
pb_inst_radio_shape	.\SpinAPI\src\if.c	/^pb_inst_radio_shape (int freq, int cos_phase, int sin_phase, int tx_phase,$/;"	f
pb_inst_radio_shape_cyclops	.\SpinAPI\src\if.c	/^pb_inst_radio_shape_cyclops (int freq, int cos_phase, int sin_phase, int tx_phase,$/;"	f
pb_inst_rpg	.\SpinAPI\src\if.c	/^pb_inst_rpg (unsigned int freq, unsigned int cos_phase, unsigned int sin_phase, $/;"	f
pb_inst_tworf	.\SpinAPI\src\spinapi.c	/^pb_inst_tworf (int freq, int tx_phase, int tx_output_enable, int rx_phase,$/;"	f
pb_inw	.\SpinAPI\src\spinapi.c	/^pb_inw (unsigned int address)$/;"	f
pb_load_coef_file	.\SpinAPI\src\if.c	/^pb_load_coef_file (int *coef, const char *fname, int num_coefs)$/;"	f
pb_outp	.\SpinAPI\src\spinapi.c	/^pb_outp (unsigned int address, unsigned char data)$/;"	f
pb_outw	.\SpinAPI\src\spinapi.c	/^pb_outw (unsigned int address, unsigned int data)$/;"	f
pb_overflow	.\SpinAPI\src\if.c	/^pb_overflow (int reset, PB_OVERFLOW_STRUCT * of)$/;"	f
pb_read_status	.\SpinAPI\src\spinapi.c	/^pb_read_status (void)$/;"	f
pb_reset	.\SpinAPI\src\spinapi.c	/^pb_reset (void)$/;"	f
pb_reset	.\spinapi.py	/^def pb_reset(): $/;"	f
pb_scan_count	.\SpinAPI\src\if.c	/^pb_scan_count (int reset)$/;"	f
pb_select_board	.\SpinAPI\src\spinapi.c	/^pb_select_board (int board_num)$/;"	f
pb_select_board	.\spinapi.py	/^def pb_select_board(board_number):$/;"	f
pb_select_core	.\SpinAPI\src\spinapi.c	/^int pb_select_core (unsigned int core_sel)$/;"	f
pb_select_dds	.\SpinAPI\src\spinapi.c	/^pb_select_dds (int dds_num)$/;"	f
pb_set_ISA_address	.\SpinAPI\src\spinapi.c	/^pb_set_ISA_address (int address)$/;"	f
pb_set_amp	.\SpinAPI\src\if.c	/^pb_set_amp (float amp, int addr)$/;"	f
pb_set_clock	.\SpinAPI\src\spinapi.c	/^pb_set_clock (double clock_freq)$/;"	f
pb_set_debug	.\SpinAPI\src\debug.c	/^pb_set_debug(int debug)$/;"	f
pb_set_debug	.\spinapi.py	/^def pb_set_debug(debug):$/;"	f
pb_set_defaults	.\SpinAPI\src\if.c	/^pb_set_defaults (void)$/;"	f
pb_set_defaults	.\spinapi.py	/^def pb_set_defaults():$/;"	f
pb_set_freq	.\SpinAPI\src\spinapi.c	/^pb_set_freq (double freq)$/;"	f
pb_set_irq_enable_mask	.\SpinAPI\src\spinapi.c	/^pb_set_irq_enable_mask (char mask)$/;"	f
pb_set_irq_immediate_mask	.\SpinAPI\src\spinapi.c	/^pb_set_irq_immediate_mask (char mask)$/;"	f
pb_set_isr	.\SpinAPI\src\spinapi.c	/^pb_set_isr (int irq_num, unsigned int isr_addr)$/;"	f
pb_set_num_points	.\SpinAPI\src\if.c	/^pb_set_num_points (int num_points)$/;"	f
pb_set_phase	.\SpinAPI\src\spinapi.c	/^pb_set_phase (double phase)$/;"	f
pb_set_pulse_regs	.\SpinAPI\src\spinapi.c	/^int pb_set_pulse_regs (unsigned int channel, double period, double clock_high, double offset)$/;"	f
pb_set_radio_control	.\SpinAPI\src\if.c	/^pb_set_radio_control (unsigned int control)$/;"	f
pb_set_radio_hw	.\SpinAPI\src\if.c	/^pb_set_radio_hw (int adc_control, int dac_control)$/;"	f
pb_set_scan_segments	.\SpinAPI\src\if.c	/^pb_set_scan_segments (int num_segments)$/;"	f
pb_set_shape_defaults	.\SpinAPI\src\if.c	/^pb_set_shape_defaults (void)$/;"	f
pb_setup_cic	.\SpinAPI\src\if.c	/^pb_setup_cic (int dec_amount, int shift_amount, int m, int stages)$/;"	f
pb_setup_filters	.\SpinAPI\src\if.c	/^pb_setup_filters (double spectral_width, int scan_repetitions, int cmd)$/;"	f
pb_setup_fir	.\SpinAPI\src\if.c	/^pb_setup_fir (int num_coefs, const int *coef, int shift_amount, int dec_amount)$/;"	f
pb_sleep_ms	.\SpinAPI\src\spinapi.c	/^pb_sleep_ms (int milliseconds)$/;"	f
pb_start	.\SpinAPI\src\spinapi.c	/^pb_start (void)$/;"	f
pb_start	.\spinapi.py	/^def pb_start():$/;"	f
pb_start_programming	.\SpinAPI\src\spinapi.c	/^pb_start_programming (int device)$/;"	f
pb_start_programming	.\spinapi.py	/^def pb_start_programming(target):$/;"	f
pb_status_message	.\SpinAPI\src\spinapi.c	/^*pb_status_message(void)$/;"	f
pb_stop	.\SpinAPI\src\spinapi.c	/^pb_stop (void)$/;"	f
pb_stop	.\spinapi.py	/^def pb_stop():$/;"	f
pb_stop_programming	.\SpinAPI\src\spinapi.c	/^pb_stop_programming (void)$/;"	f
pb_stop_programming	.\spinapi.py	/^def pb_stop_programming():$/;"	f
pb_unset_radio_control	.\SpinAPI\src\if.c	/^pb_unset_radio_control (unsigned int control)$/;"	f
pb_write_ascii	.\SpinAPI\src\if.c	/^pb_write_ascii (const char *fname, int num_points, float SW, const int *real_data,$/;"	f
pb_write_ascii_verbose	.\SpinAPI\src\if.c	/^pb_write_ascii_verbose (const char *fname, int num_points, float SW, float SF,$/;"	f
pb_write_felix	.\SpinAPI\src\if.c	/^pb_write_felix (const char *fnameout, const char *title_string, int num_points, float SW, float SF, $/;"	f
pb_write_jcamp	.\SpinAPI\src\if.c	/^pb_write_jcamp (const char *fname, int num_points, float SW, float SF,$/;"	f
pb_write_register	.\SpinAPI\src\spinapi.c	/^pb_write_register (unsigned int address, unsigned int value)$/;"	f
pb_write_register	.\spinapi.py	/^def pb_write_register(address, value):$/;"	f
pb_zero_ram	.\SpinAPI\src\if.c	/^pb_zero_ram(void)$/;"	f
ph_corr	.\proc_quick.py	/^            ph_corr = exp(1j*2*pi*0.29)$/;"	v
ph_corr	.\swig\Hahn_echo\proc_echo.py	/^            ph_corr = exp(1j*2*pi*0.29)$/;"	v
phase	.\proc_quick.py	/^        phase = True$/;"	v
phase	.\swig\Hahn_echo\proc_echo.py	/^        phase = True$/;"	v
phase1	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^phase1 = 0.0$/;"	v
phase2	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^phase2 = 90.0$/;"	v
phase3	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^phase3 = 180.0$/;"	v
phase4	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^phase4 = 270.0$/;"	v
phaseTime_us	.\2D_MRI.py	/^phaseTime_us=1000.0$/;"	v
phaseTime_us	.\GradientEcho.h	/^	double phaseTime_us;$/;"	m	struct:SCANPARAMS
phase_0	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^    int phase_0;$/;"	m	struct:CYCLOPSPARAMS
phase_1	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^    int phase_1;$/;"	m	struct:CYCLOPSPARAMS
phase_2	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^    int phase_2;$/;"	m	struct:CYCLOPSPARAMS
phase_3	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^    int phase_3;$/;"	m	struct:CYCLOPSPARAMS
phase_addr	.\SpinAPI\src\caps.h	/^  unsigned int phase_addr;$/;"	m	struct:__anon10
phase_addr	.\mrispinapi.h	/^	DWORD phase_addr;$/;"	m	struct:__anon4
phase_addr_cos_offset	.\SpinAPI\src\caps.h	/^  unsigned int phase_addr_cos_offset;$/;"	m	struct:__anon10
phase_addr_sin_offset	.\SpinAPI\src\caps.h	/^  unsigned int phase_addr_sin_offset;$/;"	m	struct:__anon10
phase_addr_tx_offset	.\SpinAPI\src\caps.h	/^  unsigned int phase_addr_tx_offset;$/;"	m	struct:__anon10
phase_data	.\SpinAPI\src\caps.h	/^  unsigned int phase_data;$/;"	m	struct:__anon10
phase_data	.\mrispinapi.h	/^	DWORD phase_data;$/;"	m	struct:__anon4
phase_en	.\2D_MRI.py	/^phase_en=1$/;"	v
phase_en	.\GradientEcho.h	/^	int phase_en;$/;"	m	struct:SCANPARAMS
phase_idx	.\JFAB_Hahn_echo_hardcode.c	/^    double phase_idx;$/;"	m	struct:SCANPARAMS	file:
phase_set_rpg	.\SpinAPI\src\if.c	/^phase_set_rpg(unsigned int addr_addr, unsigned int data_addr, unsigned int offset, $/;"	f
phase_values	.\JFAB_Hahn_echo_hardcode.c	/^    double phase_values[4] = {0.0,90.0,180.0,270.0};$/;"	m	struct:SCANPARAMS	file:
pi	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	/^const double pi = 3.1415926;$/;"	v
pi	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_load_shape_ram.c	/^const double pi = 3.1415926;$/;"	v
pi	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	/^const double pi = 3.1415926;$/;"	v
pi	.\SpinAPI\examples\RadioProcessor\awg.c	/^const double pi = 3.1415926;$/;"	v
pid_list	.\SpinAPI\src\driver-linux-usb.c	/^int pid_list[128] = { 0 };$/;"	v
pid_list	.\SpinAPI\src\driver-usb-windows.c	/^int pid_list[MAX_USB];$/;"	v
pixel	.\bitmap.h	/^	PIXELCOLOR** pixel;$/;"	m	struct:tagIMAGE
port_base	.\SpinAPI\src\spinapi.c	/^static int port_base = 0;$/;"	v	file:
pow232	.\SpinAPI\src\spinapi.c	/^double pow232 = 4294967296.0;$/;"	v
ppg_element	.\ppg.c	/^int ppg_element(char *str_label, double firstarg, double secondarg){$/;"	f
ppg_element	.\ppg.py	/^def ppg_element(str_label, firstarg, secondarg=0):$/;"	f
ppg_element	.\ppg.py	/^ppg_element = _ppg.ppg_element$/;"	v
ppg_element	.\swig\ppg_lang\ppg.py	/^def ppg_element(str_label, firstarg, secondarg=0):$/;"	f
ppg_element	.\swig\ppg_lang\ppg.py	/^ppg_element = _ppg.ppg_element$/;"	v
ppg_element	.\swig\ppg_lang\ppg_lang.c	/^int ppg_element(char *str_label, double firstarg, double secondarg){ \/*takes 3 vars*\/$/;"	f
ppg_element	.\swig\ppg_lang\ppg_lang.py	/^def ppg_element(str_label, firstarg, secondarg=0):$/;"	f
ppg_element	.\swig\ppg_lang\ppg_lang.py	/^ppg_element = _ppg_lang.ppg_element$/;"	v
ppg_element	.\swig\ppg_lang\temp\ppg_temp.c	/^int ppg_element(char *str_label, double firstarg, double secondarg){ \/*takes 3 vars*\/$/;"	f
ppg_element	.\swig\ppg_lang\temp\ppg_temp.py	/^def ppg_element(str_label, firstarg, secondarg=0):$/;"	f
ppg_element	.\swig\ppg_lang\temp\ppg_temp.py	/^ppg_element = _ppg_temp.ppg_element$/;"	v
ppg_element	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^int ppg_element(char *str_label, double firstarg, double secondarg){ \/*takes 3 vars*\/$/;"	f
ppg_element	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def ppg_element(str_label, firstarg, secondarg=0):$/;"	f
ppg_element	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^ppg_element = _ppg_temp_ph.ppg_element$/;"	v
ppg_temp	.\swig\ppg_lang\temp\run_temp.py	/^import ppg_temp$/;"	i
ppg_temp_ph	.\swig\ppg_lang\temp_ph\run_temp_ph.py	/^import ppg_temp_ph$/;"	i
prev	.\ppg_wrap.c	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
prev	.\swig\Hahn_echo\.c	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
prev	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
prev	.\swig\example\example_wrap.c	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
prev	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
prev	.\swig\ppg_lang\ppg_lang_wrap.c	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
prev	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
prev	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
printLicense	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example1.c	/^void printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example2.c	/^void printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example3.c	/^printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example4.c	/^printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example1.c	/^printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example2.c	/^printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example3.c	/^printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\USB-PTS\pts_fsweep.c	/^void printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\USB-PTS\usb-pts_ex_160.c	/^void printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\USB-PTS\usb-pts_ex_250.c	/^void printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\USB-PTS\usb-pts_ex_300.c	/^void printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\USB-PTS\usb-pts_ex_3200.c	/^void printLicense(void)$/;"	f
printLicense	.\SpinAPI\examples\USB-PTS\usb-pts_ex_500.c	/^void printLicense(void)$/;"	f
printProgramTitle	.\Sleator_apps\CPMG\cpmg.c	/^void printProgramTitle(char* title){$/;"	f
printProgramTitle	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^void printProgramTitle(char* title){$/;"	f
printProperUse	.\Sleator_apps\CPMG\cpmg.c	/^inline void printProperUse (){$/;"	f
printProperUse	.\Sleator_apps\Hahn_echo\Hahn_echo.c	/^printProperUse ()$/;"	f	file:
printProperUse	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.c	/^printProperUse ()$/;"	f	file:
printProperUse	.\Sleator_apps\Stimulated_echo\Stimulated_echo.c	/^printProperUse ()$/;"	f	file:
printProperUse	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.c	/^printProperUse ()$/;"	f	file:
printProperUse	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^printProperUse ()$/;"	f
printProperUse	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^inline void printProperUse (){$/;"	f
printScanParams	.\Sleator_apps\CPMG\cpmg.c	/^void printScanParams (SCANPARAMS * myScan){$/;"	f
printScanParams	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^void printScanParams (SCANPARAMS * myScan){$/;"	f
printTable	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	/^void printTable()$/;"	f
printTitleBlock	.\Sleator_apps\Hahn_echo\Hahn_echo.c	/^void printTitleBlock(SCANPARAMS *myScan, char *title_string)$/;"	f
printTitleBlock	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.c	/^void printTitleBlock(SCANPARAMS *myScan, char *title_string)$/;"	f
printTitleBlock	.\Sleator_apps\Stimulated_echo\Stimulated_echo.c	/^void printTitleBlock(SCANPARAMS *myScan, char *title_string)$/;"	f
printTitleBlock	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.c	/^void printTitleBlock(SCANPARAMS *myScan, char *title_string)$/;"	f
printTitleBlock	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^void printTitleBlock(SCANPARAMS *myScan, char *title_string)$/;"	f
processArguments	.\GradientEcho.c	/^int processArguments(int argc, char* argv[], SCANPARAMS* scanParams)$/;"	f
processArguments	.\JFAB_Hahn_echo_hardcode.c	/^int processArguments(int argc, char* argv[], SCANPARAMS* scanParams)$/;"	f
processArguments	.\RPG_CPMG.c	/^int processArguments(int argc, char* argv[], SCANPARAMS* scanParams)$/;"	f
processArguments	.\RPG_Field_Sweep.c	/^int processArguments(int argc, char* argv[], SCANPARAMS* scanParams)$/;"	f
processArguments	.\RPG_Hahn_echo.c	/^int processArguments(int argc, char* argv[], SCANPARAMS* scanParams)$/;"	f
processArguments	.\RPG_IR.c	/^int processArguments(int argc, char* argv[], SCANPARAMS* scanParams)$/;"	f
processArguments	.\RPG_nutation.c	/^int processArguments(int argc, char* argv[], SCANPARAMS* scanParams)$/;"	f
processArguments	.\RPG_nutation90.c	/^int processArguments(int argc, char* argv[], SCANPARAMS* scanParams)$/;"	f
processArguments	.\RPG_p90.c	/^int processArguments(int argc, char* argv[], SCANPARAMS* scanParams)$/;"	f
processArguments	.\Sleator_apps\CPMG\cpmg.c	/^int processArguments (int argc, char *argv[], SCANPARAMS * scanParams){$/;"	f
processArguments	.\Sleator_apps\Hahn_echo\Hahn_echo.c	/^processArguments (int argc, char *argv[], SCANPARAMS * scanParams)$/;"	f
processArguments	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.c	/^processArguments (int argc, char *argv[], SCANPARAMS * scanParams)$/;"	f
processArguments	.\Sleator_apps\Stimulated_echo\Stimulated_echo.c	/^processArguments (int argc, char *argv[], SCANPARAMS * scanParams)$/;"	f
processArguments	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.c	/^processArguments (int argc, char *argv[], SCANPARAMS * scanParams)$/;"	f
processArguments	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^processArguments (int argc, char *argv[], SCANPARAMS * scanParams, CYCLOPSPARAMS * cyclopsParams)$/;"	f
processArguments	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^int processArguments (int argc, char *argv[], SCANPARAMS * scanParams){$/;"	f
prog_clock_base_address	.\SpinAPI\src\caps.h	/^  unsigned int prog_clock_base_address; \/** base address for a programmable clock, used with SP9 boards *\/$/;"	m	struct:__anon10
programBoard	.\GradientEcho.c	/^int programBoard(SCANPARAMS * scanParams)$/;"	f
programBoard	.\JFAB_Hahn_echo_hardcode.c	/^int programBoard(SCANPARAMS * scanParams)$/;"	f
programBoard	.\RPG_CPMG.c	/^int programBoard(SCANPARAMS * scanParams)$/;"	f
programBoard	.\RPG_Field_Sweep.c	/^int programBoard(SCANPARAMS * scanParams)$/;"	f
programBoard	.\RPG_Hahn_echo.c	/^int programBoard(SCANPARAMS * scanParams)$/;"	f
programBoard	.\RPG_IR.c	/^int programBoard(SCANPARAMS * scanParams)$/;"	f
programBoard	.\RPG_nutation.c	/^int programBoard(SCANPARAMS * scanParams)$/;"	f
programBoard	.\RPG_nutation90.c	/^int programBoard(SCANPARAMS * scanParams)$/;"	f
programBoard	.\RPG_p90.c	/^int programBoard(SCANPARAMS * scanParams)$/;"	f
programBoard	.\Sleator_apps\CPMG\cpmg.c	/^int programBoard (SCANPARAMS * myScan){$/;"	f
programBoard	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^programBoard (SCANPARAMS * myScan, CYCLOPSPARAMS * cycScan)$/;"	f
programBoard	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^int programBoard (SCANPARAMS * myScan){  $/;"	f
programBoard	.\adc_offset.c	/^int programBoard( )$/;"	f
programBoard	.\swig\Hahn_echo\Hahn_echo.c	/^int programBoard(unsigned int nScans, double p90, double tau, double acq_time, double transient, double repetition){$/;"	f
programBoard	.\swig\Hahn_echo\Hahn_echo.py	/^def programBoard(nScans, p90, tau, acq_time, transient, repetition):$/;"	f
programBoard	.\swig\Hahn_echo\Hahn_echo.py	/^programBoard = _Hahn_echo.programBoard$/;"	v
program_and_start	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	/^program_and_start (float amp1, float amp2, float freq)$/;"	f
program_and_start	.\SpinAPI\examples\RadioProcessor\awg.c	/^program_and_start (float amp1, float amp2, float freq)$/;"	f
ptr	.\ppg_wrap.c	/^  void *ptr;$/;"	m	struct:__anon7	file:
ptr	.\swig\Hahn_echo\.c	/^  void *ptr;$/;"	m	struct:__anon105	file:
ptr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  void *ptr;$/;"	m	struct:__anon109	file:
ptr	.\swig\example\example_wrap.c	/^  void *ptr;$/;"	m	struct:__anon97	file:
ptr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  void *ptr;$/;"	m	struct:__anon101	file:
ptr	.\swig\ppg_lang\ppg_lang_wrap.c	/^  void *ptr;$/;"	m	struct:__anon113	file:
ptr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  void *ptr;$/;"	m	struct:__anon117	file:
ptr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  void *ptr;$/;"	m	struct:__anon121	file:
ptype	.\ppg_wrap.c	/^  swig_type_info **ptype;$/;"	m	struct:swig_const_info	file:
ptype	.\swig\Hahn_echo\.c	/^  swig_type_info **ptype;$/;"	m	struct:swig_const_info	file:
ptype	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_type_info **ptype;$/;"	m	struct:swig_const_info	file:
ptype	.\swig\example\example_wrap.c	/^  swig_type_info **ptype;$/;"	m	struct:swig_const_info	file:
ptype	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_type_info **ptype;$/;"	m	struct:swig_const_info	file:
ptype	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_type_info **ptype;$/;"	m	struct:swig_const_info	file:
ptype	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_type_info **ptype;$/;"	m	struct:swig_const_info	file:
ptype	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_type_info **ptype;$/;"	m	struct:swig_const_info	file:
pull_data	.\convert_txt2h5.py	/^def pull_data(directory,file_name,suppress_print = False):$/;"	f
pulseTime	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	double pulseTime;$/;"	m	struct:SCANPARAMS
pulseTime_us	.\2D_MRI.py	/^pulseTime_us=3.0$/;"	v
pulseTime_us	.\GradientEcho.h	/^	double pulseTime_us;$/;"	m	struct:SCANPARAMS
putsSweepOnce	.\SpinAPI\examples\USB-PTS\USB-PTS_Controller.tcl	/^proc putsSweepOnce {} {$/;"	p
putsVars	.\SpinAPI\examples\USB-PTS\USB-PTS_Controller.tcl	/^proc putsVars {} {$/;"	p
pvalue	.\ppg_wrap.c	/^  void   *pvalue;$/;"	m	struct:swig_const_info	file:
pvalue	.\swig\Hahn_echo\.c	/^  void   *pvalue;$/;"	m	struct:swig_const_info	file:
pvalue	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  void   *pvalue;$/;"	m	struct:swig_const_info	file:
pvalue	.\swig\example\example_wrap.c	/^  void   *pvalue;$/;"	m	struct:swig_const_info	file:
pvalue	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  void   *pvalue;$/;"	m	struct:swig_const_info	file:
pvalue	.\swig\ppg_lang\ppg_lang_wrap.c	/^  void   *pvalue;$/;"	m	struct:swig_const_info	file:
pvalue	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  void   *pvalue;$/;"	m	struct:swig_const_info	file:
pvalue	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  void   *pvalue;$/;"	m	struct:swig_const_info	file:
pytype	.\ppg_wrap.c	/^  PyTypeObject *pytype;$/;"	m	struct:__anon6	file:
pytype	.\swig\Hahn_echo\.c	/^  PyTypeObject *pytype;$/;"	m	struct:__anon104	file:
pytype	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyTypeObject *pytype;$/;"	m	struct:__anon108	file:
pytype	.\swig\example\example_wrap.c	/^  PyTypeObject *pytype;$/;"	m	struct:__anon96	file:
pytype	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyTypeObject *pytype;$/;"	m	struct:__anon100	file:
pytype	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyTypeObject *pytype;$/;"	m	struct:__anon112	file:
pytype	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyTypeObject *pytype;$/;"	m	struct:__anon116	file:
pytype	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyTypeObject *pytype;$/;"	m	struct:__anon120	file:
pytype_string	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  const char* pytype_string(PyObject* py_obj)$/;"	f
pytype_string	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  const char* pytype_string(PyObject* py_obj)$/;"	f
q0	.\proc_quick.py	/^    q0 = [0.2]$/;"	v
q0	.\swig\Hahn_echo\proc_echo.py	/^    q0 = [0.2]$/;"	v
r	.\bitmap.h	/^	char r;$/;"	m	struct:tagPIXELCOLOR
r	.\bitmap.h	/^	unsigned char* r;$/;"	m	struct:tagCOLORMAP
ram_write	.\SpinAPI\src\if.c	/^ram_write (unsigned int bank, unsigned int start_addr, unsigned int len,$/;"	f
raw_data	.\swig\Hahn_echo\run_Hahn_echo.py	/^raw_data = Hahn_echo.getData(data_length, nPoints, nEchoes, output_name)$/;"	v
readData	.\GradientEcho.c	/^int readData(SCANPARAMS * scanParams)$/;"	f
readData	.\JFAB_Hahn_echo_hardcode.c	/^int readData(SCANPARAMS * scanParams)$/;"	f
readData	.\RPG_CPMG.c	/^int readData(SCANPARAMS * scanParams)$/;"	f
readData	.\RPG_Field_Sweep.c	/^int readData(SCANPARAMS * scanParams)$/;"	f
readData	.\RPG_Hahn_echo.c	/^int readData(SCANPARAMS * scanParams)$/;"	f
readData	.\RPG_IR.c	/^int readData(SCANPARAMS * scanParams)$/;"	f
readData	.\RPG_nutation.c	/^int readData(SCANPARAMS * scanParams)$/;"	f
readData	.\RPG_nutation90.c	/^int readData(SCANPARAMS * scanParams)$/;"	f
readData	.\RPG_p90.c	/^int readData(SCANPARAMS * scanParams)$/;"	f
readData	.\adc_offset.c	/^int readData(int adc_offset, double* peak)$/;"	f
readable	.\devices.h	/^	int readable;$/;"	m	struct:__anon3
readbufferproc	.\ppg_wrap.c	/^typedef getreadbufferproc readbufferproc;$/;"	t	file:
readbufferproc	.\swig\Hahn_echo\.c	/^typedef getreadbufferproc readbufferproc;$/;"	t	file:
readbufferproc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef getreadbufferproc readbufferproc;$/;"	t	file:
readbufferproc	.\swig\example\example_wrap.c	/^typedef getreadbufferproc readbufferproc;$/;"	t	file:
readbufferproc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef getreadbufferproc readbufferproc;$/;"	t	file:
readbufferproc	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef getreadbufferproc readbufferproc;$/;"	t	file:
readbufferproc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef getreadbufferproc readbufferproc;$/;"	t	file:
readbufferproc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef getreadbufferproc readbufferproc;$/;"	t	file:
readout_en	.\2D_MRI.py	/^readout_en=1$/;"	v
readout_en	.\GradientEcho.h	/^	int readout_en;$/;"	m	struct:SCANPARAMS
reg_acq_overflow	.\mrispinapi.h	/^	DWORD reg_acq_overflow;$/;"	m	struct:__anon4
reg_filter_overflow	.\mrispinapi.h	/^	DWORD reg_filter_overflow;$/;"	m	struct:__anon4
reg_flags	.\mrispinapi.h	/^	DWORD reg_flags;$/;"	m	struct:__anon4
reg_read	.\SpinAPI\src\if.c	/^reg_read (unsigned int address)$/;"	f
reg_read_simple	.\SpinAPI\src\if.c	/^reg_read_simple (unsigned int address)$/;"	f
reg_scan_count	.\SpinAPI\src\caps.h	/^  unsigned int reg_scan_count;$/;"	m	struct:__anon10
reg_scan_count	.\mrispinapi.h	/^	DWORD reg_scan_count;$/;"	m	struct:__anon4
reg_write	.\SpinAPI\src\if.c	/^reg_write (unsigned int address, unsigned int data)$/;"	f
reg_write_simple	.\SpinAPI\src\if.c	/^reg_write_simple (unsigned int address, unsigned int data)$/;"	f
repetition	.\swig\Hahn_echo\run_Hahn_echo.py	/^repetition = 1000.0 # ms$/;"	v
repetitionDelay	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	double repetitionDelay;$/;"	m	struct:SCANPARAMS
repetitionDelay_s	.\2D_MRI.py	/^repetitionDelay_s=0.25$/;"	v
repetitionDelay_s	.\CPMG.h	/^    double repetitionDelay_s;$/;"	m	struct:SCANPARAMS
repetitionDelay_s	.\Field_Sweep.h	/^    double repetitionDelay_s;$/;"	m	struct:SCANPARAMS
repetitionDelay_s	.\GradientEcho.h	/^	double repetitionDelay_s;$/;"	m	struct:SCANPARAMS
repetitionDelay_s	.\Hahn_echo.h	/^    double repetitionDelay_s;$/;"	m	struct:SCANPARAMS
repetitionDelay_s	.\IR.h	/^    double repetitionDelay_s;$/;"	m	struct:SCANPARAMS
repetitionDelay_s	.\JFAB_Hahn_echo_hardcode.c	/^    double repetitionDelay_s;$/;"	m	struct:SCANPARAMS	file:
repetitionDelay_s	.\nutation.h	/^    double repetitionDelay_s;$/;"	m	struct:SCANPARAMS
repetitionDelay_s	.\nutation90.h	/^    double repetitionDelay_s;$/;"	m	struct:SCANPARAMS
repetitionDelay_s	.\p90.h	/^    double repetitionDelay_s;$/;"	m	struct:SCANPARAMS
repetition_delay	.\Sleator_apps\CPMG\cpmg.h	/^	double repetition_delay;    \/\/s$/;"	m	struct:SCANPARAMS
repetition_delay	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double repetition_delay;$/;"	m	struct:SCANPARAMS
repetition_delay	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double repetition_delay;$/;"	m	struct:SCANPARAMS
repetition_delay	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double repetition_delay;$/;"	m	struct:SCANPARAMS
repetition_delay	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double repetition_delay;$/;"	m	struct:SCANPARAMS
repetition_delay	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	double repetition_delay;    \/\/s	$/;"	m	struct:SCANPARAMS
require_c_or_f_contiguous	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int require_c_or_f_contiguous(PyArrayObject* ary)$/;"	f
require_c_or_f_contiguous	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int require_c_or_f_contiguous(PyArrayObject* ary)$/;"	f
require_contiguous	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int require_contiguous(PyArrayObject* ary)$/;"	f
require_contiguous	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int require_contiguous(PyArrayObject* ary)$/;"	f
require_dimensions	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int require_dimensions(PyArrayObject* ary,$/;"	f
require_dimensions	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int require_dimensions(PyArrayObject* ary,$/;"	f
require_dimensions_n	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int require_dimensions_n(PyArrayObject* ary,$/;"	f
require_dimensions_n	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int require_dimensions_n(PyArrayObject* ary,$/;"	f
require_fortran	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int require_fortran(PyArrayObject* ary)$/;"	f
require_fortran	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int require_fortran(PyArrayObject* ary)$/;"	f
require_native	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int require_native(PyArrayObject* ary)$/;"	f
require_native	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int require_native(PyArrayObject* ary)$/;"	f
require_size	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int require_size(PyArrayObject* ary,$/;"	f
require_size	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int require_size(PyArrayObject* ary,$/;"	f
res_frequency	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	double res_frequency;       \/\/MHz$/;"	m	struct:SCANPARAMS
reserved	.\SpinAPI\src\cyioctl.h	/^    UCHAR reserved;$/;"	m	struct:_SINGLE_TRANSFER
reserved	.\SpinAPI\src\io.h	/^	void *reserved;$/;"	m	struct:io_future_t
ringdown_time	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double ringdown_time;$/;"	m	struct:SCANPARAMS
ringdown_time	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double ringdown_time;$/;"	m	struct:SCANPARAMS
ringdown_time	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double ringdown_time;$/;"	m	struct:SCANPARAMS
ringdown_time	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double ringdown_time;$/;"	m	struct:SCANPARAMS
roundUpPower2	.\RPG_CPMG.c	/^int roundUpPower2(int number)$/;"	f
roundUpPower2	.\RPG_IR.c	/^int roundUpPower2(int number)$/;"	f
roundUpPower2	.\RPG_nutation.c	/^int roundUpPower2(int number)$/;"	f
roundUpPower2	.\RPG_nutation90.c	/^int roundUpPower2(int number)$/;"	f
roundUpPower2	.\RPG_p90.c	/^int roundUpPower2(int number)$/;"	f
roundUpPower2	.\Sleator_apps\CPMG\cpmg.c	/^ int roundUpPower2(int number){$/;"	f
roundUpPower2	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^ int roundUpPower2(int number){$/;"	f
round_int	.\SpinAPI\src\util.c	/^round_int(double value)$/;"	f
round_uint	.\SpinAPI\src\util.c	/^round_uint(double value)$/;"	f
row_padding	.\bitmap.h	/^	int row_padding;$/;"	m	struct:tagBMPFILE
rows	.\bitmap.h	/^	int rows;$/;"	m	struct:tagIMAGE
runBoard	.\swig\Hahn_echo\Hahn_echo.c	/^int runBoard()$/;"	f
runBoard	.\swig\Hahn_echo\Hahn_echo.py	/^def runBoard():$/;"	f
runBoard	.\swig\Hahn_echo\Hahn_echo.py	/^runBoard = _Hahn_echo.runBoard$/;"	v
runBoard	.\swig\ppg_lang\temp\ppg_temp.c	/^int runBoard()$/;"	f
runBoard	.\swig\ppg_lang\temp\ppg_temp.py	/^def runBoard():$/;"	f
runBoard	.\swig\ppg_lang\temp\ppg_temp.py	/^runBoard = _ppg_temp.runBoard$/;"	v
runBoard	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^int runBoard()$/;"	f
runBoard	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def runBoard():$/;"	f
runBoard	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^runBoard = _ppg_temp_ph.runBoard$/;"	v
runPulseProgram	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.c	/^runPulseProgram(SCANPARAMS * myScan)  $/;"	f
runPulseProgram	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.c	/^runPulseProgram(SCANPARAMS * myScan)  $/;"	f
runScan	.\GradientEcho.c	/^int runScan(SCANPARAMS * scanParams)$/;"	f
runScan	.\JFAB_Hahn_echo_hardcode.c	/^int runScan(SCANPARAMS * scanParams)$/;"	f
runScan	.\RPG_CPMG.c	/^int runScan(SCANPARAMS * scanParams)$/;"	f
runScan	.\RPG_Field_Sweep.c	/^int runScan(SCANPARAMS * scanParams)$/;"	f
runScan	.\RPG_Hahn_echo.c	/^int runScan(SCANPARAMS * scanParams)$/;"	f
runScan	.\RPG_IR.c	/^int runScan(SCANPARAMS * scanParams)$/;"	f
runScan	.\RPG_nutation.c	/^int runScan(SCANPARAMS * scanParams)$/;"	f
runScan	.\RPG_nutation90.c	/^int runScan(SCANPARAMS * scanParams)$/;"	f
runScan	.\RPG_p90.c	/^int runScan(SCANPARAMS * scanParams)$/;"	f
runScan	.\adc_offset.c	/^int runScan( )$/;"	f
rx_freq	.\mrispinapi.h	/^	DEVICE rx_freq;$/;"	m	struct:__anon4
s	.\proc_quick.py	/^        s = s['t':(-5e3,5e3)]$/;"	v
s	.\proc_quick.py	/^    s = nddata_hdf5(filename+'\/'+nodename,$/;"	v
s	.\proc_sweep.py	/^s = nddata_hdf5(filename+'\/'+nodename,$/;"	v
s	.\swig\Hahn_echo\proc_echo.py	/^        s = s['t':(-5e3,5e3)]$/;"	v
s	.\swig\Hahn_echo\proc_echo.py	/^    s = nddata_hdf5(filename+'\/'+nodename,$/;"	v
save_file	.\convert_txt2h5.py	/^        save_file = False$/;"	v
save_file	.\convert_txt2h5.py	/^save_file = True$/;"	v
save_file	.\swig\Hahn_echo\run_Hahn_echo.py	/^save_file = True$/;"	v
scan_time	.\Sleator_apps\CPMG\cpmg.h	/^	double scan_time;           \/\/ms$/;"	m	struct:SCANPARAMS
scan_time	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^    double scan_time;           \/\/ms$/;"	m	struct:SCANPARAMS
segcountproc	.\ppg_wrap.c	/^typedef getsegcountproc segcountproc;$/;"	t	file:
segcountproc	.\swig\Hahn_echo\.c	/^typedef getsegcountproc segcountproc;$/;"	t	file:
segcountproc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef getsegcountproc segcountproc;$/;"	t	file:
segcountproc	.\swig\example\example_wrap.c	/^typedef getsegcountproc segcountproc;$/;"	t	file:
segcountproc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef getsegcountproc segcountproc;$/;"	t	file:
segcountproc	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef getsegcountproc segcountproc;$/;"	t	file:
segcountproc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef getsegcountproc segcountproc;$/;"	t	file:
segcountproc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef getsegcountproc segcountproc;$/;"	t	file:
select_board	.\SpinAPI\examples\General\pb_debug.c	/^int select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\General\pb_start.c	/^int select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\General\pb_stop.c	/^int select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PBDDS-III\pbdds3_ex1.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PBDDS-III\pbdds3_ex2.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example1.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example2.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example3.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore250_example4.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example1.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example2.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster-Quadcore\pb_quadcore500_example3.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster24\pb24_ex1.c	/^int select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster24\pb24_ex2.c	/^int select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster24\pb24_ex3.c	/^int select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster24\pb24_ex4.c	/^int select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster24\pb24_mem_depth_test.c	/^int select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlaster24\pb24_programmable_clock.c	/^int select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTL_only.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_TTLflag_default.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_excite_test.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_load_shape_ram.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_startAddress_default.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_amplitude_sweep.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_cont.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_excite_test.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_frequency_sweep.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_phase_test.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example1.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example2.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example3.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example4.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_example5.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_reset.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO-II\pbesr_pro_ii_trigger.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_example1.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_long_delay_test.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_loop_test.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_shortpulse_disable.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_start_address.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR-PRO\pbesr_pro_subtest.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR\pbesr_long_delay_test.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR\pbesr_loop_test.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR\pbesr_manual_example.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\PulseBlasterESR\pbesr_sub_test.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\RadioProcessor\DirectCapture.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\RadioProcessor\awg.c	/^select_board(int numBoards)$/;"	f
select_board	.\SpinAPI\examples\RadioProcessor\excite_test.c	/^int select_board(int numBoards)$/;"	f
set_attr	.\ppg_wrap.c	/^    int       (*set_attr)(PyObject *); \/* Set the value *\/$/;"	m	struct:swig_globalvar	file:
set_attr	.\swig\Hahn_echo\.c	/^    int       (*set_attr)(PyObject *); \/* Set the value *\/$/;"	m	struct:swig_globalvar	file:
set_attr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^    int       (*set_attr)(PyObject *); \/* Set the value *\/$/;"	m	struct:swig_globalvar	file:
set_attr	.\swig\example\example_wrap.c	/^    int       (*set_attr)(PyObject *); \/* Set the value *\/$/;"	m	struct:swig_globalvar	file:
set_attr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^    int       (*set_attr)(PyObject *); \/* Set the value *\/$/;"	m	struct:swig_globalvar	file:
set_attr	.\swig\ppg_lang\ppg_lang_wrap.c	/^    int       (*set_attr)(PyObject *); \/* Set the value *\/$/;"	m	struct:swig_globalvar	file:
set_attr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^    int       (*set_attr)(PyObject *); \/* Set the value *\/$/;"	m	struct:swig_globalvar	file:
set_attr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^    int       (*set_attr)(PyObject *); \/* Set the value *\/$/;"	m	struct:swig_globalvar	file:
set_pts	.\SpinAPI\src\spinapi.c	/^SPINCORE_API int set_pts(double maxFreq, int is160, int is3200, int allowPhase, int noPTS, double frequency, int phase)$/;"	f
set_pts_ex	.\SpinAPI\src\spinapi.c	/^SPINCORE_API int set_pts_ex(int pts_index, double maxFreq, int is160, int is3200, int allowPhase, int noPTS, double frequency, int phase)\/\/ , PTSDevice* device)$/;"	f
set_shape_period	.\SpinAPI\src\if.c	/^set_shape_period (double period, int addr)$/;"	f	file:
setup_xfer	.\SpinAPI\src\usb.c	/^setup_xfer (unsigned int addr, unsigned int packet_len)$/;"	f
shapeRF	.\GradientEcho.h	/^	int shapeRF; \/\/ number of lobes for a sinc pulse (0 = no shape)$/;"	m	struct:SCANPARAMS
shape_addr	.\SpinAPI\src\caps.h	/^  unsigned int shape_addr;$/;"	m	struct:__anon10
shape_addr	.\mrispinapi.h	/^	DWORD shape_addr;$/;"	m	struct:__anon4
shape_data	.\SpinAPI\src\caps.h	/^  unsigned int shape_data;$/;"	m	struct:__anon10
shape_data	.\mrispinapi.h	/^	DWORD shape_data;$/;"	m	struct:__anon4
shape_list	.\SpinAPI\src\if.c	/^static double shape_list[7]; \/\/stores the length (in nanoseconds) for each use of shape.$/;"	v	file:
shape_list1	.\SpinAPI\src\if.c	/^static double shape_list1[7]; \/\/ stores the length (in nanoseconds) for each use of shape for the second DDS-II channel$/;"	v	file:
shape_list_offset	.\SpinAPI\src\if.c	/^static int shape_list_offset; \/\/an index for shape_list[]$/;"	v	file:
shape_list_offset1	.\SpinAPI\src\if.c	/^static int shape_list_offset1; \/\/an index for shape_list1[] (used for second DDS-II channel)$/;"	v	file:
shape_make_ramp	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	/^void shape_make_ramp (float *shape_data)$/;"	f
shape_make_ramp	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_load_shape_ram.c	/^void shape_make_ramp (float *shape_data)$/;"	f
shape_make_ramp	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	/^shape_make_ramp (float *shape_data)$/;"	f
shape_make_ramp	.\SpinAPI\examples\RadioProcessor\awg.c	/^shape_make_ramp (float *shape_data)$/;"	f
shape_make_revramp	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	/^void shape_make_revramp (float *shape_data)$/;"	f
shape_make_revramp	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_load_shape_ram.c	/^void shape_make_revramp (float *shape_data)$/;"	f
shape_make_sin	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	/^shape_make_sin (float *shape_data)$/;"	f
shape_make_sin	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_load_shape_ram.c	/^shape_make_sin (float *shape_data)$/;"	f
shape_make_sin	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	/^shape_make_sin (float *shape_data)$/;"	f
shape_make_sin	.\SpinAPI\examples\RadioProcessor\awg.c	/^shape_make_sin (float *shape_data)$/;"	f
shape_make_sin	.\SpinAPI\src\if.c	/^shape_make_sin (float *shape_data)$/;"	f	file:
shape_make_sinc	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_awg.c	/^shape_make_sinc (float *shape_data, int lobes)$/;"	f
shape_make_sinc	.\SpinAPI\examples\PulseBlasterDDS-II\pbdds2_load_shape_ram.c	/^shape_make_sinc (float *shape_data, int lobes)$/;"	f
shape_make_sinc	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_awg.c	/^shape_make_sinc (float *shape_data, int lobes)$/;"	f
shape_make_sinc	.\SpinAPI\examples\RadioProcessor\awg.c	/^shape_make_sinc (float *shape_data, int lobes)$/;"	f
shape_period_array	.\SpinAPI\src\if.c	/^int shape_period_array[2][7]; \/\/stores the results of set_shape_period(...) to be written to DDS-II boards after pb_stop_programming() is called.$/;"	v
shape_sinc	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^shape_sinc (float *shape_data, void *nlobe)$/;"	f
shape_sinc	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^void shape_sinc (float *shape_data, void *nlobe){$/;"	f
sin_phase	.\mrispinapi.h	/^	DEVICE sin_phase;$/;"	m	struct:__anon4
sin_phase_width	.\SpinAPI\src\caps.h	/^  unsigned int sin_phase_width;$/;"	m	struct:__anon10
size	.\ppg_wrap.c	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:
size	.\ppg_wrap.c	/^  size_t size;$/;"	m	struct:__anon8	file:
size	.\swig\Hahn_echo\.c	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:
size	.\swig\Hahn_echo\.c	/^  size_t size;$/;"	m	struct:__anon106	file:
size	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:
size	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  size_t size;$/;"	m	struct:__anon110	file:
size	.\swig\example\example_wrap.c	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:
size	.\swig\example\example_wrap.c	/^  size_t size;$/;"	m	struct:__anon98	file:
size	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:
size	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  size_t size;$/;"	m	struct:__anon102	file:
size	.\swig\ppg_lang\ppg_lang_wrap.c	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:
size	.\swig\ppg_lang\ppg_lang_wrap.c	/^  size_t size;$/;"	m	struct:__anon114	file:
size	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:
size	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  size_t size;$/;"	m	struct:__anon118	file:
size	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:
size	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  size_t size;$/;"	m	struct:__anon122	file:
slice_en	.\2D_MRI.py	/^slice_en=0$/;"	v
slice_en	.\GradientEcho.h	/^	int slice_en;$/;"	m	struct:SCANPARAMS
slots	.\ppg_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon5	file:
slots	.\swig\Hahn_echo\.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon103	file:
slots	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon107	file:
slots	.\swig\example\example_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon95	file:
slots	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon99	file:
slots	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon111	file:
slots	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon115	file:
slots	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyObject *name, *slots;$/;"	m	struct:__anon119	file:
slowDown	.\SpinAPI\examples\USB-PTS\USB-PTS_Controller.tcl	/^proc slowDown {} {$/;"	p
slowUp	.\SpinAPI\examples\USB-PTS\USB-PTS_Controller.tcl	/^proc slowUp {} {$/;"	p
spectralWidth	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	double spectralWidth;$/;"	m	struct:SCANPARAMS
spectralWidth_kHz	.\2D_MRI.py	/^spectralWidth_kHz=64.0$/;"	v
spectralWidth_kHz	.\GradientEcho.h	/^	double spectralWidth_kHz;$/;"	m	struct:SCANPARAMS
spectrometerFrequency	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	double spectrometerFrequency;$/;"	m	struct:SCANPARAMS
spectrometerFrequency_MHz	.\2D_MRI.py	/^spectrometerFrequency_MHz=11.82$/;"	v
spectrometerFrequency_MHz	.\GradientEcho.h	/^	double spectrometerFrequency_MHz;$/;"	m	struct:SCANPARAMS
spinapi	.\spinapi.py	/^		spinapi = ctypes.CDLL("spinapi")$/;"	v
spinapi	.\spinapi.py	/^	spinapi = ctypes.CDLL("spinapi64")$/;"	v
spincore_stop	.\swig\Hahn_echo\Hahn_echo.c	/^int spincore_stop(void)$/;"	f
spincore_stop	.\swig\Hahn_echo\Hahn_echo.py	/^def spincore_stop():$/;"	f
spincore_stop	.\swig\Hahn_echo\Hahn_echo.py	/^spincore_stop = _Hahn_echo.spincore_stop$/;"	v
spinpts_err	.\SpinAPI\src\spinapi.c	/^static int  spinpts_err = -1;$/;"	v	file:
spinpts_err_buf	.\SpinAPI\src\spinapi.c	/^static char spinpts_err_buf[ERROR_STR_SIZE];$/;"	v	file:
spinpts_get_error	.\SpinAPI\src\spinapi.c	/^SPINCORE_API const char* spinpts_get_error(void)$/;"	f
spinpts_get_version	.\SpinAPI\src\spinapi.c	/^SPINCORE_API const char* spinpts_get_version(void)$/;"	f
spinpts_version	.\SpinAPI\src\spinapi.c	/^static char *spinpts_version = VER_STRING_API;$/;"	v	file:
ssizeargfunc	.\ppg_wrap.c	/^typedef intargfunc ssizeargfunc;$/;"	t	file:
ssizeargfunc	.\swig\Hahn_echo\.c	/^typedef intargfunc ssizeargfunc;$/;"	t	file:
ssizeargfunc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef intargfunc ssizeargfunc;$/;"	t	file:
ssizeargfunc	.\swig\example\example_wrap.c	/^typedef intargfunc ssizeargfunc;$/;"	t	file:
ssizeargfunc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef intargfunc ssizeargfunc;$/;"	t	file:
ssizeargfunc	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef intargfunc ssizeargfunc;$/;"	t	file:
ssizeargfunc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef intargfunc ssizeargfunc;$/;"	t	file:
ssizeargfunc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef intargfunc ssizeargfunc;$/;"	t	file:
ssizeobjargproc	.\ppg_wrap.c	/^typedef intobjargproc ssizeobjargproc;$/;"	t	file:
ssizeobjargproc	.\swig\Hahn_echo\.c	/^typedef intobjargproc ssizeobjargproc;$/;"	t	file:
ssizeobjargproc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef intobjargproc ssizeobjargproc;$/;"	t	file:
ssizeobjargproc	.\swig\example\example_wrap.c	/^typedef intobjargproc ssizeobjargproc;$/;"	t	file:
ssizeobjargproc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef intobjargproc ssizeobjargproc;$/;"	t	file:
ssizeobjargproc	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef intobjargproc ssizeobjargproc;$/;"	t	file:
ssizeobjargproc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef intobjargproc ssizeobjargproc;$/;"	t	file:
ssizeobjargproc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef intobjargproc ssizeobjargproc;$/;"	t	file:
ssizessizeargfunc	.\ppg_wrap.c	/^typedef intintargfunc ssizessizeargfunc;$/;"	t	file:
ssizessizeargfunc	.\swig\Hahn_echo\.c	/^typedef intintargfunc ssizessizeargfunc;$/;"	t	file:
ssizessizeargfunc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef intintargfunc ssizessizeargfunc;$/;"	t	file:
ssizessizeargfunc	.\swig\example\example_wrap.c	/^typedef intintargfunc ssizessizeargfunc;$/;"	t	file:
ssizessizeargfunc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef intintargfunc ssizessizeargfunc;$/;"	t	file:
ssizessizeargfunc	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef intintargfunc ssizessizeargfunc;$/;"	t	file:
ssizessizeargfunc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef intintargfunc ssizessizeargfunc;$/;"	t	file:
ssizessizeargfunc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef intintargfunc ssizessizeargfunc;$/;"	t	file:
ssizessizeobjargproc	.\ppg_wrap.c	/^typedef intintobjargproc ssizessizeobjargproc;$/;"	t	file:
ssizessizeobjargproc	.\swig\Hahn_echo\.c	/^typedef intintobjargproc ssizessizeobjargproc;$/;"	t	file:
ssizessizeobjargproc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef intintobjargproc ssizessizeobjargproc;$/;"	t	file:
ssizessizeobjargproc	.\swig\example\example_wrap.c	/^typedef intintobjargproc ssizessizeobjargproc;$/;"	t	file:
ssizessizeobjargproc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef intintobjargproc ssizessizeobjargproc;$/;"	t	file:
ssizessizeobjargproc	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef intintobjargproc ssizessizeobjargproc;$/;"	t	file:
ssizessizeobjargproc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef intintobjargproc ssizessizeobjargproc;$/;"	t	file:
ssizessizeobjargproc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef intintobjargproc ssizessizeobjargproc;$/;"	t	file:
start_bit	.\controls.h	/^	DWORD start_bit;$/;"	m	struct:__anon2
status_message	.\SpinAPI\src\spinapi.c	/^char status_message[120];$/;"	v
status_oldstyle	.\SpinAPI\src\caps.h	/^  int status_oldstyle; \/** ... **\/$/;"	m	struct:__anon10
status_reg	.\SpinAPI\src\caps.h	/^  unsigned int status_reg;$/;"	m	struct:__anon10
stop_ppg	.\swig\ppg_lang\temp\ppg_temp.c	/^int stop_ppg(){$/;"	f
stop_ppg	.\swig\ppg_lang\temp\ppg_temp.py	/^def stop_ppg():$/;"	f
stop_ppg	.\swig\ppg_lang\temp\ppg_temp.py	/^stop_ppg = _ppg_temp.stop_ppg$/;"	v
stop_ppg	.\swig\ppg_lang\temp_ph\ppg_temp_ph.c	/^int stop_ppg(){$/;"	f
stop_ppg	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^def stop_ppg():$/;"	f
stop_ppg	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^stop_ppg = _ppg_temp_ph.stop_ppg$/;"	v
str	.\ppg_wrap.c	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:
str	.\swig\Hahn_echo\.c	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:
str	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:
str	.\swig\example\example_wrap.c	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:
str	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:
str	.\swig\ppg_lang\ppg_lang_wrap.c	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:
str	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:
str	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:
str_to_ns	.\SpinAPI\examples\PulseBlasterDDS-I\pbdds_i_300_bipolar_square_wave.c	/^str_to_ns(char *str, double *time)$/;"	f
supports_cyclops	.\SpinAPI\src\caps.h	/^  int supports_cyclops;$/;"	m	struct:__anon10
supports_dds_shape	.\SpinAPI\src\caps.h	/^  int supports_dds_shape;$/;"	m	struct:__anon10
supports_scan_count	.\SpinAPI\src\caps.h	/^  int supports_scan_count;$/;"	m	struct:__anon10
supports_scan_segments	.\SpinAPI\src\caps.h	/^  int supports_scan_segments;$/;"	m	struct:__anon10
swap_0	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int swap_0;$/;"	m	struct:CYCLOPSPARAMS
swap_1	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int swap_1;$/;"	m	struct:CYCLOPSPARAMS
swap_2	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int swap_2;$/;"	m	struct:CYCLOPSPARAMS
swap_3	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	int swap_3;   $/;"	m	struct:CYCLOPSPARAMS
swig_cast_info	.\ppg_wrap.c	/^typedef struct swig_cast_info {$/;"	s	file:
swig_cast_info	.\ppg_wrap.c	/^} swig_cast_info;$/;"	t	typeref:struct:swig_cast_info	file:
swig_cast_info	.\swig\Hahn_echo\.c	/^typedef struct swig_cast_info {$/;"	s	file:
swig_cast_info	.\swig\Hahn_echo\.c	/^} swig_cast_info;$/;"	t	typeref:struct:swig_cast_info	file:
swig_cast_info	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef struct swig_cast_info {$/;"	s	file:
swig_cast_info	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^} swig_cast_info;$/;"	t	typeref:struct:swig_cast_info	file:
swig_cast_info	.\swig\example\example_wrap.c	/^typedef struct swig_cast_info {$/;"	s	file:
swig_cast_info	.\swig\example\example_wrap.c	/^} swig_cast_info;$/;"	t	typeref:struct:swig_cast_info	file:
swig_cast_info	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef struct swig_cast_info {$/;"	s	file:
swig_cast_info	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^} swig_cast_info;$/;"	t	typeref:struct:swig_cast_info	file:
swig_cast_info	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef struct swig_cast_info {$/;"	s	file:
swig_cast_info	.\swig\ppg_lang\ppg_lang_wrap.c	/^} swig_cast_info;$/;"	t	typeref:struct:swig_cast_info	file:
swig_cast_info	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef struct swig_cast_info {$/;"	s	file:
swig_cast_info	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^} swig_cast_info;$/;"	t	typeref:struct:swig_cast_info	file:
swig_cast_info	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef struct swig_cast_info {$/;"	s	file:
swig_cast_info	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^} swig_cast_info;$/;"	t	typeref:struct:swig_cast_info	file:
swig_cast_initial	.\ppg_wrap.c	/^static swig_cast_info *swig_cast_initial[] = {$/;"	v	file:
swig_cast_initial	.\swig\Hahn_echo\.c	/^static swig_cast_info *swig_cast_initial[] = {$/;"	v	file:
swig_cast_initial	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_cast_info *swig_cast_initial[] = {$/;"	v	file:
swig_cast_initial	.\swig\example\example_wrap.c	/^static swig_cast_info *swig_cast_initial[] = {$/;"	v	file:
swig_cast_initial	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static swig_cast_info *swig_cast_initial[] = {$/;"	v	file:
swig_cast_initial	.\swig\ppg_lang\ppg_lang_wrap.c	/^static swig_cast_info *swig_cast_initial[] = {$/;"	v	file:
swig_cast_initial	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static swig_cast_info *swig_cast_initial[] = {$/;"	v	file:
swig_cast_initial	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static swig_cast_info *swig_cast_initial[] = {$/;"	v	file:
swig_const_info	.\ppg_wrap.c	/^typedef struct swig_const_info {$/;"	s	file:
swig_const_info	.\ppg_wrap.c	/^} swig_const_info;$/;"	t	typeref:struct:swig_const_info	file:
swig_const_info	.\swig\Hahn_echo\.c	/^typedef struct swig_const_info {$/;"	s	file:
swig_const_info	.\swig\Hahn_echo\.c	/^} swig_const_info;$/;"	t	typeref:struct:swig_const_info	file:
swig_const_info	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef struct swig_const_info {$/;"	s	file:
swig_const_info	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^} swig_const_info;$/;"	t	typeref:struct:swig_const_info	file:
swig_const_info	.\swig\example\example_wrap.c	/^typedef struct swig_const_info {$/;"	s	file:
swig_const_info	.\swig\example\example_wrap.c	/^} swig_const_info;$/;"	t	typeref:struct:swig_const_info	file:
swig_const_info	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef struct swig_const_info {$/;"	s	file:
swig_const_info	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^} swig_const_info;$/;"	t	typeref:struct:swig_const_info	file:
swig_const_info	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef struct swig_const_info {$/;"	s	file:
swig_const_info	.\swig\ppg_lang\ppg_lang_wrap.c	/^} swig_const_info;$/;"	t	typeref:struct:swig_const_info	file:
swig_const_info	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef struct swig_const_info {$/;"	s	file:
swig_const_info	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^} swig_const_info;$/;"	t	typeref:struct:swig_const_info	file:
swig_const_info	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef struct swig_const_info {$/;"	s	file:
swig_const_info	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^} swig_const_info;$/;"	t	typeref:struct:swig_const_info	file:
swig_const_table	.\ppg_wrap.c	/^static swig_const_info swig_const_table[] = {$/;"	v	file:
swig_const_table	.\swig\Hahn_echo\.c	/^static swig_const_info swig_const_table[] = {$/;"	v	file:
swig_const_table	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_const_info swig_const_table[] = {$/;"	v	file:
swig_const_table	.\swig\example\example_wrap.c	/^static swig_const_info swig_const_table[] = {$/;"	v	file:
swig_const_table	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static swig_const_info swig_const_table[] = {$/;"	v	file:
swig_const_table	.\swig\ppg_lang\ppg_lang_wrap.c	/^static swig_const_info swig_const_table[] = {$/;"	v	file:
swig_const_table	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static swig_const_info swig_const_table[] = {$/;"	v	file:
swig_const_table	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static swig_const_info swig_const_table[] = {$/;"	v	file:
swig_converter_func	.\ppg_wrap.c	/^typedef void *(*swig_converter_func)(void *, int *);$/;"	t	file:
swig_converter_func	.\swig\Hahn_echo\.c	/^typedef void *(*swig_converter_func)(void *, int *);$/;"	t	file:
swig_converter_func	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef void *(*swig_converter_func)(void *, int *);$/;"	t	file:
swig_converter_func	.\swig\example\example_wrap.c	/^typedef void *(*swig_converter_func)(void *, int *);$/;"	t	file:
swig_converter_func	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef void *(*swig_converter_func)(void *, int *);$/;"	t	file:
swig_converter_func	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef void *(*swig_converter_func)(void *, int *);$/;"	t	file:
swig_converter_func	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef void *(*swig_converter_func)(void *, int *);$/;"	t	file:
swig_converter_func	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef void *(*swig_converter_func)(void *, int *);$/;"	t	file:
swig_dycast_func	.\ppg_wrap.c	/^typedef struct swig_type_info *(*swig_dycast_func)(void **);$/;"	t	typeref:struct:swig_dycast_func	file:
swig_dycast_func	.\swig\Hahn_echo\.c	/^typedef struct swig_type_info *(*swig_dycast_func)(void **);$/;"	t	typeref:struct:swig_dycast_func	file:
swig_dycast_func	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef struct swig_type_info *(*swig_dycast_func)(void **);$/;"	t	typeref:struct:swig_dycast_func	file:
swig_dycast_func	.\swig\example\example_wrap.c	/^typedef struct swig_type_info *(*swig_dycast_func)(void **);$/;"	t	typeref:struct:swig_dycast_func	file:
swig_dycast_func	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef struct swig_type_info *(*swig_dycast_func)(void **);$/;"	t	typeref:struct:swig_dycast_func	file:
swig_dycast_func	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef struct swig_type_info *(*swig_dycast_func)(void **);$/;"	t	typeref:struct:swig_dycast_func	file:
swig_dycast_func	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef struct swig_type_info *(*swig_dycast_func)(void **);$/;"	t	typeref:struct:swig_dycast_func	file:
swig_dycast_func	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef struct swig_type_info *(*swig_dycast_func)(void **);$/;"	t	typeref:struct:swig_dycast_func	file:
swig_globalvar	.\ppg_wrap.c	/^  typedef struct swig_globalvar {$/;"	s	file:
swig_globalvar	.\ppg_wrap.c	/^  } swig_globalvar;$/;"	t	typeref:struct:swig_globalvar	file:
swig_globalvar	.\swig\Hahn_echo\.c	/^  typedef struct swig_globalvar {$/;"	s	file:
swig_globalvar	.\swig\Hahn_echo\.c	/^  } swig_globalvar;$/;"	t	typeref:struct:swig_globalvar	file:
swig_globalvar	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  typedef struct swig_globalvar {$/;"	s	file:
swig_globalvar	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  } swig_globalvar;$/;"	t	typeref:struct:swig_globalvar	file:
swig_globalvar	.\swig\example\example_wrap.c	/^  typedef struct swig_globalvar {$/;"	s	file:
swig_globalvar	.\swig\example\example_wrap.c	/^  } swig_globalvar;$/;"	t	typeref:struct:swig_globalvar	file:
swig_globalvar	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  typedef struct swig_globalvar {$/;"	s	file:
swig_globalvar	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  } swig_globalvar;$/;"	t	typeref:struct:swig_globalvar	file:
swig_globalvar	.\swig\ppg_lang\ppg_lang_wrap.c	/^  typedef struct swig_globalvar {$/;"	s	file:
swig_globalvar	.\swig\ppg_lang\ppg_lang_wrap.c	/^  } swig_globalvar;$/;"	t	typeref:struct:swig_globalvar	file:
swig_globalvar	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  typedef struct swig_globalvar {$/;"	s	file:
swig_globalvar	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  } swig_globalvar;$/;"	t	typeref:struct:swig_globalvar	file:
swig_globalvar	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  typedef struct swig_globalvar {$/;"	s	file:
swig_globalvar	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  } swig_globalvar;$/;"	t	typeref:struct:swig_globalvar	file:
swig_import_helper	.\ppg.py	/^    def swig_import_helper():$/;"	f
swig_import_helper	.\swig\Hahn_echo\Hahn_echo.py	/^    def swig_import_helper():$/;"	f
swig_import_helper	.\swig\example\example.py	/^    def swig_import_helper():$/;"	f
swig_import_helper	.\swig\example\get_rand_array\get_rand_array.py	/^    def swig_import_helper():$/;"	f
swig_import_helper	.\swig\ppg_lang\ppg.py	/^    def swig_import_helper():$/;"	f
swig_import_helper	.\swig\ppg_lang\ppg_lang.py	/^    def swig_import_helper():$/;"	f
swig_import_helper	.\swig\ppg_lang\temp\ppg_temp.py	/^    def swig_import_helper():$/;"	f
swig_import_helper	.\swig\ppg_lang\temp_ph\ppg_temp_ph.py	/^    def swig_import_helper():$/;"	f
swig_module	.\ppg_wrap.c	/^static swig_module_info swig_module = {swig_types, 1, 0, 0, 0, 0};$/;"	v	file:
swig_module	.\swig\Hahn_echo\.c	/^static swig_module_info swig_module = {swig_types, 1, 0, 0, 0, 0};$/;"	v	file:
swig_module	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_module_info swig_module = {swig_types, 15, 0, 0, 0, 0};$/;"	v	file:
swig_module	.\swig\example\example_wrap.c	/^static swig_module_info swig_module = {swig_types, 1, 0, 0, 0, 0};$/;"	v	file:
swig_module	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static swig_module_info swig_module = {swig_types, 2, 0, 0, 0, 0};$/;"	v	file:
swig_module	.\swig\ppg_lang\ppg_lang_wrap.c	/^static swig_module_info swig_module = {swig_types, 1, 0, 0, 0, 0};$/;"	v	file:
swig_module	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static swig_module_info swig_module = {swig_types, 1, 0, 0, 0, 0};$/;"	v	file:
swig_module	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static swig_module_info swig_module = {swig_types, 1, 0, 0, 0, 0};$/;"	v	file:
swig_module_info	.\ppg_wrap.c	/^typedef struct swig_module_info {$/;"	s	file:
swig_module_info	.\ppg_wrap.c	/^} swig_module_info;$/;"	t	typeref:struct:swig_module_info	file:
swig_module_info	.\swig\Hahn_echo\.c	/^typedef struct swig_module_info {$/;"	s	file:
swig_module_info	.\swig\Hahn_echo\.c	/^} swig_module_info;$/;"	t	typeref:struct:swig_module_info	file:
swig_module_info	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef struct swig_module_info {$/;"	s	file:
swig_module_info	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^} swig_module_info;$/;"	t	typeref:struct:swig_module_info	file:
swig_module_info	.\swig\example\example_wrap.c	/^typedef struct swig_module_info {$/;"	s	file:
swig_module_info	.\swig\example\example_wrap.c	/^} swig_module_info;$/;"	t	typeref:struct:swig_module_info	file:
swig_module_info	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef struct swig_module_info {$/;"	s	file:
swig_module_info	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^} swig_module_info;$/;"	t	typeref:struct:swig_module_info	file:
swig_module_info	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef struct swig_module_info {$/;"	s	file:
swig_module_info	.\swig\ppg_lang\ppg_lang_wrap.c	/^} swig_module_info;$/;"	t	typeref:struct:swig_module_info	file:
swig_module_info	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef struct swig_module_info {$/;"	s	file:
swig_module_info	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^} swig_module_info;$/;"	t	typeref:struct:swig_module_info	file:
swig_module_info	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef struct swig_module_info {$/;"	s	file:
swig_module_info	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^} swig_module_info;$/;"	t	typeref:struct:swig_module_info	file:
swig_owntype	.\ppg_wrap.c	1170;"	d	file:
swig_owntype	.\swig\Hahn_echo\.c	1170;"	d	file:
swig_owntype	.\swig\Hahn_echo\Hahn_echo_wrap.c	1170;"	d	file:
swig_owntype	.\swig\example\example_wrap.c	1170;"	d	file:
swig_owntype	.\swig\example\get_rand_array\get_rand_array_wrap.c	1170;"	d	file:
swig_owntype	.\swig\ppg_lang\ppg_lang_wrap.c	1170;"	d	file:
swig_owntype	.\swig\ppg_lang\temp\ppg_temp_wrap.c	1170;"	d	file:
swig_owntype	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	1170;"	d	file:
swig_this	.\ppg_wrap.c	/^static PyObject *swig_this = NULL;$/;"	v	file:
swig_this	.\swig\Hahn_echo\.c	/^static PyObject *swig_this = NULL;$/;"	v	file:
swig_this	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static PyObject *swig_this = NULL;$/;"	v	file:
swig_this	.\swig\example\example_wrap.c	/^static PyObject *swig_this = NULL;$/;"	v	file:
swig_this	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static PyObject *swig_this = NULL;$/;"	v	file:
swig_this	.\swig\ppg_lang\ppg_lang_wrap.c	/^static PyObject *swig_this = NULL;$/;"	v	file:
swig_this	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static PyObject *swig_this = NULL;$/;"	v	file:
swig_this	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static PyObject *swig_this = NULL;$/;"	v	file:
swig_type_info	.\ppg_wrap.c	/^typedef struct swig_type_info {$/;"	s	file:
swig_type_info	.\ppg_wrap.c	/^} swig_type_info;$/;"	t	typeref:struct:swig_type_info	file:
swig_type_info	.\swig\Hahn_echo\.c	/^typedef struct swig_type_info {$/;"	s	file:
swig_type_info	.\swig\Hahn_echo\.c	/^} swig_type_info;$/;"	t	typeref:struct:swig_type_info	file:
swig_type_info	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef struct swig_type_info {$/;"	s	file:
swig_type_info	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^} swig_type_info;$/;"	t	typeref:struct:swig_type_info	file:
swig_type_info	.\swig\example\example_wrap.c	/^typedef struct swig_type_info {$/;"	s	file:
swig_type_info	.\swig\example\example_wrap.c	/^} swig_type_info;$/;"	t	typeref:struct:swig_type_info	file:
swig_type_info	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef struct swig_type_info {$/;"	s	file:
swig_type_info	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^} swig_type_info;$/;"	t	typeref:struct:swig_type_info	file:
swig_type_info	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef struct swig_type_info {$/;"	s	file:
swig_type_info	.\swig\ppg_lang\ppg_lang_wrap.c	/^} swig_type_info;$/;"	t	typeref:struct:swig_type_info	file:
swig_type_info	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef struct swig_type_info {$/;"	s	file:
swig_type_info	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^} swig_type_info;$/;"	t	typeref:struct:swig_type_info	file:
swig_type_info	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef struct swig_type_info {$/;"	s	file:
swig_type_info	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^} swig_type_info;$/;"	t	typeref:struct:swig_type_info	file:
swig_type_initial	.\ppg_wrap.c	/^static swig_type_info *swig_type_initial[] = {$/;"	v	file:
swig_type_initial	.\swig\Hahn_echo\.c	/^static swig_type_info *swig_type_initial[] = {$/;"	v	file:
swig_type_initial	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info *swig_type_initial[] = {$/;"	v	file:
swig_type_initial	.\swig\example\example_wrap.c	/^static swig_type_info *swig_type_initial[] = {$/;"	v	file:
swig_type_initial	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static swig_type_info *swig_type_initial[] = {$/;"	v	file:
swig_type_initial	.\swig\ppg_lang\ppg_lang_wrap.c	/^static swig_type_info *swig_type_initial[] = {$/;"	v	file:
swig_type_initial	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static swig_type_info *swig_type_initial[] = {$/;"	v	file:
swig_type_initial	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static swig_type_info *swig_type_initial[] = {$/;"	v	file:
swig_types	.\ppg_wrap.c	/^static swig_type_info *swig_types[2];$/;"	v	file:
swig_types	.\swig\Hahn_echo\.c	/^static swig_type_info *swig_types[2];$/;"	v	file:
swig_types	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^static swig_type_info *swig_types[16];$/;"	v	file:
swig_types	.\swig\example\example_wrap.c	/^static swig_type_info *swig_types[2];$/;"	v	file:
swig_types	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^static swig_type_info *swig_types[3];$/;"	v	file:
swig_types	.\swig\ppg_lang\ppg_lang_wrap.c	/^static swig_type_info *swig_types[2];$/;"	v	file:
swig_types	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^static swig_type_info *swig_types[2];$/;"	v	file:
swig_types	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^static swig_type_info *swig_types[2];$/;"	v	file:
swig_varlink_dealloc	.\ppg_wrap.c	/^  swig_varlink_dealloc(swig_varlinkobject *v) {$/;"	f
swig_varlink_dealloc	.\swig\Hahn_echo\.c	/^  swig_varlink_dealloc(swig_varlinkobject *v) {$/;"	f
swig_varlink_dealloc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_varlink_dealloc(swig_varlinkobject *v) {$/;"	f
swig_varlink_dealloc	.\swig\example\example_wrap.c	/^  swig_varlink_dealloc(swig_varlinkobject *v) {$/;"	f
swig_varlink_dealloc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_varlink_dealloc(swig_varlinkobject *v) {$/;"	f
swig_varlink_dealloc	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_varlink_dealloc(swig_varlinkobject *v) {$/;"	f
swig_varlink_dealloc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_varlink_dealloc(swig_varlinkobject *v) {$/;"	f
swig_varlink_dealloc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_varlink_dealloc(swig_varlinkobject *v) {$/;"	f
swig_varlink_getattr	.\ppg_wrap.c	/^  swig_varlink_getattr(swig_varlinkobject *v, char *n) {$/;"	f
swig_varlink_getattr	.\swig\Hahn_echo\.c	/^  swig_varlink_getattr(swig_varlinkobject *v, char *n) {$/;"	f
swig_varlink_getattr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_varlink_getattr(swig_varlinkobject *v, char *n) {$/;"	f
swig_varlink_getattr	.\swig\example\example_wrap.c	/^  swig_varlink_getattr(swig_varlinkobject *v, char *n) {$/;"	f
swig_varlink_getattr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_varlink_getattr(swig_varlinkobject *v, char *n) {$/;"	f
swig_varlink_getattr	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_varlink_getattr(swig_varlinkobject *v, char *n) {$/;"	f
swig_varlink_getattr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_varlink_getattr(swig_varlinkobject *v, char *n) {$/;"	f
swig_varlink_getattr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_varlink_getattr(swig_varlinkobject *v, char *n) {$/;"	f
swig_varlink_print	.\ppg_wrap.c	/^  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {$/;"	f
swig_varlink_print	.\swig\Hahn_echo\.c	/^  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {$/;"	f
swig_varlink_print	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {$/;"	f
swig_varlink_print	.\swig\example\example_wrap.c	/^  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {$/;"	f
swig_varlink_print	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {$/;"	f
swig_varlink_print	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {$/;"	f
swig_varlink_print	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {$/;"	f
swig_varlink_print	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {$/;"	f
swig_varlink_setattr	.\ppg_wrap.c	/^  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {$/;"	f
swig_varlink_setattr	.\swig\Hahn_echo\.c	/^  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {$/;"	f
swig_varlink_setattr	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {$/;"	f
swig_varlink_setattr	.\swig\example\example_wrap.c	/^  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {$/;"	f
swig_varlink_setattr	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {$/;"	f
swig_varlink_setattr	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {$/;"	f
swig_varlink_setattr	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {$/;"	f
swig_varlink_setattr	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {$/;"	f
swig_varlink_str	.\ppg_wrap.c	/^  swig_varlink_str(swig_varlinkobject *v) {$/;"	f
swig_varlink_str	.\swig\Hahn_echo\.c	/^  swig_varlink_str(swig_varlinkobject *v) {$/;"	f
swig_varlink_str	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_varlink_str(swig_varlinkobject *v) {$/;"	f
swig_varlink_str	.\swig\example\example_wrap.c	/^  swig_varlink_str(swig_varlinkobject *v) {$/;"	f
swig_varlink_str	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_varlink_str(swig_varlinkobject *v) {$/;"	f
swig_varlink_str	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_varlink_str(swig_varlinkobject *v) {$/;"	f
swig_varlink_str	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_varlink_str(swig_varlinkobject *v) {$/;"	f
swig_varlink_str	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_varlink_str(swig_varlinkobject *v) {$/;"	f
swig_varlink_type	.\ppg_wrap.c	/^  swig_varlink_type(void) {$/;"	f
swig_varlink_type	.\swig\Hahn_echo\.c	/^  swig_varlink_type(void) {$/;"	f
swig_varlink_type	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_varlink_type(void) {$/;"	f
swig_varlink_type	.\swig\example\example_wrap.c	/^  swig_varlink_type(void) {$/;"	f
swig_varlink_type	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_varlink_type(void) {$/;"	f
swig_varlink_type	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_varlink_type(void) {$/;"	f
swig_varlink_type	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_varlink_type(void) {$/;"	f
swig_varlink_type	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_varlink_type(void) {$/;"	f
swig_varlinkobject	.\ppg_wrap.c	/^  typedef struct swig_varlinkobject {$/;"	s	file:
swig_varlinkobject	.\ppg_wrap.c	/^  } swig_varlinkobject;$/;"	t	typeref:struct:swig_varlinkobject	file:
swig_varlinkobject	.\swig\Hahn_echo\.c	/^  typedef struct swig_varlinkobject {$/;"	s	file:
swig_varlinkobject	.\swig\Hahn_echo\.c	/^  } swig_varlinkobject;$/;"	t	typeref:struct:swig_varlinkobject	file:
swig_varlinkobject	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  typedef struct swig_varlinkobject {$/;"	s	file:
swig_varlinkobject	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  } swig_varlinkobject;$/;"	t	typeref:struct:swig_varlinkobject	file:
swig_varlinkobject	.\swig\example\example_wrap.c	/^  typedef struct swig_varlinkobject {$/;"	s	file:
swig_varlinkobject	.\swig\example\example_wrap.c	/^  } swig_varlinkobject;$/;"	t	typeref:struct:swig_varlinkobject	file:
swig_varlinkobject	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  typedef struct swig_varlinkobject {$/;"	s	file:
swig_varlinkobject	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  } swig_varlinkobject;$/;"	t	typeref:struct:swig_varlinkobject	file:
swig_varlinkobject	.\swig\ppg_lang\ppg_lang_wrap.c	/^  typedef struct swig_varlinkobject {$/;"	s	file:
swig_varlinkobject	.\swig\ppg_lang\ppg_lang_wrap.c	/^  } swig_varlinkobject;$/;"	t	typeref:struct:swig_varlinkobject	file:
swig_varlinkobject	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  typedef struct swig_varlinkobject {$/;"	s	file:
swig_varlinkobject	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  } swig_varlinkobject;$/;"	t	typeref:struct:swig_varlinkobject	file:
swig_varlinkobject	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  typedef struct swig_varlinkobject {$/;"	s	file:
swig_varlinkobject	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  } swig_varlinkobject;$/;"	t	typeref:struct:swig_varlinkobject	file:
swigobject_methods	.\ppg_wrap.c	/^swigobject_methods[] = {$/;"	v	file:
swigobject_methods	.\swig\Hahn_echo\.c	/^swigobject_methods[] = {$/;"	v	file:
swigobject_methods	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^swigobject_methods[] = {$/;"	v	file:
swigobject_methods	.\swig\example\example_wrap.c	/^swigobject_methods[] = {$/;"	v	file:
swigobject_methods	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^swigobject_methods[] = {$/;"	v	file:
swigobject_methods	.\swig\ppg_lang\ppg_lang_wrap.c	/^swigobject_methods[] = {$/;"	v	file:
swigobject_methods	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^swigobject_methods[] = {$/;"	v	file:
swigobject_methods	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^swigobject_methods[] = {$/;"	v	file:
sys	.\convert_txt2h5.py	/^import sys$/;"	i
sys	.\swig\Hahn_echo\run_Hahn_echo.py	/^import sys$/;"	i
system64	.\SpinAPI\drivers\_install.bat	/^		set system64=true$/;"	v
system64	.\SpinAPI\drivers\_install.bat	/^set system64=false$/;"	v
system64	.\SpinAPI\drivers\_uninstall.bat	/^		set system64=true$/;"	v
system64	.\SpinAPI\drivers\_uninstall.bat	/^set system64=false$/;"	v
system64	.\SpinAPI\drivers\_windriver.bat	/^		set system64=true$/;"	v
system64	.\SpinAPI\drivers\_windriver.bat	/^set system64=false$/;"	v
szCSDVersion	.\SpinAPI\src\ddk_headers\winddk.h	/^  WCHAR  szCSDVersion[128];$/;"	m	struct:_RTL_OSVERSIONINFOEXW
szCSDVersion	.\SpinAPI\src\ddk_headers\winddk.h	/^  WCHAR  szCSDVersion[128];$/;"	m	struct:_RTL_OSVERSIONINFOW
sz_buffer	.\SpinAPI\src\io.h	/^	unsigned int sz_buffer; \/*< Size of the buffer*\/$/;"	m	struct:io_future_t
t2_axis	.\proc_quick.py	/^        t2_axis = t_axis[0:int(nPoints)]$/;"	v
t2_axis	.\swig\Hahn_echo\proc_echo.py	/^        t2_axis = t_axis[0:int(nPoints)]$/;"	v
t_axis	.\proc_quick.py	/^        t_axis = s.getaxis('t')$/;"	v
t_axis	.\swig\Hahn_echo\proc_echo.py	/^        t_axis = s.getaxis('t')$/;"	v
tagBITMAPFILEHEADER	.\bitmap.h	/^typedef struct tagBITMAPFILEHEADER {$/;"	s
tagBITMAPINFOHEADER	.\bitmap.h	/^typedef struct tagBITMAPINFOHEADER { $/;"	s
tagBMPFILE	.\bitmap.h	/^typedef struct tagBMPFILE {$/;"	s
tagCOLORMAP	.\bitmap.h	/^typedef struct tagCOLORMAP{$/;"	s
tagIMAGE	.\bitmap.h	/^typedef struct tagIMAGE {$/;"	s
tagLabel	.\SpinAPI\interpreter\src\interpreter.cpp	/^typedef struct tagLabel$/;"	s	file:
tagPIXELCOLOR	.\bitmap.h	/^typedef struct tagPIXELCOLOR {$/;"	s
tagProgramLine	.\SpinAPI\interpreter\src\interpreter.cpp	/^typedef struct tagProgramLine$/;"	s	file:
tagToken	.\SpinAPI\interpreter\src\interpreter.cpp	/^typedef struct tagToken$/;"	s	file:
tagVariable	.\SpinAPI\interpreter\src\interpreter.cpp	/^typedef struct tagVariable$/;"	s	file:
tau	.\Sleator_apps\CPMG\cpmg.h	/^	double tau;                 \/\/us$/;"	m	struct:SCANPARAMS
tau	.\Sleator_apps\Hahn_echo\Hahn_echo.h	/^	double tau;$/;"	m	struct:SCANPARAMS
tau	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double tau;$/;"	m	struct:SCANPARAMS
tau	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double tau;$/;"	m	struct:SCANPARAMS
tau	.\swig\Hahn_echo\run_Hahn_echo.py	/^tau = 10500.0 # us$/;"	v
tau1	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double tau1;$/;"	m	struct:SCANPARAMS
tau2	.\Sleator_apps\Stimulated_echo\Stimulated_echo.h	/^	double tau2;$/;"	m	struct:SCANPARAMS
tauDelay_us	.\CPMG.h	/^    double tauDelay_us;$/;"	m	struct:SCANPARAMS
tauDelay_us	.\Field_Sweep.h	/^    double tauDelay_us;$/;"	m	struct:SCANPARAMS
tauDelay_us	.\Hahn_echo.h	/^    double tauDelay_us;$/;"	m	struct:SCANPARAMS
tauDelay_us	.\JFAB_Hahn_echo_hardcode.c	/^    double tauDelay_us;$/;"	m	struct:SCANPARAMS	file:
tauDelay_us	.\nutation.h	/^    double tauDelay_us;$/;"	m	struct:SCANPARAMS
tauDelay_us	.\nutation90.h	/^    double tauDelay_us;$/;"	m	struct:SCANPARAMS
tauDelay_us	.\p90.h	/^    double tauDelay_us;$/;"	m	struct:SCANPARAMS
tauDelay_us	.\proc_quick.py	/^                tauDelay_us = float(temp[1])$/;"	v
tau_min	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.h	/^	double tau_min;$/;"	m	struct:SCANPARAMS
tau_min	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.h	/^	double tau_min;$/;"	m	struct:SCANPARAMS
temp	.\proc_quick.py	/^                temp = line.strip().split()$/;"	v
temp	.\proc_quick.py	/^                temp = temp[1].split('=')$/;"	v
temp	.\proc_quick.py	/^            temp = line.strip().split()$/;"	v
temp	.\proc_quick.py	/^            temp = p90Time_us*x*1e-6$/;"	v
temp	.\swig\Hahn_echo\proc_echo.py	/^            temp = line.strip().split()$/;"	v
temp	.\swig\Hahn_echo\proc_echo.py	/^            temp = p90Time_us*x*1e-6$/;"	v
time	.\SpinAPI\interpreter\src\interpreter.cpp	/^	std::string time;$/;"	m	struct:tagProgramLine	file:
time_axis	.\swig\Hahn_echo\run_Hahn_echo.py	/^time_axis = linspace(0.0,acq_time*1e-3,nPoints)$/;"	v
timeunit	.\SpinAPI\interpreter\src\interpreter.cpp	/^	std::string timeunit;$/;"	m	struct:tagProgramLine	file:
transTime	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	double transTime;$/;"	m	struct:SCANPARAMS
transTime_us	.\2D_MRI.py	/^transTime_us=120.0$/;"	v
transTime_us	.\CPMG.h	/^    double transTime_us;$/;"	m	struct:SCANPARAMS
transTime_us	.\Field_Sweep.h	/^    double transTime_us;$/;"	m	struct:SCANPARAMS
transTime_us	.\GradientEcho.h	/^	double transTime_us;$/;"	m	struct:SCANPARAMS
transTime_us	.\Hahn_echo.h	/^    double transTime_us;$/;"	m	struct:SCANPARAMS
transTime_us	.\IR.h	/^    double transTime_us;$/;"	m	struct:SCANPARAMS
transTime_us	.\JFAB_Hahn_echo_hardcode.c	/^    double transTime_us;$/;"	m	struct:SCANPARAMS	file:
transTime_us	.\nutation.h	/^    double transTime_us;$/;"	m	struct:SCANPARAMS
transTime_us	.\nutation90.h	/^    double transTime_us;$/;"	m	struct:SCANPARAMS
transTime_us	.\p90.h	/^    double transTime_us;$/;"	m	struct:SCANPARAMS
transfer	.\SpinAPI\src\io_os.h	/^	SINGLE_TRANSFER transfer; \/*Transfer object for IO request*\/$/;"	m	struct:io_future_desc
transient	.\swig\Hahn_echo\run_Hahn_echo.py	/^transient = 500.0 # us$/;"	v
transient_delay	.\Sleator_apps\CPMG\cpmg.h	/^	double transient_delay;     \/\/us$/;"	m	struct:SCANPARAMS
transient_delay	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^	double transient_delay;     \/\/us$/;"	m	struct:SCANPARAMS
true	.\SpinAPI\src\util.c	20;"	d	file:
truncStr	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.c	/^char *truncStr (char *charBuffer) $/;"	f
truncStr	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.c	/^char *truncStr (char *charBuffer) $/;"	f
tx_freq	.\mrispinapi.h	/^	DEVICE tx_freq;$/;"	m	struct:__anon4
tx_phase	.\2D_MRI.py	/^tx_phase=0.0$/;"	v
tx_phase	.\CPMG.h	/^    double tx_phase;$/;"	m	struct:SCANPARAMS
tx_phase	.\Field_Sweep.h	/^    double tx_phase;$/;"	m	struct:SCANPARAMS
tx_phase	.\GradientEcho.h	/^	double tx_phase;$/;"	m	struct:SCANPARAMS
tx_phase	.\Hahn_echo.h	/^    double tx_phase;$/;"	m	struct:SCANPARAMS
tx_phase	.\IR.h	/^    double tx_phase;$/;"	m	struct:SCANPARAMS
tx_phase	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^    double tx_phase;$/;"	m	struct:SCANPARAMS
tx_phase	.\mrispinapi.h	/^	DEVICE tx_phase;$/;"	m	struct:__anon4
tx_phase	.\nutation.h	/^    double tx_phase;$/;"	m	struct:SCANPARAMS
tx_phase	.\nutation90.h	/^    double tx_phase;$/;"	m	struct:SCANPARAMS
tx_phase	.\p90.h	/^    double tx_phase;$/;"	m	struct:SCANPARAMS
tx_phase	.\swig\Hahn_echo\run_Hahn_echo.py	/^tx_phase = 0.0$/;"	v
tx_phase	.\swig\ppg_lang\temp\run_temp.py	/^tx_phase = 0.0$/;"	v
tx_phase_width	.\SpinAPI\src\caps.h	/^  unsigned int tx_phase_width;$/;"	m	struct:__anon10
ty	.\ppg_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon7	file:
ty	.\ppg_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon8	file:
ty	.\swig\Hahn_echo\.c	/^  swig_type_info *ty;$/;"	m	struct:__anon105	file:
ty	.\swig\Hahn_echo\.c	/^  swig_type_info *ty;$/;"	m	struct:__anon106	file:
ty	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon109	file:
ty	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon110	file:
ty	.\swig\example\example_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon97	file:
ty	.\swig\example\example_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon98	file:
ty	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon101	file:
ty	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon102	file:
ty	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon113	file:
ty	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon114	file:
ty	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon117	file:
ty	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon118	file:
ty	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon121	file:
ty	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_type_info *ty;$/;"	m	struct:__anon122	file:
type	.\SpinAPI\interpreter\src\interpreter.cpp	/^	TokenType type;$/;"	m	struct:tagToken	file:
type	.\ppg_wrap.c	/^  PyTypeObject type;$/;"	m	struct:__anon5	file:
type	.\ppg_wrap.c	/^  int type;$/;"	m	struct:swig_const_info	file:
type	.\ppg_wrap.c	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:
type	.\swig\Hahn_echo\.c	/^  PyTypeObject type;$/;"	m	struct:__anon103	file:
type	.\swig\Hahn_echo\.c	/^  int type;$/;"	m	struct:swig_const_info	file:
type	.\swig\Hahn_echo\.c	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:
type	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  PyTypeObject type;$/;"	m	struct:__anon107	file:
type	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int type;$/;"	m	struct:swig_const_info	file:
type	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:
type	.\swig\example\example_wrap.c	/^  PyTypeObject type;$/;"	m	struct:__anon95	file:
type	.\swig\example\example_wrap.c	/^  int type;$/;"	m	struct:swig_const_info	file:
type	.\swig\example\example_wrap.c	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:
type	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  PyTypeObject type;$/;"	m	struct:__anon99	file:
type	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int type;$/;"	m	struct:swig_const_info	file:
type	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:
type	.\swig\ppg_lang\ppg_lang_wrap.c	/^  PyTypeObject type;$/;"	m	struct:__anon111	file:
type	.\swig\ppg_lang\ppg_lang_wrap.c	/^  int type;$/;"	m	struct:swig_const_info	file:
type	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:
type	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  PyTypeObject type;$/;"	m	struct:__anon115	file:
type	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  int type;$/;"	m	struct:swig_const_info	file:
type	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:
type	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  PyTypeObject type;$/;"	m	struct:__anon119	file:
type	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  int type;$/;"	m	struct:swig_const_info	file:
type	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:
type0	.\SpinAPI\src\ddk_headers\winddk.h	/^    } type0;$/;"	m	union:_PCI_COMMON_CONFIG::__anon80	typeref:struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_0
type1	.\SpinAPI\src\ddk_headers\winddk.h	/^      } type1;$/;"	m	union:_PCI_COMMON_CONFIG::__anon80	typeref:struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_1
type2	.\SpinAPI\src\ddk_headers\winddk.h	/^      } type2;$/;"	m	union:_PCI_COMMON_CONFIG::__anon80	typeref:struct:_PCI_COMMON_CONFIG::__anon80::_PCI_HEADER_TYPE_2
type_initial	.\ppg_wrap.c	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:
type_initial	.\swig\Hahn_echo\.c	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:
type_initial	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:
type_initial	.\swig\example\example_wrap.c	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:
type_initial	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:
type_initial	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:
type_initial	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:
type_initial	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:
type_match	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  int type_match(int actual_type,$/;"	f
type_match	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  int type_match(int actual_type,$/;"	f
typecode_string	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  const char* typecode_string(int typecode)$/;"	f
typecode_string	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  const char* typecode_string(int typecode)$/;"	f
types	.\ppg_wrap.c	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:
types	.\swig\Hahn_echo\.c	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:
types	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:
types	.\swig\example\example_wrap.c	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:
types	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:
types	.\swig\ppg_lang\ppg_lang_wrap.c	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:
types	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:
types	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:
u	.\SpinAPI\src\ddk_headers\winddk.h	/^  } u;$/;"	m	struct:_CM_PARTIAL_RESOURCE_DESCRIPTOR	typeref:union:_CM_PARTIAL_RESOURCE_DESCRIPTOR::__anon28
u	.\SpinAPI\src\ddk_headers\winddk.h	/^  } u;$/;"	m	struct:_IO_RESOURCE_DESCRIPTOR	typeref:union:_IO_RESOURCE_DESCRIPTOR::__anon37
u	.\SpinAPI\src\ddk_headers\winddk.h	/^  } u;$/;"	m	struct:_PCI_COMMON_CONFIG	typeref:union:_PCI_COMMON_CONFIG::__anon80
u	.\SpinAPI\src\ddk_headers\winddk.h	/^  } u;$/;"	m	struct:_PCI_SLOT_NUMBER	typeref:union:_PCI_SLOT_NUMBER::__anon82
ucEndpointAddress	.\SpinAPI\src\cyioctl.h	/^    UCHAR ucEndpointAddress;$/;"	m	struct:_SINGLE_TRANSFER
ulParam1	.\SpinAPI\src\cyioctl.h	/^    ULONG ulParam1;$/;"	m	struct:_ISO_ADV_PARAMS
ulParam2	.\SpinAPI\src\cyioctl.h	/^    ULONG ulParam2;$/;"	m	struct:_ISO_ADV_PARAMS
ulTimeOut	.\SpinAPI\src\cyioctl.h	/^    ULONG ulTimeOut;$/;"	m	struct:_SETUP_PACKET
updateValue	.\SpinAPI\examples\USB-PTS\USB-PTS_Controller.tcl	/^proc updateValue {} {$/;"	p
us	.\SpinAPI\include\pulseblaster.h	13;"	d
us	.\SpinAPI\src\pulseblaster.h	13;"	d
us	.\mrispinapi.h	86;"	d
us	.\spinapi.py	/^us = 1000.0$/;"	v
usage	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_160.c	/^void usage(char* argv[]) $/;"	f
usage	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_250.c	/^void usage(char* argv[]) $/;"	f
usage	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_300.c	/^void usage(char* argv[]) $/;"	f
usage	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_3200.c	/^void usage(char* argv[]) $/;"	f
usage	.\SpinAPI\examples\USB-PTS\includes\incl_fsweep_once_500.c	/^void usage(char* argv[]) $/;"	f
usb_abort_pipe	.\SpinAPI\src\driver-usb-windows.c	/^usb_abort_pipe (HANDLE handle, int pipe)$/;"	f	file:
usb_do_outp	.\SpinAPI\src\usb.c	/^usb_do_outp (unsigned int address, char data)$/;"	f
usb_get_device_name	.\SpinAPI\src\driver-usb-windows.c	/^usb_get_device_name (HANDLE handle)$/;"	f	file:
usb_get_driver_version	.\SpinAPI\src\driver-usb-windows.c	/^usb_get_driver_version (HANDLE handle)$/;"	f	file:
usb_get_friendly_name	.\SpinAPI\src\driver-usb-windows.c	/^usb_get_friendly_name (HANDLE handle)$/;"	f	file:
usb_get_handle	.\SpinAPI\src\driver-usb-windows.c	/^usb_get_handle (int dev_num)$/;"	f	file:
usb_get_num_endpoints	.\SpinAPI\src\driver-usb-windows.c	/^usb_get_num_endpoints (HANDLE handle)$/;"	f	file:
usb_io_async	.\SpinAPI\src\driver-usb-windows.c	/^usb_io_async(HANDLE handle, UCHAR ep, struct io_future_t *future)$/;"	f
usb_io_cancel	.\SpinAPI\src\driver-usb-windows.c	/^usb_io_cancel(HANDLE handle)$/;"	f
usb_io_sync	.\SpinAPI\src\driver-usb-windows.c	/^usb_io_sync(HANDLE handle, unsigned char ep, void *buffer, unsigned int nbytes)$/;"	f
usb_method	.\SpinAPI\src\caps.h	/^  int usb_method;  \/** method 1 is the original method, method 2 is what the DDSII usb boards use along with future PB24 USB boards*\/$/;"	m	struct:__anon10
usb_read_ram	.\SpinAPI\src\usb.c	/^usb_read_ram (unsigned int bank, unsigned int start_addr, unsigned int len,$/;"	f
usb_read_reg	.\SpinAPI\src\usb.c	/^usb_read_reg (unsigned int addr, unsigned int *data)$/;"	f
usb_reset_gpif	.\SpinAPI\src\usb.c	/^usb_reset_gpif (int dev_num)$/;"	f
usb_reset_pipe	.\SpinAPI\src\driver-usb-windows.c	/^usb_reset_pipe (HANDLE handle, int pipe)$/;"	f	file:
usb_set_device	.\SpinAPI\src\usb.c	/^usb_set_device (int board_num)$/;"	f
usb_write_address	.\SpinAPI\src\usb.c	/^usb_write_address (int addr)$/;"	f
usb_write_data	.\SpinAPI\src\usb.c	/^usb_write_data (const void *data, int nData)$/;"	f
usb_write_ram	.\SpinAPI\src\usb.c	/^usb_write_ram (unsigned int bank, unsigned int start_addr, unsigned int len,$/;"	f
usb_write_reg	.\SpinAPI\src\usb.c	/^usb_write_reg (unsigned int addr, unsigned int data)$/;"	f
use_amcc	.\SpinAPI\src\caps.h	/^  int use_amcc;  \/** nonzero if this board uses an amcc bridge chip. 1 for "modern" amcc protocol. 2 for "old" protocol, used by PB02PC boards*\/$/;"	m	struct:__anon10
use_shape	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	unsigned short use_shape;$/;"	m	struct:SCANPARAMS
use_shape	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.h	/^    unsigned short use_shape;$/;"	m	struct:SCANPARAMS
value	.\SpinAPI\interpreter\src\interpreter.cpp	/^	std::string value;$/;"	m	struct:tagToken	file:
value	.\SpinAPI\interpreter\src\interpreter.cpp	/^	std::string value;$/;"	m	struct:tagVariable	file:
varDelay_us	.\IR.h	/^    double varDelay_us;$/;"	m	struct:SCANPARAMS
vars	.\ppg_wrap.c	/^    swig_globalvar *vars;$/;"	m	struct:swig_varlinkobject	file:
vars	.\swig\Hahn_echo\.c	/^    swig_globalvar *vars;$/;"	m	struct:swig_varlinkobject	file:
vars	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^    swig_globalvar *vars;$/;"	m	struct:swig_varlinkobject	file:
vars	.\swig\example\example_wrap.c	/^    swig_globalvar *vars;$/;"	m	struct:swig_varlinkobject	file:
vars	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^    swig_globalvar *vars;$/;"	m	struct:swig_varlinkobject	file:
vars	.\swig\ppg_lang\ppg_lang_wrap.c	/^    swig_globalvar *vars;$/;"	m	struct:swig_varlinkobject	file:
vars	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^    swig_globalvar *vars;$/;"	m	struct:swig_varlinkobject	file:
vars	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^    swig_globalvar *vars;$/;"	m	struct:swig_varlinkobject	file:
vd_step	.\IR.h	/^    double vd_step;$/;"	m	struct:SCANPARAMS
ver_10	.\SpinAPI\drivers\_uninstall.bat	/^:ver_10$/;"	l
ver_2000	.\SpinAPI\drivers\_uninstall.bat	/^:ver_2000$/;"	l
ver_2003	.\SpinAPI\drivers\_uninstall.bat	/^:ver_2003$/;"	l
ver_2008	.\SpinAPI\drivers\_uninstall.bat	/^:ver_2008$/;"	l
ver_7	.\SpinAPI\drivers\_uninstall.bat	/^:ver_7$/;"	l
ver_8	.\SpinAPI\drivers\_uninstall.bat	/^:ver_8$/;"	l
ver_81	.\SpinAPI\drivers\_uninstall.bat	/^:ver_81$/;"	l
ver_vista	.\SpinAPI\drivers\_uninstall.bat	/^:ver_vista$/;"	l
ver_xp	.\SpinAPI\drivers\_uninstall.bat	/^:ver_xp$/;"	l
verbose	.\GradientEcho.h	/^	int verbose;$/;"	m	struct:SCANPARAMS
verbose	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^	unsigned short verbose;$/;"	m	struct:SCANPARAMS
verifyArguments	.\GradientEcho.c	/^int verifyArguments(SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\JFAB_Hahn_echo_hardcode.c	/^int verifyArguments(SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\RPG_CPMG.c	/^int verifyArguments(SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\RPG_Field_Sweep.c	/^int verifyArguments(SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\RPG_Hahn_echo.c	/^int verifyArguments(SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\RPG_IR.c	/^int verifyArguments(SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\RPG_nutation.c	/^int verifyArguments(SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\RPG_nutation90.c	/^int verifyArguments(SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\RPG_p90.c	/^int verifyArguments(SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\Sleator_apps\CPMG\cpmg.c	/^int verifyArguments (SCANPARAMS * scanParams){$/;"	f
verifyArguments	.\Sleator_apps\Hahn_echo\Hahn_echo.c	/^verifyArguments (SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\Sleator_apps\Hahn_echo_sweep\Hahn_echo_sweep.c	/^verifyArguments (SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\Sleator_apps\Stimulated_echo\Stimulated_echo.c	/^verifyArguments (SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\Sleator_apps\T1_IR_sweep\T1_IR_sweep.c	/^verifyArguments (SCANPARAMS * scanParams)$/;"	f
verifyArguments	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.c	/^verifyArguments (SCANPARAMS * scanParams, int verbose)$/;"	f
verifyArguments	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^int verifyArguments (SCANPARAMS * scanParams){$/;"	f
verifyParams	.\swig\Hahn_echo\run_Hahn_echo.py	/^def verifyParams():$/;"	f
version	.\SpinAPI\src\spinapi.c	/^char *version = VER_STRING_API;$/;"	v
veryfastDown	.\SpinAPI\examples\USB-PTS\USB-PTS_Controller.tcl	/^proc veryfastDown {} {$/;"	p
veryfastUp	.\SpinAPI\examples\USB-PTS\USB-PTS_Controller.tcl	/^proc veryfastUp {} {$/;"	p
wHubCharacteristics	.\SpinAPI\src\ddk_headers\usb100.h	/^	USHORT  wHubCharacteristics;$/;"	m	struct:_USB_HUB_DESCRIPTOR
wIndex	.\SpinAPI\src\cyioctl.h	/^        USHORT wIndex;$/;"	m	union:_SETUP_PACKET::__anon13
wIndx	.\SpinAPI\src\cyioctl.h	/^        WORD_SPLIT wIndx;$/;"	m	union:_SETUP_PACKET::__anon13
wLen	.\SpinAPI\src\cyioctl.h	/^        WORD_SPLIT wLen;$/;"	m	union:_SETUP_PACKET::__anon14
wLength	.\SpinAPI\src\cyioctl.h	/^        USHORT wLength;$/;"	m	union:_SETUP_PACKET::__anon14
wMaxPacketSize	.\SpinAPI\src\ddk_headers\usb100.h	/^  USHORT  wMaxPacketSize;$/;"	m	struct:_USB_ENDPOINT_DESCRIPTOR
wProductType	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  wProductType;$/;"	m	struct:_RTL_OSVERSIONINFOEXW
wReserved	.\SpinAPI\src\ddk_headers\winddk.h	/^  UCHAR  wReserved;$/;"	m	struct:_RTL_OSVERSIONINFOEXW
wReserved	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD wReserved;				\/* Not currently used					*\/$/;"	m	struct:_FTDCB
wReserved1	.\SpinAPI\src\ftd2xx\ftd2xx.h	/^		WORD wReserved1;			\/* Fill for now.						*\/$/;"	m	struct:_FTDCB
wServicePackMajor	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  wServicePackMajor;$/;"	m	struct:_RTL_OSVERSIONINFOEXW
wServicePackMinor	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  wServicePackMinor;$/;"	m	struct:_RTL_OSVERSIONINFOEXW
wSuiteMask	.\SpinAPI\src\ddk_headers\winddk.h	/^  USHORT  wSuiteMask;$/;"	m	struct:_RTL_OSVERSIONINFOEXW
wTotalLength	.\SpinAPI\src\ddk_headers\usb100.h	/^  USHORT  wTotalLength;$/;"	m	struct:_USB_CONFIGURATION_DESCRIPTOR
wVal	.\SpinAPI\src\cyioctl.h	/^        WORD_SPLIT wVal;$/;"	m	union:_SETUP_PACKET::__anon12
wValue	.\SpinAPI\src\cyioctl.h	/^        USHORT wValue;$/;"	m	union:_SETUP_PACKET::__anon12
wait_ms	.\SpinAPI\src\io.h	/^	unsigned int wait_ms; \/*< Maximum time to wait, in ms, before abandoning the IO request*\/$/;"	m	struct:io_future_t
wait_time	.\SpinAPI\examples\RadioProcessor\CYCLOPS_nmr.h	/^    double wait_time;$/;"	m	struct:SCANPARAMS
warn_os	.\SpinAPI\drivers\_uninstall.bat	/^:warn_os$/;"	l
width	.\devices.h	/^	int width;$/;"	m	struct:__anon3
writable	.\devices.h	/^	int writable;$/;"	m	struct:__anon3
writeDataToFiles	.\Sleator_apps\CPMG\cpmg.c	/^ void writeDataToFiles(SCANPARAMS* myScan, int* real, int* imag){$/;"	f
writeDataToFiles	.\SpinAPI\examples\RadioProcessor\singlepulse_nmr.c	/^void writeDataToFiles(SCANPARAMS* myScan, int* real, int* imag){$/;"	f
writebufferproc	.\ppg_wrap.c	/^typedef getwritebufferproc writebufferproc;$/;"	t	file:
writebufferproc	.\swig\Hahn_echo\.c	/^typedef getwritebufferproc writebufferproc;$/;"	t	file:
writebufferproc	.\swig\Hahn_echo\Hahn_echo_wrap.c	/^typedef getwritebufferproc writebufferproc;$/;"	t	file:
writebufferproc	.\swig\example\example_wrap.c	/^typedef getwritebufferproc writebufferproc;$/;"	t	file:
writebufferproc	.\swig\example\get_rand_array\get_rand_array_wrap.c	/^typedef getwritebufferproc writebufferproc;$/;"	t	file:
writebufferproc	.\swig\ppg_lang\ppg_lang_wrap.c	/^typedef getwritebufferproc writebufferproc;$/;"	t	file:
writebufferproc	.\swig\ppg_lang\temp\ppg_temp_wrap.c	/^typedef getwritebufferproc writebufferproc;$/;"	t	file:
writebufferproc	.\swig\ppg_lang\temp_ph\ppg_temp_ph_wrap.c	/^typedef getwritebufferproc writebufferproc;$/;"	t	file:
x	.\proc_quick.py	/^    x = even_echo.getaxis('echo')$/;"	v
x	.\swig\Hahn_echo\proc_echo.py	/^    x = even_echo.getaxis('echo')$/;"	v
x_fit	.\proc_quick.py	/^    x_fit = linspace(x.min(), x.max(), 5000)$/;"	v
x_fit	.\swig\Hahn_echo\proc_echo.py	/^    x_fit = linspace(x.min(), x.max(), 5000)$/;"	v
ydata	.\proc_quick.py	/^    ydata = ((even_echo).data) - avg_min$/;"	v
ydata	.\swig\Hahn_echo\proc_echo.py	/^    ydata = ((even_echo).data) - avg_min$/;"	v
ydata_abs	.\proc_quick.py	/^    ydata_abs = (abs(even_echo).data) - avg_min$/;"	v
ydata_abs	.\swig\Hahn_echo\proc_echo.py	/^    ydata_abs = (abs(even_echo).data) - avg_min$/;"	v
